Map:   0%|          | 0/17944 [00:00<?, ? examples/s]Map:   1%|          | 120/17944 [00:00<00:15, 1170.15 examples/s]Map:   1%|▏         | 249/17944 [00:00<00:14, 1236.67 examples/s]Map:   2%|▏         | 379/17944 [00:00<00:13, 1258.58 examples/s]Map:   3%|▎         | 505/17944 [00:00<00:13, 1254.74 examples/s]Map:   4%|▍         | 695/17944 [00:00<00:13, 1257.11 examples/s]Map:   5%|▍         | 825/17944 [00:00<00:13, 1266.97 examples/s]Map:   5%|▌         | 954/17944 [00:00<00:13, 1271.97 examples/s]Map:   6%|▌         | 1084/17944 [00:00<00:13, 1276.06 examples/s]Map:   7%|▋         | 1214/17944 [00:00<00:13, 1281.24 examples/s]Map:   7%|▋         | 1344/17944 [00:01<00:12, 1281.11 examples/s]Map:   8%|▊         | 1474/17944 [00:01<00:12, 1283.98 examples/s]Map:   9%|▉         | 1652/17944 [00:01<00:13, 1241.03 examples/s]Map:  10%|▉         | 1782/17944 [00:01<00:12, 1255.96 examples/s]Map:  11%|█         | 1912/17944 [00:01<00:12, 1266.22 examples/s]Map:  12%|█▏        | 2103/17944 [00:01<00:12, 1264.99 examples/s]Map:  12%|█▏        | 2233/17944 [00:01<00:12, 1273.36 examples/s]Map:  13%|█▎        | 2364/17944 [00:01<00:12, 1279.86 examples/s]Map:  14%|█▍        | 2495/17944 [00:01<00:12, 1284.37 examples/s]Map:  15%|█▍        | 2626/17944 [00:02<00:11, 1287.91 examples/s]Map:  16%|█▌        | 2802/17944 [00:02<00:12, 1240.86 examples/s]Map:  16%|█▋        | 2933/17944 [00:02<00:11, 1256.21 examples/s]Map:  17%|█▋        | 3060/17944 [00:02<00:11, 1258.71 examples/s]Map:  18%|█▊        | 3190/17944 [00:02<00:11, 1268.64 examples/s]Map:  19%|█▊        | 3320/17944 [00:02<00:11, 1274.99 examples/s]Map:  19%|█▉        | 3450/17944 [00:02<00:11, 1280.19 examples/s]Map:  20%|█▉        | 3580/17944 [00:02<00:11, 1284.28 examples/s]Map:  21%|██        | 3710/17944 [00:02<00:11, 1286.59 examples/s]Map:  22%|██▏       | 3899/17944 [00:03<00:11, 1273.05 examples/s]Map:  22%|██▏       | 4029/17944 [00:03<00:10, 1279.35 examples/s]Map:  23%|██▎       | 4158/17944 [00:03<00:10, 1279.99 examples/s]Map:  24%|██▍       | 4289/17944 [00:03<00:10, 1284.90 examples/s]Map:  25%|██▍       | 4420/17944 [00:03<00:10, 1290.24 examples/s]Map:  25%|██▌       | 4552/17944 [00:03<00:10, 1294.89 examples/s]Map:  26%|██▌       | 4684/17944 [00:03<00:10, 1298.06 examples/s]Map:  27%|██▋       | 4879/17944 [00:03<00:10, 1293.60 examples/s]Map:  28%|██▊       | 5058/17944 [00:03<00:10, 1255.90 examples/s]Map:  29%|██▉       | 5189/17944 [00:04<00:10, 1266.76 examples/s]Map:  30%|██▉       | 5318/17944 [00:04<00:09, 1271.48 examples/s]Map:  30%|███       | 5449/17944 [00:04<00:09, 1278.65 examples/s]Map:  31%|███       | 5579/17944 [00:04<00:09, 1283.69 examples/s]Map:  32%|███▏      | 5710/17944 [00:04<00:09, 1287.09 examples/s]Map:  33%|███▎      | 5841/17944 [00:04<00:09, 1290.07 examples/s]Map:  33%|███▎      | 5973/17944 [00:04<00:09, 1295.51 examples/s]Map:  34%|███▍      | 6149/17944 [00:04<00:09, 1243.88 examples/s]Map:  35%|███▌      | 6316/17944 [00:04<00:09, 1192.83 examples/s]Map:  36%|███▌      | 6478/17944 [00:05<00:09, 1150.94 examples/s]Map:  37%|███▋      | 6636/17944 [00:05<00:10, 1115.96 examples/s]Map:  38%|███▊      | 6763/17944 [00:05<00:09, 1150.02 examples/s]Map:  38%|███▊      | 6893/17944 [00:05<00:09, 1185.11 examples/s]Map:  39%|███▉      | 7023/17944 [00:05<00:09, 1212.94 examples/s]Map:  40%|███▉      | 7152/17944 [00:05<00:08, 1227.10 examples/s]Map:  41%|████      | 7336/17944 [00:05<00:08, 1224.74 examples/s]Map:  42%|████▏     | 7467/17944 [00:05<00:08, 1243.58 examples/s]Map:  42%|████▏     | 7598/17944 [00:06<00:08, 1258.51 examples/s]Map:  43%|████▎     | 7726/17944 [00:06<00:08, 1260.59 examples/s]Map:  44%|████▍     | 7856/17944 [00:06<00:07, 1269.00 examples/s]Map:  45%|████▍     | 7987/17944 [00:06<00:07, 1276.72 examples/s]Map:  45%|████▌     | 8117/17944 [00:06<00:07, 1282.31 examples/s]Map:  46%|████▌     | 8248/17944 [00:06<00:07, 1287.08 examples/s]Map:  47%|████▋     | 8431/17944 [00:06<00:07, 1256.61 examples/s]Map:  48%|████▊     | 8562/17944 [00:06<00:07, 1267.56 examples/s]Map:  48%|████▊     | 8693/17944 [00:06<00:07, 1276.16 examples/s]Map:  50%|████▉     | 8886/17944 [00:07<00:07, 1276.40 examples/s]Map:  50%|█████     | 9017/17944 [00:07<00:06, 1281.62 examples/s]Map:  51%|█████     | 9148/17944 [00:07<00:06, 1286.25 examples/s]Map:  52%|█████▏    | 9279/17944 [00:07<00:06, 1288.72 examples/s]Map:  52%|█████▏    | 9410/17944 [00:07<00:06, 1290.58 examples/s]Map:  53%|█████▎    | 9589/17944 [00:07<00:06, 1251.51 examples/s]Map:  54%|█████▍    | 9720/17944 [00:07<00:06, 1263.48 examples/s]Map:  55%|█████▍    | 9851/17944 [00:07<00:06, 1274.06 examples/s]Map:  57%|█████▋    | 10178/17944 [00:07<00:04, 1832.79 examples/s]Map:  67%|██████▋   | 11938/17944 [00:08<00:00, 6340.21 examples/s]Map:  76%|███████▋  | 13704/17944 [00:08<00:00, 9619.81 examples/s]Map:  86%|████████▌ | 15418/17944 [00:08<00:00, 11821.48 examples/s]Map:  95%|█████████▌| 17121/17944 [00:08<00:00, 13354.14 examples/s]Map: 100%|██████████| 17944/17944 [00:08<00:00, 2096.17 examples/s] 
Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]Loading checkpoint shards:  25%|██▌       | 1/4 [00:01<00:04,  1.41s/it]Loading checkpoint shards:  50%|█████     | 2/4 [00:02<00:02,  1.34s/it]Loading checkpoint shards:  75%|███████▌  | 3/4 [00:04<00:01,  1.34s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:05<00:00,  1.28s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:05<00:00,  1.31s/it]
  0%|          | 0/9960 [00:00<?, ?it/s]  2%|▏         | 152/9960 [00:00<00:06, 1515.85it/s]  3%|▎         | 320/9960 [00:00<00:05, 1607.20it/s]  5%|▍         | 492/9960 [00:00<00:05, 1656.08it/s]  7%|▋         | 662/9960 [00:00<00:05, 1673.21it/s]  8%|▊         | 833/9960 [00:00<00:05, 1683.86it/s] 10%|█         | 1005/9960 [00:00<00:05, 1695.29it/s] 12%|█▏        | 1178/9960 [00:00<00:05, 1704.47it/s] 14%|█▎        | 1351/9960 [00:00<00:05, 1711.84it/s] 15%|█▌        | 1523/9960 [00:00<00:05, 1571.25it/s] 17%|█▋        | 1694/9960 [00:01<00:05, 1610.52it/s] 19%|█▉        | 1869/9960 [00:01<00:04, 1649.43it/s] 21%|██        | 2045/9960 [00:01<00:04, 1680.16it/s] 22%|██▏       | 2220/9960 [00:01<00:04, 1700.31it/s] 24%|██▍       | 2392/9960 [00:01<00:04, 1704.16it/s] 26%|██▌       | 2563/9960 [00:01<00:04, 1703.31it/s] 27%|██▋       | 2734/9960 [00:01<00:04, 1703.82it/s] 29%|██▉       | 2905/9960 [00:01<00:04, 1701.42it/s] 31%|███       | 3076/9960 [00:01<00:04, 1548.35it/s] 33%|███▎      | 3243/9960 [00:01<00:04, 1581.85it/s] 34%|███▍      | 3413/9960 [00:02<00:04, 1614.64it/s] 36%|███▌      | 3583/9960 [00:02<00:03, 1638.07it/s] 38%|███▊      | 3749/9960 [00:02<00:03, 1640.61it/s] 39%|███▉      | 3914/9960 [00:02<00:03, 1639.04it/s] 41%|████      | 4079/9960 [00:02<00:03, 1636.11it/s] 43%|████▎     | 4244/9960 [00:02<00:03, 1627.46it/s] 44%|████▍     | 4410/9960 [00:02<00:03, 1634.74it/s] 46%|████▌     | 4574/9960 [00:02<00:03, 1521.00it/s] 48%|████▊     | 4735/9960 [00:02<00:03, 1545.68it/s] 49%|████▉     | 4910/9960 [00:03<00:03, 1603.30it/s] 51%|█████     | 5087/9960 [00:03<00:02, 1651.55it/s] 53%|█████▎    | 5261/9960 [00:03<00:02, 1676.47it/s] 55%|█████▍    | 5434/9960 [00:03<00:02, 1690.79it/s] 56%|█████▋    | 5610/9960 [00:03<00:02, 1708.26it/s] 58%|█████▊    | 5782/9960 [00:03<00:02, 1701.59it/s] 60%|█████▉    | 5953/9960 [00:03<00:02, 1702.58it/s] 61%|██████▏   | 6124/9960 [00:03<00:02, 1658.12it/s] 63%|██████▎   | 6299/9960 [00:03<00:02, 1684.23it/s] 65%|██████▍   | 6472/9960 [00:03<00:02, 1696.55it/s] 67%|██████▋   | 6644/9960 [00:04<00:01, 1702.32it/s] 68%|██████▊   | 6819/9960 [00:04<00:01, 1714.50it/s] 70%|███████   | 6993/9960 [00:04<00:01, 1721.00it/s] 72%|███████▏  | 7167/9960 [00:04<00:01, 1726.21it/s] 74%|███████▎  | 7340/9960 [00:04<00:01, 1722.08it/s] 75%|███████▌  | 7513/9960 [00:04<00:01, 1697.46it/s] 77%|███████▋  | 7683/9960 [00:04<00:01, 1689.85it/s] 79%|███████▉  | 7856/9960 [00:04<00:01, 1698.98it/s] 81%|████████  | 8027/9960 [00:04<00:01, 1699.63it/s] 82%|████████▏ | 8200/9960 [00:04<00:01, 1706.96it/s] 84%|████████▍ | 8373/9960 [00:05<00:00, 1712.52it/s] 86%|████████▌ | 8545/9960 [00:05<00:00, 1704.51it/s] 88%|████████▊ | 8717/9960 [00:05<00:00, 1706.60it/s] 89%|████████▉ | 8891/9960 [00:05<00:00, 1713.82it/s] 91%|█████████ | 9067/9960 [00:05<00:00, 1725.74it/s] 93%|█████████▎| 9240/9960 [00:05<00:00, 1717.00it/s] 95%|█████████▍| 9416/9960 [00:05<00:00, 1729.16it/s] 96%|█████████▋| 9589/9960 [00:05<00:00, 1727.39it/s] 98%|█████████▊| 9762/9960 [00:05<00:00, 1698.47it/s]100%|█████████▉| 9932/9960 [00:05<00:00, 1687.86it/s]100%|██████████| 9960/9960 [00:05<00:00, 1672.57it/s]
Epoch 1/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]We detected that you are passing `past_key_values` as a tuple and this is deprecated and will be removed in v4.43. Please use an appropriate `Cache` class (https://huggingface.co/docs/transformers/v4.41.3/en/internal/generation_utils#transformers.Cache)
Epoch 1/20 Batches: 100%|██████████| 1/1 [00:01<00:00,  1.65s/it]                                                                 epoch_loss: 0.713432788848877
Epoch [1/20], Loss: 0.7134
Best test AUROC: 0.5896, at epoch: 0
Epoch [1/20],Test AUROC: 0.5896
Epoch 2/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 2/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                 epoch_loss: 0.6797596216201782
Epoch [2/20], Loss: 0.6798
Best test AUROC: 0.6758, at epoch: 1
Epoch [2/20],Test AUROC: 0.6758
Epoch 3/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 3/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                 epoch_loss: 0.6533498167991638
Epoch [3/20], Loss: 0.6533
Best test AUROC: 0.7148, at epoch: 2
Epoch [3/20],Test AUROC: 0.7148
Epoch 4/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 4/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                 epoch_loss: 0.6301732063293457
Epoch [4/20], Loss: 0.6302
Best test AUROC: 0.7411, at epoch: 3
Epoch [4/20],Test AUROC: 0.7411
Epoch 5/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 5/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                 epoch_loss: 0.6056229472160339
Epoch [5/20], Loss: 0.6056
Best test AUROC: 0.7538, at epoch: 4
Epoch [5/20],Test AUROC: 0.7538
Epoch 6/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 6/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                 epoch_loss: 0.5791741013526917
Epoch [6/20], Loss: 0.5792
Best test AUROC: 0.7620, at epoch: 5
Epoch [6/20],Test AUROC: 0.7620
Epoch 7/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 7/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                 epoch_loss: 0.5533912181854248
Epoch [7/20], Loss: 0.5534
Best test AUROC: 0.7678, at epoch: 6
Epoch [7/20],Test AUROC: 0.7678
Epoch 8/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 8/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                 epoch_loss: 0.5255997776985168
Epoch [8/20], Loss: 0.5256
Best test AUROC: 0.7706, at epoch: 7
Epoch [8/20],Test AUROC: 0.7706
Epoch 9/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 9/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                 epoch_loss: 0.49439308047294617
Epoch [9/20], Loss: 0.4944
Best test AUROC: 0.7711, at epoch: 8
Epoch [9/20],Test AUROC: 0.7711
Epoch 10/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 10/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                  epoch_loss: 0.4593951106071472
Epoch [10/20], Loss: 0.4594
Best test AUROC: 0.7726, at epoch: 9
Epoch [10/20],Test AUROC: 0.7726
Epoch 11/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 11/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                  epoch_loss: 0.4211050271987915
Epoch [11/20], Loss: 0.4211
Best test AUROC: 0.7734, at epoch: 10
Epoch [11/20],Test AUROC: 0.7734
Epoch 12/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 12/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                  epoch_loss: 0.39034217596054077
Epoch [12/20], Loss: 0.3903
Epoch [12/20],Test AUROC: 0.7709
Epoch 13/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 13/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                  epoch_loss: 0.35907483100891113
Epoch [13/20], Loss: 0.3591
Epoch [13/20],Test AUROC: 0.7685
Epoch 14/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 14/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.3296804130077362
Epoch [14/20], Loss: 0.3297
Epoch [14/20],Test AUROC: 0.7651
Epoch 15/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 15/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.3126288652420044
Epoch [15/20], Loss: 0.3126
Best test AUROC: 0.7735, at epoch: 14
Epoch [15/20],Test AUROC: 0.7735
Epoch 16/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 16/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                  epoch_loss: 0.29205235838890076
Epoch [16/20], Loss: 0.2921
Best test AUROC: 0.7740, at epoch: 15
Epoch [16/20],Test AUROC: 0.7740
Epoch 17/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 17/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                  epoch_loss: 0.27891308069229126
Epoch [17/20], Loss: 0.2789
Best test AUROC: 0.7747, at epoch: 16
Epoch [17/20],Test AUROC: 0.7747
Epoch 18/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 18/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.26203784346580505
Epoch [18/20], Loss: 0.2620
Best test AUROC: 0.7748, at epoch: 17
Epoch [18/20],Test AUROC: 0.7748
Epoch 19/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 19/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.2421562671661377
Epoch [19/20], Loss: 0.2422
Best test AUROC: 0.7755, at epoch: 18
Epoch [19/20],Test AUROC: 0.7755
Epoch 20/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 20/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.22134318947792053
Epoch [20/20], Loss: 0.2213
Best test AUROC: 0.7770, at epoch: 19
Epoch [20/20],Test AUROC: 0.7770
  0%|          | 0/115 [00:00<?, ?it/s]  1%|          | 1/115 [00:00<00:55,  2.07it/s]  2%|▏         | 2/115 [00:01<00:58,  1.95it/s]  3%|▎         | 3/115 [00:01<00:48,  2.30it/s]  3%|▎         | 4/115 [00:01<00:52,  2.11it/s]  4%|▍         | 5/115 [00:02<00:53,  2.06it/s]  5%|▌         | 6/115 [00:02<00:49,  2.18it/s]  6%|▌         | 7/115 [00:03<00:46,  2.35it/s]  7%|▋         | 8/115 [00:03<00:45,  2.34it/s]  8%|▊         | 9/115 [00:04<00:47,  2.22it/s]  9%|▊         | 10/115 [00:04<00:49,  2.10it/s] 10%|▉         | 11/115 [00:04<00:44,  2.32it/s] 10%|█         | 12/115 [00:05<00:48,  2.11it/s] 11%|█▏        | 13/115 [00:06<00:48,  2.08it/s] 12%|█▏        | 14/115 [00:06<00:49,  2.04it/s] 13%|█▎        | 15/115 [00:06<00:44,  2.25it/s] 14%|█▍        | 16/115 [00:07<00:48,  2.04it/s] 15%|█▍        | 17/115 [00:08<00:50,  1.95it/s] 16%|█▌        | 18/115 [00:08<00:51,  1.87it/s] 17%|█▋        | 19/115 [00:08<00:45,  2.11it/s] 17%|█▋        | 20/115 [00:09<00:43,  2.17it/s] 18%|█▊        | 21/115 [00:09<00:45,  2.07it/s] 19%|█▉        | 22/115 [00:10<00:45,  2.04it/s] 20%|██        | 23/115 [00:10<00:40,  2.26it/s] 21%|██        | 24/115 [00:11<00:39,  2.32it/s] 22%|██▏       | 25/115 [00:11<00:36,  2.48it/s] 23%|██▎       | 26/115 [00:11<00:33,  2.62it/s] 23%|██▎       | 27/115 [00:12<00:37,  2.34it/s] 24%|██▍       | 28/115 [00:12<00:40,  2.15it/s] 25%|██▌       | 29/115 [00:13<00:44,  1.92it/s] 26%|██▌       | 30/115 [00:14<00:44,  1.90it/s] 27%|██▋       | 31/115 [00:14<00:40,  2.06it/s] 28%|██▊       | 32/115 [00:14<00:40,  2.05it/s] 29%|██▊       | 33/115 [00:15<00:42,  1.91it/s] 30%|██▉       | 34/115 [00:16<00:41,  1.97it/s] 30%|███       | 35/115 [00:16<00:39,  2.03it/s] 31%|███▏      | 36/115 [00:17<00:40,  1.97it/s] 32%|███▏      | 37/115 [00:17<00:40,  1.90it/s] 33%|███▎      | 38/115 [00:18<00:39,  1.95it/s] 34%|███▍      | 39/115 [00:18<00:36,  2.09it/s] 35%|███▍      | 40/115 [00:18<00:34,  2.16it/s] 36%|███▌      | 41/115 [00:19<00:37,  1.95it/s] 37%|███▋      | 42/115 [00:20<00:36,  1.97it/s] 37%|███▋      | 43/115 [00:20<00:42,  1.71it/s] 38%|███▊      | 44/115 [00:21<00:46,  1.52it/s] 39%|███▉      | 45/115 [00:22<00:43,  1.59it/s] 40%|████      | 46/115 [00:22<00:42,  1.62it/s] 41%|████      | 47/115 [00:23<00:39,  1.72it/s] 42%|████▏     | 48/115 [00:24<00:52,  1.28it/s] 43%|████▎     | 49/115 [00:25<00:49,  1.35it/s] 43%|████▎     | 50/115 [00:25<00:44,  1.45it/s] 44%|████▍     | 51/115 [00:26<00:40,  1.57it/s] 45%|████▌     | 52/115 [00:26<00:40,  1.55it/s] 46%|████▌     | 53/115 [00:27<00:39,  1.57it/s] 47%|████▋     | 54/115 [00:28<00:37,  1.63it/s] 48%|████▊     | 55/115 [00:28<00:31,  1.90it/s] 49%|████▊     | 56/115 [00:28<00:29,  2.01it/s] 50%|████▉     | 57/115 [00:29<00:25,  2.30it/s] 50%|█████     | 58/115 [00:29<00:23,  2.43it/s] 51%|█████▏    | 59/115 [00:29<00:21,  2.64it/s] 52%|█████▏    | 60/115 [00:30<00:23,  2.35it/s] 53%|█████▎    | 61/115 [00:30<00:23,  2.30it/s] 54%|█████▍    | 62/115 [00:31<00:24,  2.16it/s] 55%|█████▍    | 63/115 [00:31<00:26,  1.95it/s] 56%|█████▌    | 64/115 [00:32<00:25,  2.00it/s] 57%|█████▋    | 65/115 [00:32<00:24,  2.07it/s] 57%|█████▋    | 66/115 [00:33<00:24,  1.99it/s] 58%|█████▊    | 67/115 [00:33<00:22,  2.17it/s] 59%|█████▉    | 68/115 [00:34<00:20,  2.26it/s] 60%|██████    | 69/115 [00:34<00:21,  2.18it/s] 61%|██████    | 70/115 [00:35<00:21,  2.12it/s] 62%|██████▏   | 71/115 [00:35<00:20,  2.14it/s] 63%|██████▎   | 72/115 [00:36<00:20,  2.09it/s] 63%|██████▎   | 73/115 [00:36<00:18,  2.25it/s] 64%|██████▍   | 74/115 [00:36<00:17,  2.34it/s] 65%|██████▌   | 75/115 [00:37<00:17,  2.30it/s] 66%|██████▌   | 76/115 [00:37<00:18,  2.13it/s] 67%|██████▋   | 77/115 [00:38<00:18,  2.03it/s] 68%|██████▊   | 78/115 [00:38<00:16,  2.18it/s] 69%|██████▊   | 79/115 [00:39<00:17,  2.08it/s] 70%|██████▉   | 80/115 [00:39<00:15,  2.24it/s] 70%|███████   | 81/115 [00:40<00:14,  2.29it/s] 71%|███████▏  | 82/115 [00:40<00:14,  2.31it/s] 72%|███████▏  | 83/115 [00:40<00:13,  2.38it/s] 73%|███████▎  | 84/115 [00:41<00:13,  2.24it/s] 74%|███████▍  | 85/115 [00:41<00:13,  2.19it/s] 75%|███████▍  | 86/115 [00:42<00:13,  2.07it/s] 76%|███████▌  | 87/115 [00:43<00:15,  1.85it/s] 77%|███████▋  | 88/115 [00:43<00:14,  1.90it/s] 77%|███████▋  | 89/115 [00:43<00:11,  2.17it/s] 78%|███████▊  | 90/115 [00:44<00:11,  2.19it/s] 79%|███████▉  | 91/115 [00:45<00:12,  1.89it/s] 80%|████████  | 92/115 [00:45<00:12,  1.79it/s] 81%|████████  | 93/115 [00:46<00:12,  1.79it/s] 82%|████████▏ | 94/115 [00:46<00:11,  1.89it/s] 83%|████████▎ | 95/115 [00:47<00:10,  1.95it/s] 83%|████████▎ | 96/115 [00:47<00:10,  1.83it/s] 84%|████████▍ | 97/115 [00:48<00:09,  1.89it/s] 85%|████████▌ | 98/115 [00:48<00:08,  2.06it/s] 86%|████████▌ | 99/115 [00:49<00:07,  2.14it/s] 87%|████████▋ | 100/115 [00:49<00:06,  2.30it/s] 88%|████████▊ | 101/115 [00:50<00:06,  2.20it/s] 89%|████████▊ | 102/115 [00:50<00:06,  2.15it/s] 90%|████████▉ | 103/115 [00:50<00:05,  2.36it/s] 90%|█████████ | 104/115 [00:51<00:04,  2.27it/s] 91%|█████████▏| 105/115 [00:51<00:03,  2.58it/s] 92%|█████████▏| 106/115 [00:52<00:03,  2.38it/s] 93%|█████████▎| 107/115 [00:52<00:03,  2.45it/s] 94%|█████████▍| 108/115 [00:52<00:02,  2.65it/s] 95%|█████████▍| 109/115 [00:53<00:02,  2.77it/s] 96%|█████████▌| 110/115 [00:54<00:02,  1.87it/s] 97%|█████████▋| 111/115 [00:54<00:02,  1.66it/s] 97%|█████████▋| 112/115 [00:56<00:02,  1.06it/s] 98%|█████████▊| 113/115 [00:56<00:01,  1.28it/s] 99%|█████████▉| 114/115 [00:57<00:00,  1.46it/s]100%|██████████| 115/115 [00:57<00:00,  2.00it/s]
tsv_main1.py:175: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  exemplar_label = torch.tensor(exemplar_labels).cuda()
tsv_main1.py:182: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  augmented_labels = torch.concat((selected_labels, torch.tensor(exemplar_labels).clone().cuda()))
Epoch 1/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 1/20 Batches:  33%|███▎      | 1/3 [00:01<00:02,  1.08s/it]Epoch 1/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.44it/s]Epoch 1/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                 epoch_loss: 0.3762795676787694
Epoch [1/20], Loss: 0.3763
Best test AUROC: 0.7956, at epoch: 20
Epoch 2/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 2/20 Batches:  33%|███▎      | 1/3 [00:01<00:02,  1.08s/it]Epoch 2/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.44it/s]Epoch 2/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                 epoch_loss: 0.23526346683502197
Epoch [2/20], Loss: 0.2353
Best test AUROC: 0.8069, at epoch: 21
Epoch 3/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 3/20 Batches:  33%|███▎      | 1/3 [00:01<00:02,  1.08s/it]Epoch 3/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.43it/s]Epoch 3/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                 epoch_loss: 0.20116921762625375
Epoch [3/20], Loss: 0.2012
Epoch 4/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 4/20 Batches:  33%|███▎      | 1/3 [00:01<00:02,  1.08s/it]Epoch 4/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.44it/s]Epoch 4/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                 epoch_loss: 0.1490886906782786
Epoch [4/20], Loss: 0.1491
Epoch 5/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 5/20 Batches:  33%|███▎      | 1/3 [00:01<00:02,  1.08s/it]Epoch 5/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.43it/s]Epoch 5/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                 epoch_loss: 0.1246830423672994
Epoch [5/20], Loss: 0.1247
Epoch 6/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 6/20 Batches:  33%|███▎      | 1/3 [00:01<00:02,  1.08s/it]Epoch 6/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.44it/s]Epoch 6/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                 epoch_loss: 0.09602896745006244
Epoch [6/20], Loss: 0.0960
Epoch 7/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 7/20 Batches:  33%|███▎      | 1/3 [00:01<00:02,  1.08s/it]Epoch 7/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.43it/s]Epoch 7/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                 epoch_loss: 0.07640550285577774
Epoch [7/20], Loss: 0.0764
Best test AUROC: 0.8100, at epoch: 26
Epoch 8/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 8/20 Batches:  33%|███▎      | 1/3 [00:01<00:02,  1.08s/it]Epoch 8/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.43it/s]Epoch 8/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                 epoch_loss: 0.06181025753418604
Epoch [8/20], Loss: 0.0618
Best test AUROC: 0.8104, at epoch: 27
Epoch 9/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 9/20 Batches:  33%|███▎      | 1/3 [00:01<00:02,  1.08s/it]Epoch 9/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.43it/s]Epoch 9/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                 epoch_loss: 0.04907523964842161
Epoch [9/20], Loss: 0.0491
Best test AUROC: 0.8161, at epoch: 28
Epoch 10/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 10/20 Batches:  33%|███▎      | 1/3 [00:01<00:02,  1.08s/it]Epoch 10/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.43it/s]Epoch 10/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                  epoch_loss: 0.039758010456959404
Epoch [10/20], Loss: 0.0398
Best test AUROC: 0.8178, at epoch: 29
Epoch 11/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 11/20 Batches:  33%|███▎      | 1/3 [00:01<00:02,  1.08s/it]Epoch 11/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.44it/s]Epoch 11/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                  epoch_loss: 0.031214779242873192
Epoch [11/20], Loss: 0.0312
Epoch 12/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 12/20 Batches:  33%|███▎      | 1/3 [00:01<00:02,  1.08s/it]Epoch 12/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.43it/s]Epoch 12/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                  epoch_loss: 0.02534472259382407
Epoch [12/20], Loss: 0.0253
Epoch 13/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 13/20 Batches:  33%|███▎      | 1/3 [00:01<00:02,  1.08s/it]Epoch 13/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.44it/s]Epoch 13/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.24it/s]                                                                  epoch_loss: 0.02040145422021548
Epoch [13/20], Loss: 0.0204
Epoch 14/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 14/20 Batches:  33%|███▎      | 1/3 [00:01<00:02,  1.08s/it]Epoch 14/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.43it/s]Epoch 14/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                  epoch_loss: 0.016495407248536747
Epoch [14/20], Loss: 0.0165
Epoch 15/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 15/20 Batches:  33%|███▎      | 1/3 [00:01<00:02,  1.08s/it]Epoch 15/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.43it/s]Epoch 15/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                  epoch_loss: 0.013417123816907406
Epoch [15/20], Loss: 0.0134
Epoch 16/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 16/20 Batches:  33%|███▎      | 1/3 [00:01<00:02,  1.08s/it]Epoch 16/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.43it/s]Epoch 16/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                  epoch_loss: 0.010972587391734123
Epoch [16/20], Loss: 0.0110
Epoch 17/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 17/20 Batches:  33%|███▎      | 1/3 [00:01<00:02,  1.08s/it]Epoch 17/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.43it/s]Epoch 17/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                  epoch_loss: 0.009018137119710445
Epoch [17/20], Loss: 0.0090
Epoch 18/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 18/20 Batches:  33%|███▎      | 1/3 [00:01<00:02,  1.08s/it]Epoch 18/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.44it/s]Epoch 18/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                  epoch_loss: 0.007416704126323263
Epoch [18/20], Loss: 0.0074
Epoch 19/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 19/20 Batches:  33%|███▎      | 1/3 [00:01<00:02,  1.08s/it]Epoch 19/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.44it/s]Epoch 19/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                  epoch_loss: 0.006120666163042188
Epoch [19/20], Loss: 0.0061
Epoch 20/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 20/20 Batches:  33%|███▎      | 1/3 [00:01<00:02,  1.08s/it]Epoch 20/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.44it/s]Epoch 20/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                  epoch_loss: 0.005090539421265324
Epoch [20/20], Loss: 0.0051
best_test_auroc: 0.8177627901584323
