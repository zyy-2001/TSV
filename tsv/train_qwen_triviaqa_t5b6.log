Map:   0%|          | 0/17944 [00:00<?, ? examples/s]Map:   1%|          | 118/17944 [00:00<00:15, 1149.31 examples/s]Map:   1%|▏         | 245/17944 [00:00<00:14, 1215.24 examples/s]Map:   2%|▏         | 372/17944 [00:00<00:14, 1232.24 examples/s]Map:   3%|▎         | 500/17944 [00:00<00:13, 1247.54 examples/s]Map:   3%|▎         | 628/17944 [00:00<00:13, 1256.39 examples/s]Map:   4%|▍         | 755/17944 [00:00<00:13, 1258.34 examples/s]Map:   5%|▍         | 883/17944 [00:00<00:13, 1262.73 examples/s]Map:   6%|▌         | 1011/17944 [00:00<00:13, 1265.67 examples/s]Map:   6%|▋         | 1140/17944 [00:00<00:13, 1269.07 examples/s]Map:   7%|▋         | 1268/17944 [00:01<00:13, 1270.98 examples/s]Map:   8%|▊         | 1397/17944 [00:01<00:12, 1272.88 examples/s]Map:   8%|▊         | 1525/17944 [00:01<00:12, 1272.11 examples/s]Map:   9%|▉         | 1653/17944 [00:01<00:12, 1271.36 examples/s]Map:  10%|▉         | 1782/17944 [00:01<00:12, 1272.96 examples/s]Map:  11%|█         | 1910/17944 [00:01<00:12, 1272.22 examples/s]Map:  11%|█▏        | 2038/17944 [00:01<00:12, 1271.47 examples/s]Map:  12%|█▏        | 2167/17944 [00:01<00:12, 1273.50 examples/s]Map:  13%|█▎        | 2359/17944 [00:01<00:12, 1273.00 examples/s]Map:  14%|█▍        | 2550/17944 [00:02<00:12, 1270.41 examples/s]Map:  15%|█▍        | 2678/17944 [00:02<00:12, 1270.88 examples/s]Map:  16%|█▌        | 2806/17944 [00:02<00:11, 1269.98 examples/s]Map:  16%|█▋        | 2934/17944 [00:02<00:11, 1272.31 examples/s]Map:  17%|█▋        | 3063/17944 [00:02<00:11, 1274.73 examples/s]Map:  18%|█▊        | 3191/17944 [00:02<00:11, 1272.13 examples/s]Map:  18%|█▊        | 3319/17944 [00:02<00:11, 1273.25 examples/s]Map:  20%|█▉        | 3511/17944 [00:02<00:11, 1268.77 examples/s]Map:  20%|██        | 3640/17944 [00:02<00:11, 1272.04 examples/s]Map:  21%|██        | 3769/17944 [00:02<00:11, 1273.35 examples/s]Map:  22%|██▏       | 3961/17944 [00:03<00:10, 1272.19 examples/s]Map:  23%|██▎       | 4090/17944 [00:03<00:10, 1273.39 examples/s]Map:  24%|██▎       | 4218/17944 [00:03<00:10, 1273.94 examples/s]Map:  24%|██▍       | 4346/17944 [00:03<00:10, 1271.55 examples/s]Map:  25%|██▍       | 4476/17944 [00:03<00:10, 1274.44 examples/s]Map:  26%|██▌       | 4605/17944 [00:03<00:10, 1276.60 examples/s]Map:  26%|██▋       | 4734/17944 [00:03<00:10, 1277.81 examples/s]Map:  27%|██▋       | 4863/17944 [00:03<00:10, 1277.68 examples/s]Map:  28%|██▊       | 4992/17944 [00:03<00:10, 1277.63 examples/s]Map:  29%|██▉       | 5182/17944 [00:04<00:10, 1270.56 examples/s]Map:  30%|██▉       | 5311/17944 [00:04<00:09, 1273.42 examples/s]Map:  31%|███       | 5499/17944 [00:04<00:09, 1262.71 examples/s]Map:  31%|███▏      | 5628/17944 [00:04<00:09, 1267.86 examples/s]Map:  32%|███▏      | 5758/17944 [00:04<00:09, 1273.05 examples/s]Map:  33%|███▎      | 5886/17944 [00:04<00:09, 1272.53 examples/s]Map:  34%|███▎      | 6015/17944 [00:04<00:09, 1273.79 examples/s]Map:  34%|███▍      | 6144/17944 [00:04<00:09, 1275.13 examples/s]Map:  35%|███▌      | 6335/17944 [00:04<00:09, 1268.37 examples/s]Map:  36%|███▋      | 6527/17944 [00:05<00:08, 1269.04 examples/s]Map:  37%|███▋      | 6718/17944 [00:05<00:08, 1265.06 examples/s]Map:  38%|███▊      | 6907/17944 [00:05<00:08, 1260.74 examples/s]Map:  39%|███▉      | 7037/17944 [00:05<00:08, 1266.58 examples/s]Map:  40%|███▉      | 7167/17944 [00:05<00:08, 1271.77 examples/s]Map:  41%|████      | 7297/17944 [00:05<00:08, 1276.59 examples/s]Map:  42%|████▏     | 7489/17944 [00:05<00:08, 1274.45 examples/s]Map:  42%|████▏     | 7619/17944 [00:06<00:08, 1277.18 examples/s]Map:  44%|████▎     | 7807/17944 [00:06<00:08, 1265.71 examples/s]Map:  44%|████▍     | 7936/17944 [00:06<00:07, 1267.85 examples/s]Map:  45%|████▍     | 8064/17944 [00:06<00:07, 1270.39 examples/s]Map:  46%|████▌     | 8193/17944 [00:06<00:07, 1273.39 examples/s]Map:  46%|████▋     | 8322/17944 [00:06<00:07, 1275.27 examples/s]Map:  47%|████▋     | 8451/17944 [00:06<00:07, 1276.76 examples/s]Map:  48%|████▊     | 8579/17944 [00:06<00:07, 1273.77 examples/s]Map:  49%|████▊     | 8708/17944 [00:06<00:07, 1275.86 examples/s]Map:  49%|████▉     | 8837/17944 [00:06<00:07, 1276.99 examples/s]Map:  50%|████▉     | 8965/17944 [00:07<00:07, 1274.08 examples/s]Map:  51%|█████     | 9094/17944 [00:07<00:06, 1275.21 examples/s]Map:  52%|█████▏    | 9261/17944 [00:07<00:07, 1207.19 examples/s]Map:  52%|█████▏    | 9390/17944 [00:07<00:06, 1226.46 examples/s]Map:  53%|█████▎    | 9577/17944 [00:07<00:06, 1228.45 examples/s]Map:  54%|█████▍    | 9705/17944 [00:07<00:06, 1239.24 examples/s]Map:  55%|█████▍    | 9834/17944 [00:07<00:06, 1251.08 examples/s]Map:  57%|█████▋    | 10144/17944 [00:07<00:04, 1759.10 examples/s]Map:  67%|██████▋   | 12104/17944 [00:07<00:00, 6805.62 examples/s]Map:  79%|███████▊  | 14124/17944 [00:08<00:00, 10659.44 examples/s]Map:  90%|████████▉ | 16077/17944 [00:08<00:00, 13241.26 examples/s]Map: 100%|██████████| 17944/17944 [00:08<00:00, 2122.49 examples/s] 
Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]Loading checkpoint shards:  25%|██▌       | 1/4 [00:01<00:03,  1.28s/it]Loading checkpoint shards:  50%|█████     | 2/4 [00:02<00:02,  1.22s/it]Loading checkpoint shards:  75%|███████▌  | 3/4 [00:03<00:01,  1.20s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:04<00:00,  1.14s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:04<00:00,  1.17s/it]
  0%|          | 0/9960 [00:00<?, ?it/s]  1%|▏         | 148/9960 [00:00<00:06, 1479.77it/s]  3%|▎         | 314/9960 [00:00<00:06, 1585.03it/s]  5%|▍         | 485/9960 [00:00<00:05, 1641.29it/s]  7%|▋         | 654/9960 [00:00<00:05, 1657.91it/s]  8%|▊         | 820/9960 [00:00<00:05, 1652.11it/s] 10%|▉         | 989/9960 [00:00<00:05, 1662.83it/s] 12%|█▏        | 1156/9960 [00:00<00:05, 1664.16it/s] 13%|█▎        | 1328/9960 [00:00<00:05, 1681.10it/s] 15%|█▌        | 1497/9960 [00:00<00:05, 1676.68it/s] 17%|█▋        | 1666/9960 [00:01<00:04, 1680.07it/s] 18%|█▊        | 1838/9960 [00:01<00:04, 1691.28it/s] 20%|██        | 2014/9960 [00:01<00:04, 1709.46it/s] 22%|██▏       | 2189/9960 [00:01<00:04, 1719.21it/s] 24%|██▎       | 2361/9960 [00:01<00:04, 1717.94it/s] 25%|██▌       | 2533/9960 [00:01<00:04, 1706.89it/s] 27%|██▋       | 2704/9960 [00:01<00:04, 1699.23it/s] 29%|██▉       | 2874/9960 [00:01<00:04, 1687.64it/s] 31%|███       | 3043/9960 [00:01<00:04, 1675.62it/s] 32%|███▏      | 3211/9960 [00:01<00:04, 1669.86it/s] 34%|███▍      | 3382/9960 [00:02<00:03, 1678.67it/s] 36%|███▌      | 3552/9960 [00:02<00:03, 1683.81it/s] 37%|███▋      | 3721/9960 [00:02<00:03, 1671.20it/s] 39%|███▉      | 3889/9960 [00:02<00:03, 1665.14it/s] 41%|████      | 4056/9960 [00:02<00:03, 1648.65it/s] 42%|████▏     | 4221/9960 [00:02<00:03, 1642.34it/s] 44%|████▍     | 4386/9960 [00:02<00:03, 1638.43it/s] 46%|████▌     | 4552/9960 [00:02<00:03, 1642.54it/s] 47%|████▋     | 4717/9960 [00:02<00:03, 1636.41it/s] 49%|████▉     | 4891/9960 [00:02<00:03, 1665.30it/s] 51%|█████     | 5063/9960 [00:03<00:02, 1681.16it/s] 53%|█████▎    | 5235/9960 [00:03<00:02, 1691.96it/s] 54%|█████▍    | 5406/9960 [00:03<00:02, 1696.61it/s] 56%|█████▌    | 5576/9960 [00:03<00:02, 1696.02it/s] 58%|█████▊    | 5748/9960 [00:03<00:02, 1701.54it/s] 59%|█████▉    | 5919/9960 [00:03<00:02, 1703.28it/s] 61%|██████    | 6090/9960 [00:03<00:02, 1701.98it/s] 63%|██████▎   | 6265/9960 [00:03<00:02, 1713.55it/s] 65%|██████▍   | 6437/9960 [00:03<00:02, 1713.67it/s] 66%|██████▋   | 6609/9960 [00:03<00:01, 1707.67it/s] 68%|██████▊   | 6783/9960 [00:04<00:01, 1716.17it/s] 70%|██████▉   | 6958/9960 [00:04<00:01, 1724.05it/s] 72%|███████▏  | 7131/9960 [00:04<00:01, 1713.75it/s] 73%|███████▎  | 7304/9960 [00:04<00:01, 1716.81it/s] 75%|███████▌  | 7476/9960 [00:04<00:01, 1696.30it/s] 77%|███████▋  | 7646/9960 [00:04<00:01, 1675.39it/s] 78%|███████▊  | 7818/9960 [00:04<00:01, 1687.89it/s] 80%|████████  | 7987/9960 [00:04<00:01, 1678.37it/s] 82%|████████▏ | 8157/9960 [00:04<00:01, 1683.22it/s] 84%|████████▎ | 8326/9960 [00:04<00:00, 1674.03it/s] 85%|████████▌ | 8499/9960 [00:05<00:00, 1689.06it/s] 87%|████████▋ | 8671/9960 [00:05<00:00, 1696.91it/s] 89%|████████▉ | 8843/9960 [00:05<00:00, 1701.12it/s] 91%|█████████ | 9021/9960 [00:05<00:00, 1722.28it/s] 92%|█████████▏| 9195/9960 [00:05<00:00, 1727.35it/s] 94%|█████████▍| 9368/9960 [00:05<00:00, 1710.02it/s] 96%|█████████▌| 9543/9960 [00:05<00:00, 1720.12it/s] 98%|█████████▊| 9716/9960 [00:05<00:00, 1692.81it/s] 99%|█████████▉| 9886/9960 [00:05<00:00, 1673.70it/s]100%|██████████| 9960/9960 [00:05<00:00, 1684.69it/s]
Epoch 1/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]We detected that you are passing `past_key_values` as a tuple and this is deprecated and will be removed in v4.43. Please use an appropriate `Cache` class (https://huggingface.co/docs/transformers/v4.41.3/en/internal/generation_utils#transformers.Cache)
Epoch 1/20 Batches: 100%|██████████| 1/1 [00:01<00:00,  1.53s/it]                                                                 epoch_loss: 0.713432788848877
Epoch [1/20], Loss: 0.7134
Best test AUROC: 0.5852, at epoch: 0
Epoch [1/20],Test AUROC: 0.5852
Epoch 2/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 2/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                 epoch_loss: 0.6808173656463623
Epoch [2/20], Loss: 0.6808
Best test AUROC: 0.6742, at epoch: 1
Epoch [2/20],Test AUROC: 0.6742
Epoch 3/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 3/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                 epoch_loss: 0.6541120409965515
Epoch [3/20], Loss: 0.6541
Best test AUROC: 0.7142, at epoch: 2
Epoch [3/20],Test AUROC: 0.7142
Epoch 4/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 4/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                 epoch_loss: 0.6306450366973877
Epoch [4/20], Loss: 0.6306
Best test AUROC: 0.7419, at epoch: 3
Epoch [4/20],Test AUROC: 0.7419
Epoch 5/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 5/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                 epoch_loss: 0.6056001782417297
Epoch [5/20], Loss: 0.6056
Best test AUROC: 0.7559, at epoch: 4
Epoch [5/20],Test AUROC: 0.7559
Epoch 6/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 6/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                 epoch_loss: 0.5794627666473389
Epoch [6/20], Loss: 0.5795
Best test AUROC: 0.7649, at epoch: 5
Epoch [6/20],Test AUROC: 0.7649
Epoch 7/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 7/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                 epoch_loss: 0.552958071231842
Epoch [7/20], Loss: 0.5530
Best test AUROC: 0.7702, at epoch: 6
Epoch [7/20],Test AUROC: 0.7702
Epoch 8/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 8/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                 epoch_loss: 0.5257260799407959
Epoch [8/20], Loss: 0.5257
Best test AUROC: 0.7718, at epoch: 7
Epoch [8/20],Test AUROC: 0.7718
Epoch 9/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 9/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                 epoch_loss: 0.4948689937591553
Epoch [9/20], Loss: 0.4949
Best test AUROC: 0.7733, at epoch: 8
Epoch [9/20],Test AUROC: 0.7733
Epoch 10/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 10/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                  epoch_loss: 0.46022212505340576
Epoch [10/20], Loss: 0.4602
Best test AUROC: 0.7786, at epoch: 9
Epoch [10/20],Test AUROC: 0.7786
Epoch 11/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 11/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.42177635431289673
Epoch [11/20], Loss: 0.4218
Epoch [11/20],Test AUROC: 0.7772
Epoch 12/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 12/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.38247475028038025
Epoch [12/20], Loss: 0.3825
Epoch [12/20],Test AUROC: 0.7765
Epoch 13/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 13/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                  epoch_loss: 0.34679558873176575
Epoch [13/20], Loss: 0.3468
Epoch [13/20],Test AUROC: 0.7763
Epoch 14/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 14/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.3224121928215027
Epoch [14/20], Loss: 0.3224
Epoch [14/20],Test AUROC: 0.7682
Epoch 15/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 15/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                  epoch_loss: 0.3397061824798584
Epoch [15/20], Loss: 0.3397
Epoch [15/20],Test AUROC: 0.7761
Epoch 16/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 16/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.3324516713619232
Epoch [16/20], Loss: 0.3325
Best test AUROC: 0.7817, at epoch: 15
Epoch [16/20],Test AUROC: 0.7817
Epoch 17/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 17/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.29838088154792786
Epoch [17/20], Loss: 0.2984
Best test AUROC: 0.7891, at epoch: 16
Epoch [17/20],Test AUROC: 0.7891
Epoch 18/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 18/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.2688226103782654
Epoch [18/20], Loss: 0.2688
Best test AUROC: 0.7939, at epoch: 17
Epoch [18/20],Test AUROC: 0.7939
Epoch 19/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 19/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.24372273683547974
Epoch [19/20], Loss: 0.2437
Best test AUROC: 0.7958, at epoch: 18
Epoch [19/20],Test AUROC: 0.7958
Epoch 20/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 20/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.22674062848091125
Epoch [20/20], Loss: 0.2267
Epoch [20/20],Test AUROC: 0.7948
  0%|          | 0/115 [00:00<?, ?it/s]  1%|          | 1/115 [00:00<00:55,  2.07it/s]  2%|▏         | 2/115 [00:01<00:57,  1.95it/s]  3%|▎         | 3/115 [00:01<00:48,  2.30it/s]  3%|▎         | 4/115 [00:01<00:52,  2.11it/s]  4%|▍         | 5/115 [00:02<00:53,  2.06it/s]  5%|▌         | 6/115 [00:02<00:50,  2.18it/s]  6%|▌         | 7/115 [00:03<00:46,  2.34it/s]  7%|▋         | 8/115 [00:03<00:45,  2.35it/s]  8%|▊         | 9/115 [00:04<00:47,  2.22it/s]  9%|▊         | 10/115 [00:04<00:49,  2.10it/s] 10%|▉         | 11/115 [00:04<00:44,  2.32it/s] 10%|█         | 12/115 [00:05<00:48,  2.11it/s] 11%|█▏        | 13/115 [00:06<00:49,  2.08it/s] 12%|█▏        | 14/115 [00:06<00:49,  2.04it/s] 13%|█▎        | 15/115 [00:06<00:44,  2.25it/s] 14%|█▍        | 16/115 [00:07<00:48,  2.04it/s] 15%|█▍        | 17/115 [00:08<00:50,  1.95it/s] 16%|█▌        | 18/115 [00:08<00:51,  1.87it/s] 17%|█▋        | 19/115 [00:08<00:45,  2.10it/s] 17%|█▋        | 20/115 [00:09<00:43,  2.17it/s] 18%|█▊        | 21/115 [00:09<00:45,  2.07it/s] 19%|█▉        | 22/115 [00:10<00:45,  2.05it/s] 20%|██        | 23/115 [00:10<00:40,  2.26it/s] 21%|██        | 24/115 [00:11<00:39,  2.32it/s] 22%|██▏       | 25/115 [00:11<00:36,  2.49it/s] 23%|██▎       | 26/115 [00:11<00:33,  2.62it/s] 23%|██▎       | 27/115 [00:12<00:37,  2.34it/s] 24%|██▍       | 28/115 [00:12<00:40,  2.15it/s] 25%|██▌       | 29/115 [00:13<00:44,  1.92it/s] 26%|██▌       | 30/115 [00:14<00:44,  1.90it/s] 27%|██▋       | 31/115 [00:14<00:40,  2.06it/s] 28%|██▊       | 32/115 [00:14<00:40,  2.05it/s] 29%|██▊       | 33/115 [00:15<00:42,  1.92it/s] 30%|██▉       | 34/115 [00:16<00:40,  1.98it/s] 30%|███       | 35/115 [00:16<00:39,  2.04it/s] 31%|███▏      | 36/115 [00:17<00:40,  1.97it/s] 32%|███▏      | 37/115 [00:17<00:40,  1.90it/s] 33%|███▎      | 38/115 [00:18<00:39,  1.95it/s] 34%|███▍      | 39/115 [00:18<00:36,  2.09it/s] 35%|███▍      | 40/115 [00:18<00:34,  2.16it/s] 36%|███▌      | 41/115 [00:19<00:37,  1.95it/s] 37%|███▋      | 42/115 [00:20<00:36,  1.98it/s] 37%|███▋      | 43/115 [00:20<00:42,  1.71it/s] 38%|███▊      | 44/115 [00:21<00:46,  1.52it/s] 39%|███▉      | 45/115 [00:22<00:43,  1.59it/s] 40%|████      | 46/115 [00:22<00:42,  1.61it/s] 41%|████      | 47/115 [00:23<00:39,  1.72it/s] 42%|████▏     | 48/115 [00:24<00:52,  1.27it/s] 43%|████▎     | 49/115 [00:25<00:49,  1.34it/s] 43%|████▎     | 50/115 [00:25<00:45,  1.44it/s] 44%|████▍     | 51/115 [00:26<00:40,  1.57it/s] 45%|████▌     | 52/115 [00:26<00:40,  1.55it/s] 46%|████▌     | 53/115 [00:27<00:39,  1.57it/s] 47%|████▋     | 54/115 [00:28<00:37,  1.62it/s] 48%|████▊     | 55/115 [00:28<00:31,  1.90it/s] 49%|████▊     | 56/115 [00:28<00:29,  2.01it/s] 50%|████▉     | 57/115 [00:29<00:25,  2.29it/s] 50%|█████     | 58/115 [00:29<00:23,  2.42it/s] 51%|█████▏    | 59/115 [00:29<00:21,  2.63it/s] 52%|█████▏    | 60/115 [00:30<00:23,  2.35it/s] 53%|█████▎    | 61/115 [00:30<00:23,  2.30it/s] 54%|█████▍    | 62/115 [00:31<00:24,  2.15it/s] 55%|█████▍    | 63/115 [00:32<00:26,  1.95it/s] 56%|█████▌    | 64/115 [00:32<00:25,  2.00it/s] 57%|█████▋    | 65/115 [00:32<00:24,  2.07it/s] 57%|█████▋    | 66/115 [00:33<00:24,  1.99it/s] 58%|█████▊    | 67/115 [00:33<00:22,  2.16it/s] 59%|█████▉    | 68/115 [00:34<00:20,  2.26it/s] 60%|██████    | 69/115 [00:34<00:21,  2.18it/s] 61%|██████    | 70/115 [00:35<00:21,  2.11it/s] 62%|██████▏   | 71/115 [00:35<00:20,  2.14it/s] 63%|██████▎   | 72/115 [00:36<00:20,  2.09it/s] 63%|██████▎   | 73/115 [00:36<00:18,  2.25it/s] 64%|██████▍   | 74/115 [00:36<00:17,  2.34it/s] 65%|██████▌   | 75/115 [00:37<00:17,  2.30it/s] 66%|██████▌   | 76/115 [00:37<00:18,  2.13it/s] 67%|██████▋   | 77/115 [00:38<00:18,  2.03it/s] 68%|██████▊   | 78/115 [00:38<00:16,  2.18it/s] 69%|██████▊   | 79/115 [00:39<00:17,  2.08it/s] 70%|██████▉   | 80/115 [00:39<00:15,  2.24it/s] 70%|███████   | 81/115 [00:40<00:14,  2.30it/s] 71%|███████▏  | 82/115 [00:40<00:14,  2.30it/s] 72%|███████▏  | 83/115 [00:41<00:13,  2.38it/s] 73%|███████▎  | 84/115 [00:41<00:13,  2.23it/s] 74%|███████▍  | 85/115 [00:41<00:13,  2.19it/s] 75%|███████▍  | 86/115 [00:42<00:13,  2.07it/s] 76%|███████▌  | 87/115 [00:43<00:15,  1.85it/s] 77%|███████▋  | 88/115 [00:43<00:14,  1.89it/s] 77%|███████▋  | 89/115 [00:44<00:11,  2.18it/s] 78%|███████▊  | 90/115 [00:44<00:11,  2.20it/s] 79%|███████▉  | 91/115 [00:45<00:12,  1.89it/s] 80%|████████  | 92/115 [00:45<00:12,  1.79it/s] 81%|████████  | 93/115 [00:46<00:12,  1.79it/s] 82%|████████▏ | 94/115 [00:46<00:11,  1.89it/s] 83%|████████▎ | 95/115 [00:47<00:10,  1.95it/s] 83%|████████▎ | 96/115 [00:47<00:10,  1.82it/s] 84%|████████▍ | 97/115 [00:48<00:09,  1.89it/s] 85%|████████▌ | 98/115 [00:48<00:08,  2.06it/s] 86%|████████▌ | 99/115 [00:49<00:07,  2.14it/s] 87%|████████▋ | 100/115 [00:49<00:06,  2.30it/s] 88%|████████▊ | 101/115 [00:50<00:06,  2.20it/s] 89%|████████▊ | 102/115 [00:50<00:06,  2.15it/s] 90%|████████▉ | 103/115 [00:50<00:05,  2.36it/s] 90%|█████████ | 104/115 [00:51<00:04,  2.27it/s] 91%|█████████▏| 105/115 [00:51<00:03,  2.58it/s] 92%|█████████▏| 106/115 [00:52<00:03,  2.38it/s] 93%|█████████▎| 107/115 [00:52<00:03,  2.45it/s] 94%|█████████▍| 108/115 [00:52<00:02,  2.65it/s] 95%|█████████▍| 109/115 [00:53<00:02,  2.78it/s] 96%|█████████▌| 110/115 [00:54<00:02,  1.87it/s] 97%|█████████▋| 111/115 [00:54<00:02,  1.65it/s] 97%|█████████▋| 112/115 [00:56<00:02,  1.14it/s] 98%|█████████▊| 113/115 [00:56<00:01,  1.35it/s] 99%|█████████▉| 114/115 [00:57<00:00,  1.53it/s]100%|██████████| 115/115 [00:57<00:00,  2.01it/s]
tsv_main1.py:175: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  exemplar_label = torch.tensor(exemplar_labels).cuda()
tsv_main1.py:182: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  augmented_labels = torch.concat((selected_labels, torch.tensor(exemplar_labels).clone().cuda()))
Epoch 1/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 1/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.10it/s]Epoch 1/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.50it/s]Epoch 1/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.25it/s]                                                                 epoch_loss: 0.30375708142916363
Epoch [1/20], Loss: 0.3038
Best test AUROC: 0.8079, at epoch: 20
Epoch 2/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 2/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.09it/s]Epoch 2/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.49it/s]Epoch 2/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.25it/s]                                                                 epoch_loss: 0.1969317545493444
Epoch [2/20], Loss: 0.1969
Best test AUROC: 0.8184, at epoch: 21
Epoch 3/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 3/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.10it/s]Epoch 3/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.49it/s]Epoch 3/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.25it/s]                                                                 epoch_loss: 0.1499587818980217
Epoch [3/20], Loss: 0.1500
Epoch 4/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 4/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.09it/s]Epoch 4/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.49it/s]Epoch 4/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.25it/s]                                                                 epoch_loss: 0.11905450125535329
Epoch [4/20], Loss: 0.1191
Epoch 5/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 5/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.10it/s]Epoch 5/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.49it/s]Epoch 5/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.26it/s]                                                                 epoch_loss: 0.09821891287962596
Epoch [5/20], Loss: 0.0982
Epoch 6/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 6/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.10it/s]Epoch 6/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.49it/s]Epoch 6/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.25it/s]                                                                 epoch_loss: 0.07609403381745021
Epoch [6/20], Loss: 0.0761
Epoch 7/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 7/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.10it/s]Epoch 7/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.49it/s]Epoch 7/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.26it/s]                                                                 epoch_loss: 0.059282482912143074
Epoch [7/20], Loss: 0.0593
Best test AUROC: 0.8194, at epoch: 26
Epoch 8/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 8/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.10it/s]Epoch 8/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.50it/s]Epoch 8/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.26it/s]                                                                 epoch_loss: 0.04677704411248366
Epoch [8/20], Loss: 0.0468
Best test AUROC: 0.8215, at epoch: 27
Epoch 9/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 9/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.09it/s]Epoch 9/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.49it/s]Epoch 9/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.25it/s]                                                                 epoch_loss: 0.03685329109430313
Epoch [9/20], Loss: 0.0369
Best test AUROC: 0.8225, at epoch: 28
Epoch 10/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 10/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.10it/s]Epoch 10/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.49it/s]Epoch 10/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.26it/s]                                                                  epoch_loss: 0.028812247638901074
Epoch [10/20], Loss: 0.0288
Epoch 11/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 11/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.10it/s]Epoch 11/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.50it/s]Epoch 11/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.26it/s]                                                                  epoch_loss: 0.023520650652547676
Epoch [11/20], Loss: 0.0235
Epoch 12/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 12/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.10it/s]Epoch 12/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.49it/s]Epoch 12/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.26it/s]                                                                  epoch_loss: 0.018806322788198788
Epoch [12/20], Loss: 0.0188
Epoch 13/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 13/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.10it/s]Epoch 13/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.49it/s]Epoch 13/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.26it/s]                                                                  epoch_loss: 0.01524540347357591
Epoch [13/20], Loss: 0.0152
Epoch 14/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 14/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.10it/s]Epoch 14/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.49it/s]Epoch 14/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.26it/s]                                                                  epoch_loss: 0.012265327696998915
Epoch [14/20], Loss: 0.0123
Epoch 15/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 15/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.10it/s]Epoch 15/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.49it/s]Epoch 15/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.25it/s]                                                                  epoch_loss: 0.009800927092631658
Epoch [15/20], Loss: 0.0098
Epoch 16/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 16/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.10it/s]Epoch 16/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.49it/s]Epoch 16/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.25it/s]                                                                  epoch_loss: 0.007977721669400731
Epoch [16/20], Loss: 0.0080
Epoch 17/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 17/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.10it/s]Epoch 17/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.49it/s]Epoch 17/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.26it/s]                                                                  epoch_loss: 0.006523728525886933
Epoch [17/20], Loss: 0.0065
Epoch 18/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 18/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.10it/s]Epoch 18/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.49it/s]Epoch 18/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.26it/s]                                                                  epoch_loss: 0.005371011871223648
Epoch [18/20], Loss: 0.0054
Epoch 19/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 19/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.10it/s]Epoch 19/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.49it/s]Epoch 19/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.25it/s]                                                                  epoch_loss: 0.004466646583750844
Epoch [19/20], Loss: 0.0045
Epoch 20/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 20/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.10it/s]Epoch 20/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.49it/s]Epoch 20/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.26it/s]                                                                  epoch_loss: 0.0037149256095290184
Epoch [20/20], Loss: 0.0037
best_test_auroc: 0.8224909501075495
