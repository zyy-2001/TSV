Map:   0%|          | 0/17944 [00:00<?, ? examples/s]Map:   1%|          | 112/17944 [00:00<00:16, 1093.84 examples/s]Map:   1%|▏         | 242/17944 [00:00<00:14, 1206.90 examples/s]Map:   2%|▏         | 372/17944 [00:00<00:14, 1246.15 examples/s]Map:   3%|▎         | 503/17944 [00:00<00:13, 1267.48 examples/s]Map:   4%|▎         | 634/17944 [00:00<00:13, 1279.48 examples/s]Map:   4%|▍         | 766/17944 [00:00<00:13, 1288.49 examples/s]Map:   5%|▍         | 896/17944 [00:00<00:13, 1287.92 examples/s]Map:   6%|▌         | 1028/17944 [00:00<00:13, 1292.49 examples/s]Map:   6%|▋         | 1158/17944 [00:00<00:12, 1293.76 examples/s]Map:   7%|▋         | 1289/17944 [00:01<00:12, 1294.63 examples/s]Map:   8%|▊         | 1420/17944 [00:01<00:12, 1297.21 examples/s]Map:   9%|▊         | 1551/17944 [00:01<00:12, 1298.89 examples/s]Map:  10%|▉         | 1741/17944 [00:01<00:12, 1283.13 examples/s]Map:  10%|█         | 1873/17944 [00:01<00:12, 1287.91 examples/s]Map:  11%|█         | 2004/17944 [00:01<00:12, 1291.48 examples/s]Map:  12%|█▏        | 2194/17944 [00:01<00:12, 1279.18 examples/s]Map:  13%|█▎        | 2324/17944 [00:01<00:12, 1282.85 examples/s]Map:  14%|█▎        | 2455/17944 [00:01<00:12, 1286.18 examples/s]Map:  14%|█▍        | 2586/17944 [00:02<00:11, 1290.91 examples/s]Map:  15%|█▌        | 2718/17944 [00:02<00:11, 1294.80 examples/s]Map:  16%|█▌        | 2910/17944 [00:02<00:11, 1285.29 examples/s]Map:  17%|█▋        | 3040/17944 [00:02<00:11, 1286.79 examples/s]Map:  18%|█▊        | 3169/17944 [00:02<00:11, 1284.17 examples/s]Map:  18%|█▊        | 3299/17944 [00:02<00:11, 1286.22 examples/s]Map:  19%|█▉        | 3429/17944 [00:02<00:11, 1287.35 examples/s]Map:  20%|█▉        | 3558/17944 [00:02<00:11, 1283.40 examples/s]Map:  21%|██        | 3687/17944 [00:02<00:11, 1280.97 examples/s]Map:  21%|██▏       | 3816/17944 [00:02<00:11, 1280.31 examples/s]Map:  22%|██▏       | 3947/17944 [00:03<00:10, 1285.24 examples/s]Map:  23%|██▎       | 4076/17944 [00:03<00:10, 1283.86 examples/s]Map:  23%|██▎       | 4206/17944 [00:03<00:10, 1286.87 examples/s]Map:  24%|██▍       | 4337/17944 [00:03<00:10, 1289.81 examples/s]Map:  25%|██▌       | 4528/17944 [00:03<00:10, 1280.21 examples/s]Map:  26%|██▌       | 4659/17944 [00:03<00:10, 1284.25 examples/s]Map:  27%|██▋       | 4789/17944 [00:03<00:10, 1284.87 examples/s]Map:  27%|██▋       | 4919/17944 [00:03<00:10, 1287.80 examples/s]Map:  28%|██▊       | 5049/17944 [00:03<00:09, 1289.78 examples/s]Map:  29%|██▉       | 5241/17944 [00:04<00:09, 1284.77 examples/s]Map:  30%|██▉       | 5371/17944 [00:04<00:09, 1287.76 examples/s]Map:  31%|███       | 5502/17944 [00:04<00:09, 1290.25 examples/s]Map:  31%|███▏      | 5633/17944 [00:04<00:09, 1293.29 examples/s]Map:  32%|███▏      | 5764/17944 [00:04<00:09, 1295.29 examples/s]Map:  33%|███▎      | 5956/17944 [00:04<00:09, 1282.84 examples/s]Map:  34%|███▍      | 6086/17944 [00:04<00:09, 1285.97 examples/s]Map:  35%|███▍      | 6217/17944 [00:04<00:09, 1289.98 examples/s]Map:  35%|███▌      | 6348/17944 [00:04<00:08, 1292.50 examples/s]Map:  36%|███▌      | 6480/17944 [00:05<00:08, 1295.41 examples/s]Map:  37%|███▋      | 6612/17944 [00:05<00:08, 1297.37 examples/s]Map:  38%|███▊      | 6743/17944 [00:05<00:08, 1297.85 examples/s]Map:  39%|███▊      | 6936/17944 [00:05<00:08, 1290.19 examples/s]Map:  40%|███▉      | 7126/17944 [00:05<00:08, 1277.97 examples/s]Map:  40%|████      | 7258/17944 [00:05<00:08, 1283.92 examples/s]Map:  41%|████      | 7390/17944 [00:05<00:08, 1289.17 examples/s]Map:  42%|████▏     | 7521/17944 [00:05<00:08, 1292.52 examples/s]Map:  43%|████▎     | 7652/17944 [00:05<00:07, 1294.88 examples/s]Map:  43%|████▎     | 7782/17944 [00:06<00:07, 1295.05 examples/s]Map:  44%|████▍     | 7973/17944 [00:06<00:07, 1285.34 examples/s]Map:  45%|████▌     | 8164/17944 [00:06<00:07, 1278.72 examples/s]Map:  46%|████▋     | 8341/17944 [00:06<00:07, 1239.52 examples/s]Map:  47%|████▋     | 8472/17944 [00:06<00:07, 1253.99 examples/s]Map:  48%|████▊     | 8603/17944 [00:06<00:07, 1265.07 examples/s]Map:  49%|████▊     | 8734/17944 [00:06<00:07, 1274.04 examples/s]Map:  49%|████▉     | 8865/17944 [00:06<00:07, 1280.25 examples/s]Map:  50%|█████     | 8996/17944 [00:07<00:06, 1285.53 examples/s]Map:  51%|█████     | 9127/17944 [00:07<00:06, 1289.32 examples/s]Map:  52%|█████▏    | 9258/17944 [00:07<00:06, 1291.94 examples/s]Map:  52%|█████▏    | 9389/17944 [00:07<00:06, 1292.90 examples/s]Map:  53%|█████▎    | 9519/17944 [00:07<00:06, 1289.76 examples/s]Map:  54%|█████▍    | 9694/17944 [00:07<00:06, 1237.00 examples/s]Map:  55%|█████▍    | 9825/17944 [00:07<00:06, 1253.30 examples/s]Map:  56%|█████▌    | 10012/17944 [00:07<00:05, 1422.74 examples/s]Map:  67%|██████▋   | 11955/17944 [00:07<00:00, 6512.83 examples/s]Map:  78%|███████▊  | 13938/17944 [00:07<00:00, 10343.15 examples/s]Map:  88%|████████▊ | 15843/17944 [00:08<00:00, 12878.10 examples/s]Map:  99%|█████████▉| 17773/17944 [00:08<00:00, 14762.53 examples/s]Map: 100%|██████████| 17944/17944 [00:08<00:00, 2141.91 examples/s] 
Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]Loading checkpoint shards:  25%|██▌       | 1/4 [00:01<00:03,  1.30s/it]Loading checkpoint shards:  50%|█████     | 2/4 [00:02<00:02,  1.28s/it]Loading checkpoint shards:  75%|███████▌  | 3/4 [00:03<00:01,  1.27s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:04<00:00,  1.23s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:04<00:00,  1.25s/it]
  0%|          | 0/9960 [00:00<?, ?it/s]  2%|▏         | 152/9960 [00:00<00:06, 1517.06it/s]  3%|▎         | 310/9960 [00:00<00:06, 1548.72it/s]  5%|▍         | 475/9960 [00:00<00:05, 1593.98it/s]  6%|▋         | 640/9960 [00:00<00:05, 1614.54it/s]  8%|▊         | 805/9960 [00:00<00:05, 1626.24it/s] 10%|▉         | 968/9960 [00:00<00:05, 1623.14it/s] 11%|█▏        | 1136/9960 [00:00<00:05, 1639.11it/s] 13%|█▎        | 1305/9960 [00:00<00:05, 1653.51it/s] 15%|█▍        | 1473/9960 [00:00<00:05, 1659.48it/s] 16%|█▋        | 1639/9960 [00:01<00:05, 1656.59it/s] 18%|█▊        | 1806/9960 [00:01<00:04, 1660.09it/s] 20%|█▉        | 1975/9960 [00:01<00:04, 1668.62it/s] 22%|██▏       | 2145/9960 [00:01<00:04, 1678.02it/s] 23%|██▎       | 2313/9960 [00:01<00:04, 1671.40it/s] 25%|██▍       | 2481/9960 [00:01<00:04, 1663.11it/s] 27%|██▋       | 2648/9960 [00:01<00:04, 1660.83it/s] 28%|██▊       | 2815/9960 [00:01<00:04, 1657.85it/s] 30%|██▉       | 2981/9960 [00:01<00:04, 1651.34it/s] 32%|███▏      | 3147/9960 [00:01<00:04, 1639.71it/s] 33%|███▎      | 3311/9960 [00:02<00:04, 1637.02it/s] 35%|███▍      | 3478/9960 [00:02<00:03, 1645.82it/s] 37%|███▋      | 3643/9960 [00:02<00:03, 1638.93it/s] 38%|███▊      | 3807/9960 [00:02<00:03, 1628.21it/s] 40%|███▉      | 3970/9960 [00:02<00:03, 1604.78it/s] 41%|████▏     | 4131/9960 [00:02<00:03, 1572.55it/s] 43%|████▎     | 4290/9960 [00:02<00:03, 1576.46it/s] 45%|████▍     | 4448/9960 [00:02<00:03, 1577.09it/s] 46%|████▋     | 4608/9960 [00:02<00:03, 1583.61it/s] 48%|████▊     | 4772/9960 [00:02<00:03, 1599.85it/s] 50%|████▉     | 4943/9960 [00:03<00:03, 1632.14it/s] 51%|█████▏    | 5115/9960 [00:03<00:02, 1656.61it/s] 53%|█████▎    | 5284/9960 [00:03<00:02, 1664.83it/s] 55%|█████▍    | 5453/9960 [00:03<00:02, 1670.34it/s] 56%|█████▋    | 5623/9960 [00:03<00:02, 1678.89it/s] 58%|█████▊    | 5791/9960 [00:03<00:02, 1676.76it/s] 60%|█████▉    | 5960/9960 [00:03<00:02, 1677.66it/s] 62%|██████▏   | 6128/9960 [00:03<00:02, 1677.25it/s] 63%|██████▎   | 6298/9960 [00:03<00:02, 1681.14it/s] 65%|██████▍   | 6467/9960 [00:03<00:02, 1678.03it/s] 67%|██████▋   | 6635/9960 [00:04<00:01, 1674.01it/s] 68%|██████▊   | 6805/9960 [00:04<00:01, 1679.70it/s] 70%|███████   | 6975/9960 [00:04<00:01, 1683.74it/s] 72%|███████▏  | 7144/9960 [00:04<00:01, 1681.82it/s] 73%|███████▎  | 7313/9960 [00:04<00:01, 1677.61it/s] 75%|███████▌  | 7481/9960 [00:04<00:01, 1639.05it/s] 77%|███████▋  | 7646/9960 [00:04<00:01, 1624.41it/s] 78%|███████▊  | 7809/9960 [00:04<00:01, 1625.21it/s] 80%|████████  | 7975/9960 [00:04<00:01, 1633.49it/s] 82%|████████▏ | 8143/9960 [00:04<00:01, 1645.53it/s] 83%|████████▎ | 8310/9960 [00:05<00:00, 1650.39it/s] 85%|████████▌ | 8477/9960 [00:05<00:00, 1653.65it/s] 87%|████████▋ | 8643/9960 [00:05<00:00, 1648.57it/s] 88%|████████▊ | 8808/9960 [00:05<00:00, 1641.98it/s] 90%|█████████ | 8976/9960 [00:05<00:00, 1651.57it/s] 92%|█████████▏| 9145/9960 [00:05<00:00, 1662.35it/s] 94%|█████████▎| 9313/9960 [00:05<00:00, 1666.25it/s] 95%|█████████▌| 9484/9960 [00:05<00:00, 1679.31it/s] 97%|█████████▋| 9652/9960 [00:05<00:00, 1664.08it/s] 99%|█████████▊| 9819/9960 [00:05<00:00, 1637.89it/s]100%|██████████| 9960/9960 [00:06<00:00, 1645.49it/s]
Epoch 1/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]We detected that you are passing `past_key_values` as a tuple and this is deprecated and will be removed in v4.43. Please use an appropriate `Cache` class (https://huggingface.co/docs/transformers/v4.41.3/en/internal/generation_utils#transformers.Cache)
Epoch 1/20 Batches: 100%|██████████| 1/1 [00:01<00:00,  1.54s/it]                                                                 epoch_loss: 0.713432788848877
Epoch [1/20], Loss: 0.7134
Best test AUROC: 0.5682, at epoch: 0
Epoch [1/20],Test AUROC: 0.5682
Epoch 2/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 2/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                 epoch_loss: 0.681725263595581
Epoch [2/20], Loss: 0.6817
Best test AUROC: 0.6467, at epoch: 1
Epoch [2/20],Test AUROC: 0.6467
Epoch 3/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 3/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                 epoch_loss: 0.6621838808059692
Epoch [3/20], Loss: 0.6622
Best test AUROC: 0.6811, at epoch: 2
Epoch [3/20],Test AUROC: 0.6811
Epoch 4/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 4/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                 epoch_loss: 0.643805205821991
Epoch [4/20], Loss: 0.6438
Best test AUROC: 0.7040, at epoch: 3
Epoch [4/20],Test AUROC: 0.7040
Epoch 5/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 5/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                 epoch_loss: 0.6246106624603271
Epoch [5/20], Loss: 0.6246
Best test AUROC: 0.7224, at epoch: 4
Epoch [5/20],Test AUROC: 0.7224
Epoch 6/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 6/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                 epoch_loss: 0.6050108075141907
Epoch [6/20], Loss: 0.6050
Best test AUROC: 0.7379, at epoch: 5
Epoch [6/20],Test AUROC: 0.7379
Epoch 7/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 7/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                 epoch_loss: 0.585472822189331
Epoch [7/20], Loss: 0.5855
Best test AUROC: 0.7499, at epoch: 6
Epoch [7/20],Test AUROC: 0.7499
Epoch 8/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 8/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                 epoch_loss: 0.5659570693969727
Epoch [8/20], Loss: 0.5660
Best test AUROC: 0.7583, at epoch: 7
Epoch [8/20],Test AUROC: 0.7583
Epoch 9/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 9/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                 epoch_loss: 0.5455619096755981
Epoch [9/20], Loss: 0.5456
Best test AUROC: 0.7640, at epoch: 8
Epoch [9/20],Test AUROC: 0.7640
Epoch 10/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 10/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                  epoch_loss: 0.5269337296485901
Epoch [10/20], Loss: 0.5269
Best test AUROC: 0.7674, at epoch: 9
Epoch [10/20],Test AUROC: 0.7674
Epoch 11/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 11/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                  epoch_loss: 0.5059562921524048
Epoch [11/20], Loss: 0.5060
Best test AUROC: 0.7694, at epoch: 10
Epoch [11/20],Test AUROC: 0.7694
Epoch 12/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 12/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.4844744801521301
Epoch [12/20], Loss: 0.4845
Best test AUROC: 0.7713, at epoch: 11
Epoch [12/20],Test AUROC: 0.7713
Epoch 13/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 13/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.4617679715156555
Epoch [13/20], Loss: 0.4618
Best test AUROC: 0.7729, at epoch: 12
Epoch [13/20],Test AUROC: 0.7729
Epoch 14/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 14/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.43668609857559204
Epoch [14/20], Loss: 0.4367
Best test AUROC: 0.7742, at epoch: 13
Epoch [14/20],Test AUROC: 0.7742
Epoch 15/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 15/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.40886008739471436
Epoch [15/20], Loss: 0.4089
Best test AUROC: 0.7751, at epoch: 14
Epoch [15/20],Test AUROC: 0.7751
Epoch 16/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 16/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.3787311017513275
Epoch [16/20], Loss: 0.3787
Epoch [16/20],Test AUROC: 0.7745
Epoch 17/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 17/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.34859055280685425
Epoch [17/20], Loss: 0.3486
Epoch [17/20],Test AUROC: 0.7746
Epoch 18/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 18/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.31928426027297974
Epoch [18/20], Loss: 0.3193
Epoch [18/20],Test AUROC: 0.7666
Epoch 19/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 19/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.2951950430870056
Epoch [19/20], Loss: 0.2952
Epoch [19/20],Test AUROC: 0.7720
Epoch 20/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 20/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.2737485468387604
Epoch [20/20], Loss: 0.2737
Epoch [20/20],Test AUROC: 0.7584
  0%|          | 0/115 [00:00<?, ?it/s]  1%|          | 1/115 [00:00<00:54,  2.08it/s]  2%|▏         | 2/115 [00:01<00:58,  1.95it/s]  3%|▎         | 3/115 [00:01<00:48,  2.30it/s]  3%|▎         | 4/115 [00:01<00:52,  2.11it/s]  4%|▍         | 5/115 [00:02<00:53,  2.06it/s]  5%|▌         | 6/115 [00:02<00:49,  2.18it/s]  6%|▌         | 7/115 [00:03<00:46,  2.34it/s]  7%|▋         | 8/115 [00:03<00:45,  2.35it/s]  8%|▊         | 9/115 [00:04<00:47,  2.22it/s]  9%|▊         | 10/115 [00:04<00:49,  2.10it/s] 10%|▉         | 11/115 [00:04<00:44,  2.32it/s] 10%|█         | 12/115 [00:05<00:48,  2.11it/s] 11%|█▏        | 13/115 [00:06<00:48,  2.08it/s] 12%|█▏        | 14/115 [00:06<00:49,  2.04it/s] 13%|█▎        | 15/115 [00:06<00:44,  2.25it/s] 14%|█▍        | 16/115 [00:07<00:48,  2.04it/s] 15%|█▍        | 17/115 [00:08<00:50,  1.95it/s] 16%|█▌        | 18/115 [00:08<00:51,  1.87it/s] 17%|█▋        | 19/115 [00:08<00:45,  2.11it/s] 17%|█▋        | 20/115 [00:09<00:43,  2.17it/s] 18%|█▊        | 21/115 [00:09<00:45,  2.08it/s] 19%|█▉        | 22/115 [00:10<00:45,  2.05it/s] 20%|██        | 23/115 [00:10<00:40,  2.26it/s] 21%|██        | 24/115 [00:11<00:39,  2.32it/s] 22%|██▏       | 25/115 [00:11<00:36,  2.49it/s] 23%|██▎       | 26/115 [00:11<00:33,  2.62it/s] 23%|██▎       | 27/115 [00:12<00:37,  2.34it/s] 24%|██▍       | 28/115 [00:12<00:40,  2.15it/s] 25%|██▌       | 29/115 [00:13<00:44,  1.92it/s] 26%|██▌       | 30/115 [00:14<00:44,  1.91it/s] 27%|██▋       | 31/115 [00:14<00:40,  2.07it/s] 28%|██▊       | 32/115 [00:14<00:40,  2.05it/s] 29%|██▊       | 33/115 [00:15<00:42,  1.91it/s] 30%|██▉       | 34/115 [00:16<00:40,  1.98it/s] 30%|███       | 35/115 [00:16<00:39,  2.03it/s] 31%|███▏      | 36/115 [00:17<00:40,  1.97it/s] 32%|███▏      | 37/115 [00:17<00:40,  1.91it/s] 33%|███▎      | 38/115 [00:18<00:39,  1.95it/s] 34%|███▍      | 39/115 [00:18<00:36,  2.10it/s] 35%|███▍      | 40/115 [00:18<00:34,  2.16it/s] 36%|███▌      | 41/115 [00:19<00:37,  1.95it/s] 37%|███▋      | 42/115 [00:20<00:36,  1.98it/s] 37%|███▋      | 43/115 [00:20<00:42,  1.71it/s] 38%|███▊      | 44/115 [00:21<00:46,  1.52it/s] 39%|███▉      | 45/115 [00:22<00:43,  1.59it/s] 40%|████      | 46/115 [00:22<00:42,  1.62it/s] 41%|████      | 47/115 [00:23<00:39,  1.72it/s] 42%|████▏     | 48/115 [00:24<00:53,  1.26it/s] 43%|████▎     | 49/115 [00:25<00:49,  1.33it/s] 43%|████▎     | 50/115 [00:25<00:45,  1.44it/s] 44%|████▍     | 51/115 [00:26<00:40,  1.56it/s] 45%|████▌     | 52/115 [00:26<00:40,  1.55it/s] 46%|████▌     | 53/115 [00:27<00:39,  1.56it/s] 47%|████▋     | 54/115 [00:28<00:37,  1.62it/s] 48%|████▊     | 55/115 [00:28<00:31,  1.89it/s] 49%|████▊     | 56/115 [00:28<00:29,  2.01it/s] 50%|████▉     | 57/115 [00:29<00:25,  2.29it/s] 50%|█████     | 58/115 [00:29<00:23,  2.42it/s] 51%|█████▏    | 59/115 [00:29<00:21,  2.63it/s] 52%|█████▏    | 60/115 [00:30<00:23,  2.35it/s] 53%|█████▎    | 61/115 [00:30<00:23,  2.30it/s] 54%|█████▍    | 62/115 [00:31<00:24,  2.16it/s] 55%|█████▍    | 63/115 [00:31<00:26,  1.95it/s] 56%|█████▌    | 64/115 [00:32<00:25,  2.00it/s] 57%|█████▋    | 65/115 [00:32<00:24,  2.07it/s] 57%|█████▋    | 66/115 [00:33<00:24,  1.99it/s] 58%|█████▊    | 67/115 [00:33<00:22,  2.17it/s] 59%|█████▉    | 68/115 [00:34<00:20,  2.26it/s] 60%|██████    | 69/115 [00:34<00:21,  2.18it/s] 61%|██████    | 70/115 [00:35<00:21,  2.11it/s] 62%|██████▏   | 71/115 [00:35<00:20,  2.13it/s] 63%|██████▎   | 72/115 [00:36<00:20,  2.09it/s] 63%|██████▎   | 73/115 [00:36<00:18,  2.24it/s] 64%|██████▍   | 74/115 [00:36<00:17,  2.34it/s] 65%|██████▌   | 75/115 [00:37<00:17,  2.30it/s] 66%|██████▌   | 76/115 [00:37<00:18,  2.13it/s] 67%|██████▋   | 77/115 [00:38<00:18,  2.03it/s] 68%|██████▊   | 78/115 [00:38<00:16,  2.18it/s] 69%|██████▊   | 79/115 [00:39<00:17,  2.08it/s] 70%|██████▉   | 80/115 [00:39<00:15,  2.23it/s] 70%|███████   | 81/115 [00:40<00:14,  2.29it/s] 71%|███████▏  | 82/115 [00:40<00:14,  2.30it/s] 72%|███████▏  | 83/115 [00:40<00:13,  2.38it/s] 73%|███████▎  | 84/115 [00:41<00:13,  2.23it/s] 74%|███████▍  | 85/115 [00:41<00:13,  2.19it/s] 75%|███████▍  | 86/115 [00:42<00:13,  2.07it/s] 76%|███████▌  | 87/115 [00:43<00:15,  1.85it/s] 77%|███████▋  | 88/115 [00:43<00:14,  1.89it/s] 77%|███████▋  | 89/115 [00:44<00:11,  2.17it/s] 78%|███████▊  | 90/115 [00:44<00:11,  2.19it/s] 79%|███████▉  | 91/115 [00:45<00:12,  1.89it/s] 80%|████████  | 92/115 [00:45<00:12,  1.78it/s] 81%|████████  | 93/115 [00:46<00:12,  1.79it/s] 82%|████████▏ | 94/115 [00:46<00:11,  1.89it/s] 83%|████████▎ | 95/115 [00:47<00:10,  1.95it/s] 83%|████████▎ | 96/115 [00:47<00:10,  1.82it/s] 84%|████████▍ | 97/115 [00:48<00:09,  1.89it/s] 85%|████████▌ | 98/115 [00:48<00:08,  2.06it/s] 86%|████████▌ | 99/115 [00:49<00:07,  2.14it/s] 87%|████████▋ | 100/115 [00:49<00:06,  2.30it/s] 88%|████████▊ | 101/115 [00:50<00:06,  2.21it/s] 89%|████████▊ | 102/115 [00:50<00:06,  2.15it/s] 90%|████████▉ | 103/115 [00:50<00:05,  2.35it/s] 90%|█████████ | 104/115 [00:51<00:04,  2.27it/s] 91%|█████████▏| 105/115 [00:51<00:03,  2.58it/s] 92%|█████████▏| 106/115 [00:52<00:03,  2.39it/s] 93%|█████████▎| 107/115 [00:52<00:03,  2.45it/s] 94%|█████████▍| 108/115 [00:52<00:02,  2.64it/s] 95%|█████████▍| 109/115 [00:53<00:02,  2.77it/s] 96%|█████████▌| 110/115 [00:54<00:02,  1.87it/s] 97%|█████████▋| 111/115 [00:54<00:02,  1.65it/s] 97%|█████████▋| 112/115 [00:56<00:02,  1.21it/s] 98%|█████████▊| 113/115 [00:56<00:01,  1.42it/s] 99%|█████████▉| 114/115 [00:57<00:00,  1.59it/s]100%|██████████| 115/115 [00:57<00:00,  2.01it/s]
tsv_main1.py:175: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  exemplar_label = torch.tensor(exemplar_labels).cuda()
tsv_main1.py:182: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  augmented_labels = torch.concat((selected_labels, torch.tensor(exemplar_labels).clone().cuda()))
Epoch 1/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 1/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.02it/s]Epoch 1/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.47it/s]Epoch 1/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.25it/s]                                                                 epoch_loss: 0.4345286786556244
Epoch [1/20], Loss: 0.4345
Best test AUROC: 0.7831, at epoch: 20
Epoch 2/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 2/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.01it/s]Epoch 2/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.46it/s]Epoch 2/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.24it/s]                                                                 epoch_loss: 0.31938283145427704
Epoch [2/20], Loss: 0.3194
Best test AUROC: 0.7972, at epoch: 21
Epoch 3/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 3/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.01it/s]Epoch 3/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.46it/s]Epoch 3/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.24it/s]                                                                 epoch_loss: 0.22074894607067108
Epoch [3/20], Loss: 0.2207
Epoch 4/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 4/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.01it/s]Epoch 4/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.46it/s]Epoch 4/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.24it/s]                                                                 epoch_loss: 0.18719946593046188
Epoch [4/20], Loss: 0.1872
Epoch 5/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 5/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.01it/s]Epoch 5/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.46it/s]Epoch 5/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.24it/s]                                                                 epoch_loss: 0.1453582545121511
Epoch [5/20], Loss: 0.1454
Epoch 6/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 6/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.01it/s]Epoch 6/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.46it/s]Epoch 6/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.24it/s]                                                                 epoch_loss: 0.11595028887192409
Epoch [6/20], Loss: 0.1160
Epoch 7/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 7/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.01it/s]Epoch 7/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.46it/s]Epoch 7/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.25it/s]                                                                 epoch_loss: 0.0909087136387825
Epoch [7/20], Loss: 0.0909
Epoch 8/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 8/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.01it/s]Epoch 8/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.46it/s]Epoch 8/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.24it/s]                                                                 epoch_loss: 0.07179334263006847
Epoch [8/20], Loss: 0.0718
Epoch 9/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 9/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.01it/s]Epoch 9/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.46it/s]Epoch 9/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.24it/s]                                                                 epoch_loss: 0.057545747607946396
Epoch [9/20], Loss: 0.0575
Epoch 10/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 10/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.01it/s]Epoch 10/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.46it/s]Epoch 10/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.24it/s]                                                                  epoch_loss: 0.045753711834549904
Epoch [10/20], Loss: 0.0458
Epoch 11/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 11/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.01it/s]Epoch 11/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.46it/s]Epoch 11/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.25it/s]                                                                  epoch_loss: 0.036270348355174065
Epoch [11/20], Loss: 0.0363
Epoch 12/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 12/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.01it/s]Epoch 12/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.46it/s]Epoch 12/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.24it/s]                                                                  epoch_loss: 0.02900011216600736
Epoch [12/20], Loss: 0.0290
Epoch 13/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 13/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.01it/s]Epoch 13/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.46it/s]Epoch 13/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.24it/s]                                                                  epoch_loss: 0.02343807773043712
Epoch [13/20], Loss: 0.0234
Epoch 14/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 14/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.01it/s]Epoch 14/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.46it/s]Epoch 14/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.24it/s]                                                                  epoch_loss: 0.01902886697401603
Epoch [14/20], Loss: 0.0190
Epoch 15/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 15/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.01it/s]Epoch 15/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.47it/s]Epoch 15/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.25it/s]                                                                  epoch_loss: 0.015480446318785349
Epoch [15/20], Loss: 0.0155
Epoch 16/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 16/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.01it/s]Epoch 16/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.46it/s]Epoch 16/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.24it/s]                                                                  epoch_loss: 0.012644468496243158
Epoch [16/20], Loss: 0.0126
Epoch 17/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 17/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.02it/s]Epoch 17/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.47it/s]Epoch 17/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.25it/s]                                                                  epoch_loss: 0.010376019092897574
Epoch [17/20], Loss: 0.0104
Epoch 18/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 18/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.02it/s]Epoch 18/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.46it/s]Epoch 18/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.24it/s]                                                                  epoch_loss: 0.008546361854920784
Epoch [18/20], Loss: 0.0085
Epoch 19/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 19/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.01it/s]Epoch 19/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.46it/s]Epoch 19/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.25it/s]                                                                  epoch_loss: 0.0070684116799384356
Epoch [19/20], Loss: 0.0071
Epoch 20/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 20/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.02it/s]Epoch 20/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.47it/s]Epoch 20/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.25it/s]                                                                  epoch_loss: 0.005864978923151891
Epoch [20/20], Loss: 0.0059
best_test_auroc: 0.7971726251197423
