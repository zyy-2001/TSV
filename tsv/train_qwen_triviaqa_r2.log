Map:   0%|          | 0/17944 [00:00<?, ? examples/s]Map:   1%|          | 117/17944 [00:00<00:15, 1147.57 examples/s]Map:   1%|▏         | 245/17944 [00:00<00:14, 1220.36 examples/s]Map:   2%|▏         | 375/17944 [00:00<00:14, 1249.78 examples/s]Map:   3%|▎         | 506/17944 [00:00<00:13, 1267.65 examples/s]Map:   4%|▎         | 637/17944 [00:00<00:13, 1279.39 examples/s]Map:   4%|▍         | 768/17944 [00:00<00:13, 1285.79 examples/s]Map:   5%|▌         | 898/17944 [00:00<00:13, 1288.70 examples/s]Map:   6%|▌         | 1029/17944 [00:00<00:13, 1292.14 examples/s]Map:   6%|▋         | 1160/17944 [00:00<00:12, 1294.78 examples/s]Map:   7%|▋         | 1291/17944 [00:01<00:12, 1295.64 examples/s]Map:   8%|▊         | 1422/17944 [00:01<00:12, 1298.02 examples/s]Map:   9%|▊         | 1553/17944 [00:01<00:12, 1298.82 examples/s]Map:   9%|▉         | 1685/17944 [00:01<00:12, 1299.41 examples/s]Map:  10%|█         | 1817/17944 [00:01<00:12, 1300.85 examples/s]Map:  11%|█         | 1949/17944 [00:01<00:12, 1302.53 examples/s]Map:  12%|█▏        | 2081/17944 [00:01<00:12, 1304.63 examples/s]Map:  12%|█▏        | 2213/17944 [00:01<00:12, 1305.91 examples/s]Map:  13%|█▎        | 2345/17944 [00:01<00:11, 1307.48 examples/s]Map:  14%|█▍        | 2477/17944 [00:01<00:11, 1306.81 examples/s]Map:  15%|█▍        | 2608/17944 [00:02<00:11, 1306.08 examples/s]Map:  15%|█▌        | 2740/17944 [00:02<00:11, 1307.47 examples/s]Map:  16%|█▌        | 2872/17944 [00:02<00:11, 1308.17 examples/s]Map:  17%|█▋        | 3004/17944 [00:02<00:11, 1308.48 examples/s]Map:  17%|█▋        | 3136/17944 [00:02<00:11, 1308.43 examples/s]Map:  18%|█▊        | 3268/17944 [00:02<00:11, 1308.55 examples/s]Map:  19%|█▉        | 3400/17944 [00:02<00:11, 1309.37 examples/s]Map:  20%|█▉        | 3531/17944 [00:02<00:11, 1307.72 examples/s]Map:  20%|██        | 3662/17944 [00:02<00:10, 1304.18 examples/s]Map:  22%|██▏       | 3858/17944 [00:02<00:10, 1303.22 examples/s]Map:  22%|██▏       | 3990/17944 [00:03<00:10, 1306.00 examples/s]Map:  23%|██▎       | 4186/17944 [00:03<00:10, 1304.64 examples/s]Map:  24%|██▍       | 4318/17944 [00:03<00:10, 1307.37 examples/s]Map:  25%|██▍       | 4450/17944 [00:03<00:10, 1308.31 examples/s]Map:  26%|██▌       | 4581/17944 [00:03<00:10, 1306.21 examples/s]Map:  26%|██▋       | 4713/17944 [00:03<00:10, 1307.99 examples/s]Map:  27%|██▋       | 4905/17944 [00:03<00:10, 1292.45 examples/s]Map:  28%|██▊       | 5099/17944 [00:03<00:09, 1290.20 examples/s]Map:  29%|██▉       | 5231/17944 [00:04<00:09, 1295.50 examples/s]Map:  30%|██▉       | 5363/17944 [00:04<00:09, 1299.96 examples/s]Map:  31%|███       | 5495/17944 [00:04<00:09, 1303.86 examples/s]Map:  31%|███▏      | 5627/17944 [00:04<00:09, 1306.84 examples/s]Map:  32%|███▏      | 5822/17944 [00:04<00:09, 1300.43 examples/s]Map:  33%|███▎      | 5953/17944 [00:04<00:09, 1302.29 examples/s]Map:  34%|███▍      | 6084/17944 [00:04<00:09, 1300.70 examples/s]Map:  35%|███▍      | 6216/17944 [00:04<00:08, 1305.01 examples/s]Map:  35%|███▌      | 6348/17944 [00:04<00:08, 1307.95 examples/s]Map:  36%|███▋      | 6543/17944 [00:05<00:08, 1301.62 examples/s]Map:  37%|███▋      | 6675/17944 [00:05<00:08, 1303.45 examples/s]Map:  38%|███▊      | 6807/17944 [00:05<00:08, 1305.67 examples/s]Map:  39%|███▊      | 6939/17944 [00:05<00:08, 1308.29 examples/s]Map:  39%|███▉      | 7071/17944 [00:05<00:08, 1309.11 examples/s]Map:  40%|████      | 7203/17944 [00:05<00:08, 1310.62 examples/s]Map:  41%|████      | 7396/17944 [00:05<00:08, 1297.44 examples/s]Map:  42%|████▏     | 7527/17944 [00:05<00:08, 1299.82 examples/s]Map:  43%|████▎     | 7659/17944 [00:05<00:07, 1303.07 examples/s]Map:  43%|████▎     | 7791/17944 [00:05<00:07, 1306.14 examples/s]Map:  44%|████▍     | 7923/17944 [00:06<00:07, 1308.42 examples/s]Map:  45%|████▍     | 8055/17944 [00:06<00:07, 1310.68 examples/s]Map:  46%|████▌     | 8187/17944 [00:06<00:07, 1312.03 examples/s]Map:  46%|████▋     | 8319/17944 [00:06<00:07, 1312.56 examples/s]Map:  47%|████▋     | 8451/17944 [00:06<00:07, 1313.57 examples/s]Map:  48%|████▊     | 8644/17944 [00:06<00:07, 1299.35 examples/s]Map:  49%|████▉     | 8775/17944 [00:06<00:07, 1299.77 examples/s]Map:  50%|████▉     | 8907/17944 [00:06<00:06, 1302.42 examples/s]Map:  50%|█████     | 9039/17944 [00:06<00:06, 1304.20 examples/s]Map:  51%|█████     | 9171/17944 [00:07<00:06, 1305.26 examples/s]Map:  52%|█████▏    | 9303/17944 [00:07<00:06, 1304.86 examples/s]Map:  53%|█████▎    | 9435/17944 [00:07<00:06, 1306.84 examples/s]Map:  53%|█████▎    | 9566/17944 [00:07<00:06, 1303.51 examples/s]Map:  54%|█████▍    | 9698/17944 [00:07<00:06, 1306.62 examples/s]Map:  55%|█████▌    | 9893/17944 [00:07<00:06, 1299.95 examples/s]Map:  62%|██████▏   | 11053/17944 [00:07<00:01, 4068.86 examples/s]Map:  73%|███████▎  | 13075/17944 [00:07<00:00, 8550.43 examples/s]Map:  84%|████████▍ | 15032/17944 [00:07<00:00, 11677.42 examples/s]Map:  95%|█████████▍| 17018/17944 [00:08<00:00, 14036.06 examples/s]Map: 100%|██████████| 17944/17944 [00:08<00:00, 2176.81 examples/s] 
Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]Loading checkpoint shards:  25%|██▌       | 1/4 [00:01<00:03,  1.25s/it]Loading checkpoint shards:  50%|█████     | 2/4 [00:02<00:02,  1.24s/it]Loading checkpoint shards:  75%|███████▌  | 3/4 [00:03<00:01,  1.25s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:04<00:00,  1.21s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:04<00:00,  1.22s/it]
  0%|          | 0/9960 [00:00<?, ?it/s]  1%|          | 120/9960 [00:00<00:08, 1197.55it/s]  3%|▎         | 288/9960 [00:00<00:06, 1479.74it/s]  5%|▍         | 459/9960 [00:00<00:05, 1583.65it/s]  6%|▋         | 623/9960 [00:00<00:05, 1605.71it/s]  8%|▊         | 792/9960 [00:00<00:05, 1634.45it/s] 10%|▉         | 963/9960 [00:00<00:05, 1658.13it/s] 11%|█▏        | 1136/9960 [00:00<00:05, 1678.74it/s] 13%|█▎        | 1308/9960 [00:00<00:05, 1690.01it/s] 15%|█▍        | 1479/9960 [00:00<00:05, 1695.07it/s] 17%|█▋        | 1649/9960 [00:01<00:04, 1694.02it/s] 18%|█▊        | 1821/9960 [00:01<00:04, 1700.17it/s] 20%|██        | 1996/9960 [00:01<00:04, 1712.53it/s] 22%|██▏       | 2171/9960 [00:01<00:04, 1721.42it/s] 24%|██▎       | 2344/9960 [00:01<00:04, 1718.42it/s] 25%|██▌       | 2516/9960 [00:01<00:04, 1710.04it/s] 27%|██▋       | 2688/9960 [00:01<00:04, 1708.98it/s] 29%|██▊       | 2859/9960 [00:01<00:04, 1697.35it/s] 30%|███       | 3029/9960 [00:01<00:04, 1691.29it/s] 32%|███▏      | 3199/9960 [00:01<00:04, 1667.28it/s] 34%|███▍      | 3370/9960 [00:02<00:03, 1679.27it/s] 36%|███▌      | 3540/9960 [00:02<00:03, 1684.61it/s] 37%|███▋      | 3709/9960 [00:02<00:03, 1676.01it/s] 39%|███▉      | 3877/9960 [00:02<00:03, 1666.39it/s] 41%|████      | 4044/9960 [00:02<00:03, 1648.14it/s] 42%|████▏     | 4209/9960 [00:02<00:03, 1634.75it/s] 44%|████▍     | 4373/9960 [00:02<00:03, 1630.72it/s] 46%|████▌     | 4539/9960 [00:02<00:03, 1637.42it/s] 47%|████▋     | 4705/9960 [00:02<00:03, 1643.59it/s] 49%|████▉     | 4879/9960 [00:02<00:03, 1671.56it/s] 51%|█████     | 5057/9960 [00:03<00:02, 1701.87it/s] 53%|█████▎    | 5232/9960 [00:03<00:02, 1715.52it/s] 54%|█████▍    | 5405/9960 [00:03<00:02, 1718.86it/s] 56%|█████▌    | 5577/9960 [00:03<00:02, 1699.76it/s] 58%|█████▊    | 5748/9960 [00:03<00:02, 1699.40it/s] 59%|█████▉    | 5918/9960 [00:03<00:02, 1699.35it/s] 61%|██████    | 6091/9960 [00:03<00:02, 1706.40it/s] 63%|██████▎   | 6266/9960 [00:03<00:02, 1717.34it/s] 65%|██████▍   | 6439/9960 [00:03<00:02, 1719.97it/s] 66%|██████▋   | 6612/9960 [00:03<00:01, 1713.45it/s] 68%|██████▊   | 6787/9960 [00:04<00:01, 1723.02it/s] 70%|██████▉   | 6961/9960 [00:04<00:01, 1726.02it/s] 72%|███████▏  | 7135/9960 [00:04<00:01, 1729.58it/s] 73%|███████▎  | 7308/9960 [00:04<00:01, 1726.52it/s] 75%|███████▌  | 7481/9960 [00:04<00:01, 1707.50it/s] 77%|███████▋  | 7652/9960 [00:04<00:01, 1684.62it/s] 79%|███████▊  | 7824/9960 [00:04<00:01, 1693.65it/s] 80%|████████  | 7994/9960 [00:04<00:01, 1676.24it/s] 82%|████████▏ | 8164/9960 [00:04<00:01, 1681.37it/s] 84%|████████▎ | 8336/9960 [00:04<00:00, 1690.02it/s] 85%|████████▌ | 8507/9960 [00:05<00:00, 1695.87it/s] 87%|████████▋ | 8677/9960 [00:05<00:00, 1697.08it/s] 89%|████████▉ | 8850/9960 [00:05<00:00, 1704.77it/s] 91%|█████████ | 9025/9960 [00:05<00:00, 1717.98it/s] 92%|█████████▏| 9198/9960 [00:05<00:00, 1721.44it/s] 94%|█████████▍| 9374/9960 [00:05<00:00, 1732.26it/s] 96%|█████████▌| 9551/9960 [00:05<00:00, 1742.57it/s] 98%|█████████▊| 9726/9960 [00:05<00:00, 1705.36it/s] 99%|█████████▉| 9897/9960 [00:05<00:00, 1692.42it/s]100%|██████████| 9960/9960 [00:05<00:00, 1687.43it/s]
Epoch 1/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]We detected that you are passing `past_key_values` as a tuple and this is deprecated and will be removed in v4.43. Please use an appropriate `Cache` class (https://huggingface.co/docs/transformers/v4.41.3/en/internal/generation_utils#transformers.Cache)
Epoch 1/20 Batches: 100%|██████████| 1/1 [00:01<00:00,  1.52s/it]                                                                 epoch_loss: 0.6948940753936768
Epoch [1/20], Loss: 0.6949
Best test AUROC: 0.6006, at epoch: 0
Epoch [1/20],Test AUROC: 0.6006
Epoch 2/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 2/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.07it/s]                                                                 epoch_loss: 0.6762396097183228
Epoch [2/20], Loss: 0.6762
Best test AUROC: 0.6290, at epoch: 1
Epoch [2/20],Test AUROC: 0.6290
Epoch 3/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 3/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.07it/s]                                                                 epoch_loss: 0.6510995626449585
Epoch [3/20], Loss: 0.6511
Best test AUROC: 0.6675, at epoch: 2
Epoch [3/20],Test AUROC: 0.6675
Epoch 4/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 4/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.07it/s]                                                                 epoch_loss: 0.6098747253417969
Epoch [4/20], Loss: 0.6099
Best test AUROC: 0.7165, at epoch: 3
Epoch [4/20],Test AUROC: 0.7165
Epoch 5/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 5/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.07it/s]                                                                 epoch_loss: 0.5619856119155884
Epoch [5/20], Loss: 0.5620
Best test AUROC: 0.7422, at epoch: 4
Epoch [5/20],Test AUROC: 0.7422
Epoch 6/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 6/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                 epoch_loss: 0.5005254745483398
Epoch [6/20], Loss: 0.5005
Best test AUROC: 0.7473, at epoch: 5
Epoch [6/20],Test AUROC: 0.7473
Epoch 7/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 7/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                 epoch_loss: 0.4386768043041229
Epoch [7/20], Loss: 0.4387
Best test AUROC: 0.7506, at epoch: 6
Epoch [7/20],Test AUROC: 0.7506
Epoch 8/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 8/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                 epoch_loss: 0.3823246657848358
Epoch [8/20], Loss: 0.3823
Best test AUROC: 0.7531, at epoch: 7
Epoch [8/20],Test AUROC: 0.7531
Epoch 9/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 9/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                 epoch_loss: 0.3282546103000641
Epoch [9/20], Loss: 0.3283
Best test AUROC: 0.7550, at epoch: 8
Epoch [9/20],Test AUROC: 0.7550
Epoch 10/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 10/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.2747523784637451
Epoch [10/20], Loss: 0.2748
Epoch [10/20],Test AUROC: 0.7539
Epoch 11/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 11/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.22542721033096313
Epoch [11/20], Loss: 0.2254
Epoch [11/20],Test AUROC: 0.7531
Epoch 12/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 12/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.1839929074048996
Epoch [12/20], Loss: 0.1840
Epoch [12/20],Test AUROC: 0.7527
Epoch 13/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 13/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.15056760609149933
Epoch [13/20], Loss: 0.1506
Epoch [13/20],Test AUROC: 0.7541
Epoch 14/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 14/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.07it/s]                                                                  epoch_loss: 0.12422293424606323
Epoch [14/20], Loss: 0.1242
Best test AUROC: 0.7559, at epoch: 13
Epoch [14/20],Test AUROC: 0.7559
Epoch 15/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 15/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.07it/s]                                                                  epoch_loss: 0.10389550030231476
Epoch [15/20], Loss: 0.1039
Best test AUROC: 0.7582, at epoch: 14
Epoch [15/20],Test AUROC: 0.7582
Epoch 16/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 16/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.07it/s]                                                                  epoch_loss: 0.08847520500421524
Epoch [16/20], Loss: 0.0885
Best test AUROC: 0.7609, at epoch: 15
Epoch [16/20],Test AUROC: 0.7609
Epoch 17/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 17/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.07it/s]                                                                  epoch_loss: 0.07661692798137665
Epoch [17/20], Loss: 0.0766
Best test AUROC: 0.7639, at epoch: 16
Epoch [17/20],Test AUROC: 0.7639
Epoch 18/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 18/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.07it/s]                                                                  epoch_loss: 0.06695851683616638
Epoch [18/20], Loss: 0.0670
Best test AUROC: 0.7666, at epoch: 17
Epoch [18/20],Test AUROC: 0.7666
Epoch 19/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 19/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.07it/s]                                                                  epoch_loss: 0.05845941603183746
Epoch [19/20], Loss: 0.0585
Best test AUROC: 0.7689, at epoch: 18
Epoch [19/20],Test AUROC: 0.7689
Epoch 20/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 20/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.07it/s]                                                                  epoch_loss: 0.050306737422943115
Epoch [20/20], Loss: 0.0503
Best test AUROC: 0.7708, at epoch: 19
Epoch [20/20],Test AUROC: 0.7708
  0%|          | 0/115 [00:00<?, ?it/s]  1%|          | 1/115 [00:00<00:54,  2.09it/s]  2%|▏         | 2/115 [00:01<00:57,  1.95it/s]  3%|▎         | 3/115 [00:01<00:48,  2.32it/s]  3%|▎         | 4/115 [00:01<00:52,  2.12it/s]  4%|▍         | 5/115 [00:02<00:52,  2.08it/s]  5%|▌         | 6/115 [00:02<00:49,  2.19it/s]  6%|▌         | 7/115 [00:03<00:45,  2.36it/s]  7%|▋         | 8/115 [00:03<00:45,  2.36it/s]  8%|▊         | 9/115 [00:04<00:47,  2.23it/s]  9%|▊         | 10/115 [00:04<00:49,  2.11it/s] 10%|▉         | 11/115 [00:04<00:44,  2.33it/s] 10%|█         | 12/115 [00:05<00:48,  2.12it/s] 11%|█▏        | 13/115 [00:05<00:48,  2.10it/s] 12%|█▏        | 14/115 [00:06<00:49,  2.05it/s] 13%|█▎        | 15/115 [00:06<00:44,  2.26it/s] 14%|█▍        | 16/115 [00:07<00:48,  2.05it/s] 15%|█▍        | 17/115 [00:07<00:49,  1.96it/s] 16%|█▌        | 18/115 [00:08<00:51,  1.89it/s] 17%|█▋        | 19/115 [00:08<00:45,  2.12it/s] 17%|█▋        | 20/115 [00:09<00:43,  2.19it/s] 18%|█▊        | 21/115 [00:09<00:45,  2.08it/s] 19%|█▉        | 22/115 [00:10<00:45,  2.06it/s] 20%|██        | 23/115 [00:10<00:40,  2.27it/s] 21%|██        | 24/115 [00:11<00:39,  2.33it/s] 22%|██▏       | 25/115 [00:11<00:35,  2.50it/s] 23%|██▎       | 26/115 [00:11<00:33,  2.63it/s] 23%|██▎       | 27/115 [00:12<00:37,  2.35it/s] 24%|██▍       | 28/115 [00:12<00:40,  2.17it/s] 25%|██▌       | 29/115 [00:13<00:44,  1.93it/s] 26%|██▌       | 30/115 [00:14<00:44,  1.92it/s] 27%|██▋       | 31/115 [00:14<00:40,  2.08it/s] 28%|██▊       | 32/115 [00:14<00:40,  2.06it/s] 29%|██▊       | 33/115 [00:15<00:42,  1.92it/s] 30%|██▉       | 34/115 [00:15<00:40,  1.98it/s] 30%|███       | 35/115 [00:16<00:39,  2.04it/s] 31%|███▏      | 36/115 [00:16<00:39,  1.98it/s] 32%|███▏      | 37/115 [00:17<00:40,  1.91it/s] 33%|███▎      | 38/115 [00:18<00:39,  1.96it/s] 34%|███▍      | 39/115 [00:18<00:36,  2.10it/s] 35%|███▍      | 40/115 [00:18<00:34,  2.17it/s] 36%|███▌      | 41/115 [00:19<00:37,  1.96it/s] 37%|███▋      | 42/115 [00:19<00:36,  1.99it/s] 37%|███▋      | 43/115 [00:20<00:41,  1.72it/s] 38%|███▊      | 44/115 [00:21<00:55,  1.29it/s] 39%|███▉      | 45/115 [00:22<00:49,  1.41it/s] 40%|████      | 46/115 [00:23<00:46,  1.47it/s] 41%|████      | 47/115 [00:23<00:42,  1.61it/s] 42%|████▏     | 48/115 [00:24<00:46,  1.45it/s] 43%|████▎     | 49/115 [00:25<00:44,  1.47it/s] 43%|████▎     | 50/115 [00:25<00:41,  1.55it/s] 44%|████▍     | 51/115 [00:26<00:38,  1.66it/s] 45%|████▌     | 52/115 [00:26<00:39,  1.61it/s] 46%|████▌     | 53/115 [00:27<00:38,  1.61it/s] 47%|████▋     | 54/115 [00:27<00:36,  1.66it/s] 48%|████▊     | 55/115 [00:28<00:30,  1.94it/s] 49%|████▊     | 56/115 [00:28<00:28,  2.04it/s] 50%|████▉     | 57/115 [00:29<00:24,  2.32it/s] 50%|█████     | 58/115 [00:29<00:23,  2.45it/s] 51%|█████▏    | 59/115 [00:29<00:21,  2.66it/s] 52%|█████▏    | 60/115 [00:30<00:23,  2.37it/s] 53%|█████▎    | 61/115 [00:30<00:23,  2.32it/s] 54%|█████▍    | 62/115 [00:31<00:24,  2.17it/s] 55%|█████▍    | 63/115 [00:31<00:26,  1.96it/s] 56%|█████▌    | 64/115 [00:32<00:25,  2.01it/s] 57%|█████▋    | 65/115 [00:32<00:24,  2.08it/s] 57%|█████▋    | 66/115 [00:33<00:24,  2.00it/s] 58%|█████▊    | 67/115 [00:33<00:22,  2.18it/s] 59%|█████▉    | 68/115 [00:34<00:20,  2.27it/s] 60%|██████    | 69/115 [00:34<00:21,  2.19it/s] 61%|██████    | 70/115 [00:35<00:21,  2.12it/s] 62%|██████▏   | 71/115 [00:35<00:20,  2.15it/s] 63%|██████▎   | 72/115 [00:35<00:20,  2.10it/s] 63%|██████▎   | 73/115 [00:36<00:18,  2.26it/s] 64%|██████▍   | 74/115 [00:36<00:17,  2.35it/s] 65%|██████▌   | 75/115 [00:37<00:17,  2.32it/s] 66%|██████▌   | 76/115 [00:37<00:18,  2.15it/s] 67%|██████▋   | 77/115 [00:38<00:18,  2.05it/s] 68%|██████▊   | 78/115 [00:38<00:16,  2.20it/s] 69%|██████▊   | 79/115 [00:39<00:17,  2.09it/s] 70%|██████▉   | 80/115 [00:39<00:15,  2.25it/s] 70%|███████   | 81/115 [00:39<00:14,  2.31it/s] 71%|███████▏  | 82/115 [00:40<00:14,  2.32it/s] 72%|███████▏  | 83/115 [00:40<00:13,  2.40it/s] 73%|███████▎  | 84/115 [00:41<00:13,  2.25it/s] 74%|███████▍  | 85/115 [00:41<00:13,  2.20it/s] 75%|███████▍  | 86/115 [00:42<00:13,  2.08it/s] 76%|███████▌  | 87/115 [00:42<00:15,  1.86it/s] 77%|███████▋  | 88/115 [00:43<00:14,  1.91it/s] 77%|███████▋  | 89/115 [00:43<00:11,  2.19it/s] 78%|███████▊  | 90/115 [00:44<00:11,  2.20it/s] 79%|███████▉  | 91/115 [00:44<00:12,  1.90it/s] 80%|████████  | 92/115 [00:45<00:12,  1.80it/s] 81%|████████  | 93/115 [00:46<00:12,  1.80it/s] 82%|████████▏ | 94/115 [00:46<00:11,  1.91it/s] 83%|████████▎ | 95/115 [00:47<00:10,  1.96it/s] 83%|████████▎ | 96/115 [00:47<00:10,  1.83it/s] 84%|████████▍ | 97/115 [00:48<00:09,  1.90it/s] 85%|████████▌ | 98/115 [00:48<00:08,  2.07it/s] 86%|████████▌ | 99/115 [00:48<00:07,  2.15it/s] 87%|████████▋ | 100/115 [00:49<00:06,  2.31it/s] 88%|████████▊ | 101/115 [00:49<00:06,  2.22it/s] 89%|████████▊ | 102/115 [00:50<00:06,  2.16it/s] 90%|████████▉ | 103/115 [00:50<00:05,  2.37it/s] 90%|█████████ | 104/115 [00:51<00:04,  2.28it/s] 91%|█████████▏| 105/115 [00:51<00:03,  2.60it/s] 92%|█████████▏| 106/115 [00:51<00:03,  2.40it/s] 93%|█████████▎| 107/115 [00:52<00:03,  2.47it/s] 94%|█████████▍| 108/115 [00:52<00:02,  2.66it/s] 95%|█████████▍| 109/115 [00:52<00:02,  2.79it/s] 96%|█████████▌| 110/115 [00:53<00:02,  1.88it/s] 97%|█████████▋| 111/115 [00:54<00:02,  1.67it/s] 97%|█████████▋| 112/115 [00:56<00:02,  1.07it/s] 98%|█████████▊| 113/115 [00:56<00:01,  1.29it/s] 99%|█████████▉| 114/115 [00:57<00:00,  1.47it/s]100%|██████████| 115/115 [00:57<00:00,  2.01it/s]
tsv_main2.py:175: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  exemplar_label = torch.tensor(exemplar_labels).cuda()
tsv_main2.py:182: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  augmented_labels = torch.concat((selected_labels, torch.tensor(exemplar_labels).clone().cuda()))
Epoch 1/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 1/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.25it/s]Epoch 1/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.64it/s]Epoch 1/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.32it/s]                                                                 epoch_loss: 0.019458758334318798
Epoch [1/20], Loss: 0.0195
Best test AUROC: 0.7726, at epoch: 20
Epoch 2/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 2/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.25it/s]Epoch 2/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.63it/s]Epoch 2/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.32it/s]                                                                 epoch_loss: 0.01687860768288374
Epoch [2/20], Loss: 0.0169
Best test AUROC: 0.7736, at epoch: 21
Epoch 3/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 3/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.25it/s]Epoch 3/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.64it/s]Epoch 3/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.32it/s]                                                                 epoch_loss: 0.01546084601432085
Epoch [3/20], Loss: 0.0155
Best test AUROC: 0.7745, at epoch: 22
Epoch 4/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 4/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.25it/s]Epoch 4/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.63it/s]Epoch 4/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.32it/s]                                                                 epoch_loss: 0.01478668674826622
Epoch [4/20], Loss: 0.0148
Best test AUROC: 0.7753, at epoch: 23
Epoch 5/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 5/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.25it/s]Epoch 5/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.63it/s]Epoch 5/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.32it/s]                                                                 epoch_loss: 0.014595621226665875
Epoch [5/20], Loss: 0.0146
Best test AUROC: 0.7759, at epoch: 24
Epoch 6/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 6/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.25it/s]Epoch 6/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.65it/s]Epoch 6/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.32it/s]                                                                 epoch_loss: 0.014715435022177795
Epoch [6/20], Loss: 0.0147
Best test AUROC: 0.7764, at epoch: 25
Epoch 7/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 7/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.25it/s]Epoch 7/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.64it/s]Epoch 7/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.32it/s]                                                                 epoch_loss: 0.01502849928025777
Epoch [7/20], Loss: 0.0150
Best test AUROC: 0.7768, at epoch: 26
Epoch 8/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 8/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.25it/s]Epoch 8/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.64it/s]Epoch 8/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.32it/s]                                                                 epoch_loss: 0.015468118013814092
Epoch [8/20], Loss: 0.0155
Best test AUROC: 0.7772, at epoch: 27
Epoch 9/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 9/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.25it/s]Epoch 9/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.64it/s]Epoch 9/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.32it/s]                                                                 epoch_loss: 0.015987806177387636
Epoch [9/20], Loss: 0.0160
Best test AUROC: 0.7774, at epoch: 28
Epoch 10/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 10/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.25it/s]Epoch 10/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.64it/s]Epoch 10/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.32it/s]                                                                  epoch_loss: 0.016559530544327572
Epoch [10/20], Loss: 0.0166
Best test AUROC: 0.7779, at epoch: 29
Epoch 11/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 11/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.25it/s]Epoch 11/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.65it/s]Epoch 11/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.32it/s]                                                                  epoch_loss: 0.017145987148978747
Epoch [11/20], Loss: 0.0171
Best test AUROC: 0.7781, at epoch: 30
Epoch 12/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 12/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.25it/s]Epoch 12/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.65it/s]Epoch 12/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.32it/s]                                                                  epoch_loss: 0.017750495084328577
Epoch [12/20], Loss: 0.0178
Best test AUROC: 0.7784, at epoch: 31
Epoch 13/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 13/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.26it/s]Epoch 13/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.65it/s]Epoch 13/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.32it/s]                                                                  epoch_loss: 0.018366427590081003
Epoch [13/20], Loss: 0.0184
Best test AUROC: 0.7786, at epoch: 32
Epoch 14/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 14/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.26it/s]Epoch 14/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.64it/s]Epoch 14/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.33it/s]                                                                  epoch_loss: 0.01897777033567157
Epoch [14/20], Loss: 0.0190
Best test AUROC: 0.7787, at epoch: 33
Epoch 15/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 15/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.26it/s]Epoch 15/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.65it/s]Epoch 15/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.32it/s]                                                                  epoch_loss: 0.019580172265705187
Epoch [15/20], Loss: 0.0196
Best test AUROC: 0.7789, at epoch: 34
Epoch 16/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 16/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.26it/s]Epoch 16/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.65it/s]Epoch 16/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.33it/s]                                                                  epoch_loss: 0.020180630453978665
Epoch [16/20], Loss: 0.0202
Best test AUROC: 0.7790, at epoch: 35
Epoch 17/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 17/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.25it/s]Epoch 17/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.65it/s]Epoch 17/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.32it/s]                                                                  epoch_loss: 0.02075697495880983
Epoch [17/20], Loss: 0.0208
Best test AUROC: 0.7792, at epoch: 36
Epoch 18/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 18/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.25it/s]Epoch 18/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.65it/s]Epoch 18/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.33it/s]                                                                  epoch_loss: 0.02131775712223316
Epoch [18/20], Loss: 0.0213
Best test AUROC: 0.7793, at epoch: 37
Epoch 19/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 19/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.25it/s]Epoch 19/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.65it/s]Epoch 19/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.33it/s]                                                                  epoch_loss: 0.02186675684394383
Epoch [19/20], Loss: 0.0219
Best test AUROC: 0.7794, at epoch: 38
Epoch 20/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 20/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.26it/s]Epoch 20/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.65it/s]Epoch 20/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.33it/s]                                                                  epoch_loss: 0.022398194942676735
Epoch [20/20], Loss: 0.0224
Best test AUROC: 0.7796, at epoch: 39
best_test_auroc: 0.7795722116324393
