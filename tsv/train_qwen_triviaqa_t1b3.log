Map:   0%|          | 0/17944 [00:00<?, ? examples/s]Map:   1%|          | 118/17944 [00:00<00:15, 1151.16 examples/s]Map:   1%|▏         | 243/17944 [00:00<00:14, 1201.77 examples/s]Map:   2%|▏         | 372/17944 [00:00<00:14, 1236.05 examples/s]Map:   3%|▎         | 501/17944 [00:00<00:13, 1255.15 examples/s]Map:   4%|▎         | 631/17944 [00:00<00:13, 1267.48 examples/s]Map:   4%|▍         | 760/17944 [00:00<00:13, 1270.34 examples/s]Map:   5%|▍         | 890/17944 [00:00<00:13, 1276.63 examples/s]Map:   6%|▌         | 1020/17944 [00:00<00:13, 1281.40 examples/s]Map:   6%|▋         | 1151/17944 [00:00<00:13, 1285.02 examples/s]Map:   7%|▋         | 1281/17944 [00:01<00:12, 1285.26 examples/s]Map:   8%|▊         | 1410/17944 [00:01<00:12, 1283.93 examples/s]Map:   9%|▊         | 1540/17944 [00:01<00:12, 1285.85 examples/s]Map:   9%|▉         | 1671/17944 [00:01<00:12, 1289.10 examples/s]Map:  10%|█         | 1802/17944 [00:01<00:12, 1291.39 examples/s]Map:  11%|█         | 1996/17944 [00:01<00:12, 1288.31 examples/s]Map:  12%|█▏        | 2126/17944 [00:01<00:12, 1289.09 examples/s]Map:  13%|█▎        | 2256/17944 [00:01<00:12, 1289.58 examples/s]Map:  13%|█▎        | 2386/17944 [00:01<00:12, 1290.91 examples/s]Map:  14%|█▍        | 2516/17944 [00:01<00:11, 1292.35 examples/s]Map:  15%|█▌        | 2711/17944 [00:02<00:11, 1289.25 examples/s]Map:  16%|█▌        | 2841/17944 [00:02<00:11, 1289.85 examples/s]Map:  17%|█▋        | 2971/17944 [00:02<00:11, 1291.31 examples/s]Map:  17%|█▋        | 3101/17944 [00:02<00:11, 1289.44 examples/s]Map:  18%|█▊        | 3230/17944 [00:02<00:11, 1288.66 examples/s]Map:  19%|█▊        | 3360/17944 [00:02<00:11, 1289.76 examples/s]Map:  19%|█▉        | 3490/17944 [00:02<00:11, 1290.29 examples/s]Map:  21%|██        | 3683/17944 [00:02<00:11, 1285.83 examples/s]Map:  22%|██▏       | 3876/17944 [00:03<00:10, 1282.29 examples/s]Map:  23%|██▎       | 4067/17944 [00:03<00:10, 1276.58 examples/s]Map:  23%|██▎       | 4197/17944 [00:03<00:10, 1279.64 examples/s]Map:  24%|██▍       | 4326/17944 [00:03<00:10, 1280.00 examples/s]Map:  25%|██▍       | 4456/17944 [00:03<00:10, 1282.20 examples/s]Map:  26%|██▌       | 4587/17944 [00:03<00:10, 1286.38 examples/s]Map:  26%|██▋       | 4717/17944 [00:03<00:10, 1288.48 examples/s]Map:  27%|██▋       | 4846/17944 [00:03<00:10, 1286.99 examples/s]Map:  28%|██▊       | 4975/17944 [00:03<00:10, 1285.09 examples/s]Map:  29%|██▉       | 5167/17944 [00:04<00:09, 1279.52 examples/s]Map:  30%|██▉       | 5297/17944 [00:04<00:09, 1282.03 examples/s]Map:  30%|███       | 5427/17944 [00:04<00:09, 1284.75 examples/s]Map:  31%|███       | 5556/17944 [00:04<00:09, 1283.73 examples/s]Map:  32%|███▏      | 5685/17944 [00:04<00:09, 1284.26 examples/s]Map:  32%|███▏      | 5815/17944 [00:04<00:09, 1287.83 examples/s]Map:  33%|███▎      | 5945/17944 [00:04<00:09, 1290.19 examples/s]Map:  34%|███▍      | 6075/17944 [00:04<00:09, 1291.48 examples/s]Map:  35%|███▍      | 6270/17944 [00:04<00:09, 1290.59 examples/s]Map:  36%|███▌      | 6464/17944 [00:05<00:08, 1285.64 examples/s]Map:  37%|███▋      | 6645/17944 [00:05<00:09, 1254.04 examples/s]Map:  38%|███▊      | 6774/17944 [00:05<00:08, 1260.09 examples/s]Map:  38%|███▊      | 6904/17944 [00:05<00:08, 1269.71 examples/s]Map:  39%|███▉      | 7034/17944 [00:05<00:08, 1276.46 examples/s]Map:  40%|███▉      | 7164/17944 [00:05<00:08, 1281.34 examples/s]Map:  41%|████      | 7354/17944 [00:05<00:08, 1274.07 examples/s]Map:  42%|████▏     | 7484/17944 [00:05<00:08, 1278.49 examples/s]Map:  42%|████▏     | 7614/17944 [00:05<00:08, 1282.24 examples/s]Map:  43%|████▎     | 7744/17944 [00:06<00:07, 1286.41 examples/s]Map:  44%|████▍     | 7873/17944 [00:06<00:07, 1284.70 examples/s]Map:  45%|████▍     | 8002/17944 [00:06<00:07, 1284.98 examples/s]Map:  45%|████▌     | 8132/17944 [00:06<00:07, 1288.33 examples/s]Map:  46%|████▌     | 8263/17944 [00:06<00:07, 1291.16 examples/s]Map:  47%|████▋     | 8426/17944 [00:06<00:07, 1208.45 examples/s]Map:  48%|████▊     | 8556/17944 [00:06<00:07, 1231.11 examples/s]Map:  48%|████▊     | 8688/17944 [00:06<00:07, 1253.76 examples/s]Map:  49%|████▉     | 8820/17944 [00:06<00:07, 1269.72 examples/s]Map:  50%|████▉     | 8952/17944 [00:07<00:07, 1282.37 examples/s]Map:  51%|█████     | 9083/17944 [00:07<00:06, 1287.07 examples/s]Map:  51%|█████▏    | 9215/17944 [00:07<00:06, 1293.36 examples/s]Map:  52%|█████▏    | 9347/17944 [00:07<00:06, 1297.18 examples/s]Map:  53%|█████▎    | 9479/17944 [00:07<00:06, 1300.65 examples/s]Map:  54%|█████▎    | 9611/17944 [00:07<00:06, 1304.10 examples/s]Map:  55%|█████▍    | 9806/17944 [00:07<00:06, 1301.05 examples/s]Map:  55%|█████▌    | 9938/17944 [00:07<00:06, 1304.81 examples/s]Map:  66%|██████▌   | 11779/17944 [00:07<00:01, 6055.67 examples/s]Map:  77%|███████▋  | 13855/17944 [00:07<00:00, 10230.66 examples/s]Map:  88%|████████▊ | 15845/17944 [00:08<00:00, 13020.38 examples/s]Map: 100%|█████████▉| 17875/17944 [00:08<00:00, 15120.01 examples/s]Map: 100%|██████████| 17944/17944 [00:08<00:00, 2147.93 examples/s] 
Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]Loading checkpoint shards:  25%|██▌       | 1/4 [00:01<00:03,  1.31s/it]Loading checkpoint shards:  50%|█████     | 2/4 [00:02<00:02,  1.27s/it]Loading checkpoint shards:  75%|███████▌  | 3/4 [00:03<00:01,  1.26s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:04<00:00,  1.22s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:04<00:00,  1.24s/it]
  0%|          | 0/9960 [00:00<?, ?it/s]  1%|          | 122/9960 [00:00<00:08, 1215.75it/s]  3%|▎         | 285/9960 [00:00<00:06, 1453.98it/s]  5%|▍         | 451/9960 [00:00<00:06, 1544.79it/s]  6%|▌         | 616/9960 [00:00<00:05, 1582.37it/s]  8%|▊         | 780/9960 [00:00<00:05, 1600.96it/s] 10%|▉         | 947/9960 [00:00<00:05, 1622.04it/s] 11%|█         | 1112/9960 [00:00<00:05, 1630.30it/s] 13%|█▎        | 1281/9960 [00:00<00:05, 1648.36it/s] 15%|█▍        | 1447/9960 [00:00<00:05, 1651.40it/s] 16%|█▌        | 1613/9960 [00:01<00:05, 1653.46it/s] 18%|█▊        | 1779/9960 [00:01<00:05, 1542.27it/s] 20%|█▉        | 1948/9960 [00:01<00:05, 1583.18it/s] 21%|██        | 2110/9960 [00:01<00:04, 1593.86it/s] 23%|██▎       | 2279/9960 [00:01<00:04, 1619.29it/s] 25%|██▍       | 2444/9960 [00:01<00:04, 1625.28it/s] 26%|██▌       | 2609/9960 [00:01<00:04, 1630.79it/s] 28%|██▊       | 2774/9960 [00:01<00:04, 1634.30it/s] 29%|██▉       | 2938/9960 [00:01<00:04, 1635.69it/s] 31%|███       | 3102/9960 [00:01<00:04, 1634.11it/s] 33%|███▎      | 3267/9960 [00:02<00:04, 1637.26it/s] 34%|███▍      | 3431/9960 [00:02<00:04, 1484.12it/s] 36%|███▌      | 3597/9960 [00:02<00:04, 1530.47it/s] 38%|███▊      | 3759/9960 [00:02<00:03, 1553.50it/s] 39%|███▉      | 3917/9960 [00:02<00:03, 1539.04it/s] 41%|████      | 4073/9960 [00:02<00:03, 1535.75it/s] 42%|████▏     | 4229/9960 [00:02<00:03, 1542.19it/s] 44%|████▍     | 4390/9960 [00:02<00:03, 1560.03it/s] 46%|████▌     | 4551/9960 [00:02<00:03, 1573.78it/s] 47%|████▋     | 4709/9960 [00:02<00:03, 1498.61it/s] 49%|████▉     | 4877/9960 [00:03<00:03, 1550.64it/s] 51%|█████     | 5045/9960 [00:03<00:03, 1586.88it/s] 52%|█████▏    | 5215/9960 [00:03<00:02, 1617.30it/s] 54%|█████▍    | 5383/9960 [00:03<00:02, 1633.31it/s] 56%|█████▌    | 5553/9960 [00:03<00:02, 1651.53it/s] 57%|█████▋    | 5722/9960 [00:03<00:02, 1661.93it/s] 59%|█████▉    | 5889/9960 [00:03<00:02, 1650.57it/s] 61%|██████    | 6055/9960 [00:03<00:02, 1621.89it/s] 62%|██████▏   | 6218/9960 [00:03<00:02, 1579.27it/s] 64%|██████▍   | 6385/9960 [00:04<00:02, 1604.41it/s] 66%|██████▌   | 6552/9960 [00:04<00:02, 1620.94it/s] 67%|██████▋   | 6720/9960 [00:04<00:01, 1637.06it/s] 69%|██████▉   | 6888/9960 [00:04<00:01, 1647.91it/s] 71%|███████   | 7056/9960 [00:04<00:01, 1656.09it/s] 73%|███████▎  | 7225/9960 [00:04<00:01, 1665.52it/s] 74%|███████▍  | 7393/9960 [00:04<00:01, 1668.73it/s] 76%|███████▌  | 7560/9960 [00:04<00:01, 1631.06it/s] 78%|███████▊  | 7724/9960 [00:04<00:01, 1621.21it/s] 79%|███████▉  | 7889/9960 [00:04<00:01, 1628.54it/s] 81%|████████  | 8055/9960 [00:05<00:01, 1635.54it/s] 83%|████████▎ | 8223/9960 [00:05<00:01, 1646.50it/s] 84%|████████▍ | 8390/9960 [00:05<00:00, 1652.75it/s] 86%|████████▌ | 8556/9960 [00:05<00:00, 1646.02it/s] 88%|████████▊ | 8723/9960 [00:05<00:00, 1650.90it/s] 89%|████████▉ | 8892/9960 [00:05<00:00, 1661.39it/s] 91%|█████████ | 9064/9960 [00:05<00:00, 1676.97it/s] 93%|█████████▎| 9235/9960 [00:05<00:00, 1685.75it/s] 94%|█████████▍| 9408/9960 [00:05<00:00, 1696.21it/s] 96%|█████████▌| 9578/9960 [00:05<00:00, 1662.85it/s] 98%|█████████▊| 9745/9960 [00:06<00:00, 1622.56it/s] 99%|█████████▉| 9908/9960 [00:06<00:00, 1620.98it/s]100%|██████████| 9960/9960 [00:06<00:00, 1611.73it/s]
Epoch 1/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]We detected that you are passing `past_key_values` as a tuple and this is deprecated and will be removed in v4.43. Please use an appropriate `Cache` class (https://huggingface.co/docs/transformers/v4.41.3/en/internal/generation_utils#transformers.Cache)
Epoch 1/20 Batches: 100%|██████████| 1/1 [00:01<00:00,  1.59s/it]                                                                 epoch_loss: 0.713432788848877
Epoch [1/20], Loss: 0.7134
Best test AUROC: 0.5359, at epoch: 0
Epoch [1/20],Test AUROC: 0.5359
Epoch 2/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 2/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                 epoch_loss: 0.6871928572654724
Epoch [2/20], Loss: 0.6872
Best test AUROC: 0.6194, at epoch: 1
Epoch [2/20],Test AUROC: 0.6194
Epoch 3/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 3/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                 epoch_loss: 0.6709126830101013
Epoch [3/20], Loss: 0.6709
Best test AUROC: 0.6733, at epoch: 2
Epoch [3/20],Test AUROC: 0.6733
Epoch 4/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 4/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                 epoch_loss: 0.6557361483573914
Epoch [4/20], Loss: 0.6557
Best test AUROC: 0.7101, at epoch: 3
Epoch [4/20],Test AUROC: 0.7101
Epoch 5/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 5/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                 epoch_loss: 0.6397219896316528
Epoch [5/20], Loss: 0.6397
Best test AUROC: 0.7375, at epoch: 4
Epoch [5/20],Test AUROC: 0.7375
Epoch 6/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 6/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                 epoch_loss: 0.6235346794128418
Epoch [6/20], Loss: 0.6235
Best test AUROC: 0.7577, at epoch: 5
Epoch [6/20],Test AUROC: 0.7577
Epoch 7/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 7/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                 epoch_loss: 0.606218695640564
Epoch [7/20], Loss: 0.6062
Best test AUROC: 0.7707, at epoch: 6
Epoch [7/20],Test AUROC: 0.7707
Epoch 8/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 8/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                 epoch_loss: 0.5869224071502686
Epoch [8/20], Loss: 0.5869
Best test AUROC: 0.7779, at epoch: 7
Epoch [8/20],Test AUROC: 0.7779
Epoch 9/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 9/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                 epoch_loss: 0.5686590075492859
Epoch [9/20], Loss: 0.5687
Best test AUROC: 0.7813, at epoch: 8
Epoch [9/20],Test AUROC: 0.7813
Epoch 10/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 10/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.5500036478042603
Epoch [10/20], Loss: 0.5500
Best test AUROC: 0.7851, at epoch: 9
Epoch [10/20],Test AUROC: 0.7851
Epoch 11/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 11/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.5284203290939331
Epoch [11/20], Loss: 0.5284
Best test AUROC: 0.7893, at epoch: 10
Epoch [11/20],Test AUROC: 0.7893
Epoch 12/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 12/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.5034075975418091
Epoch [12/20], Loss: 0.5034
Best test AUROC: 0.7915, at epoch: 11
Epoch [12/20],Test AUROC: 0.7915
Epoch 13/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 13/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                  epoch_loss: 0.47777390480041504
Epoch [13/20], Loss: 0.4778
Epoch [13/20],Test AUROC: 0.7910
Epoch 14/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 14/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.45165079832077026
Epoch [14/20], Loss: 0.4517
Epoch [14/20],Test AUROC: 0.7901
Epoch 15/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 15/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.4242800176143646
Epoch [15/20], Loss: 0.4243
Epoch [15/20],Test AUROC: 0.7894
Epoch 16/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 16/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                  epoch_loss: 0.3953724205493927
Epoch [16/20], Loss: 0.3954
Epoch [16/20],Test AUROC: 0.7877
Epoch 17/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 17/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                  epoch_loss: 0.36574023962020874
Epoch [17/20], Loss: 0.3657
Epoch [17/20],Test AUROC: 0.7853
Epoch 18/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 18/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                  epoch_loss: 0.3359655737876892
Epoch [18/20], Loss: 0.3360
Epoch [18/20],Test AUROC: 0.7851
Epoch 19/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 19/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                  epoch_loss: 0.3104928135871887
Epoch [19/20], Loss: 0.3105
Epoch [19/20],Test AUROC: 0.7845
Epoch 20/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 20/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                  epoch_loss: 0.2909630239009857
Epoch [20/20], Loss: 0.2910
Epoch [20/20],Test AUROC: 0.7882
  0%|          | 0/115 [00:00<?, ?it/s]  1%|          | 1/115 [00:00<00:55,  2.06it/s]  2%|▏         | 2/115 [00:01<00:58,  1.94it/s]  3%|▎         | 3/115 [00:01<00:48,  2.29it/s]  3%|▎         | 4/115 [00:01<00:52,  2.10it/s]  4%|▍         | 5/115 [00:02<00:53,  2.05it/s]  5%|▌         | 6/115 [00:02<00:50,  2.17it/s]  6%|▌         | 7/115 [00:03<00:46,  2.34it/s]  7%|▋         | 8/115 [00:03<00:45,  2.34it/s]  8%|▊         | 9/115 [00:04<00:47,  2.21it/s]  9%|▊         | 10/115 [00:04<00:50,  2.09it/s] 10%|▉         | 11/115 [00:04<00:45,  2.31it/s] 10%|█         | 12/115 [00:05<00:48,  2.10it/s] 11%|█▏        | 13/115 [00:06<00:49,  2.08it/s] 12%|█▏        | 14/115 [00:06<00:49,  2.03it/s] 13%|█▎        | 15/115 [00:06<00:44,  2.24it/s] 14%|█▍        | 16/115 [00:07<00:48,  2.03it/s] 15%|█▍        | 17/115 [00:08<00:50,  1.94it/s] 16%|█▌        | 18/115 [00:08<00:52,  1.87it/s] 17%|█▋        | 19/115 [00:08<00:45,  2.10it/s] 17%|█▋        | 20/115 [00:09<00:43,  2.17it/s] 18%|█▊        | 21/115 [00:09<00:45,  2.07it/s] 19%|█▉        | 22/115 [00:10<00:45,  2.04it/s] 20%|██        | 23/115 [00:10<00:40,  2.26it/s] 21%|██        | 24/115 [00:11<00:39,  2.31it/s] 22%|██▏       | 25/115 [00:11<00:36,  2.48it/s] 23%|██▎       | 26/115 [00:11<00:33,  2.62it/s] 23%|██▎       | 27/115 [00:12<00:37,  2.34it/s] 24%|██▍       | 28/115 [00:12<00:40,  2.15it/s] 25%|██▌       | 29/115 [00:13<00:44,  1.92it/s] 26%|██▌       | 30/115 [00:14<00:44,  1.90it/s] 27%|██▋       | 31/115 [00:14<00:40,  2.06it/s] 28%|██▊       | 32/115 [00:15<00:40,  2.05it/s] 29%|██▊       | 33/115 [00:15<00:42,  1.92it/s] 30%|██▉       | 34/115 [00:16<00:41,  1.98it/s] 30%|███       | 35/115 [00:16<00:39,  2.04it/s] 31%|███▏      | 36/115 [00:17<00:40,  1.97it/s] 32%|███▏      | 37/115 [00:17<00:40,  1.90it/s] 33%|███▎      | 38/115 [00:18<00:39,  1.95it/s] 34%|███▍      | 39/115 [00:18<00:36,  2.09it/s] 35%|███▍      | 40/115 [00:18<00:34,  2.16it/s] 36%|███▌      | 41/115 [00:19<00:37,  1.96it/s] 37%|███▋      | 42/115 [00:20<00:36,  1.97it/s] 37%|███▋      | 43/115 [00:20<00:42,  1.71it/s] 38%|███▊      | 44/115 [00:21<00:46,  1.52it/s] 39%|███▉      | 45/115 [00:22<00:43,  1.59it/s] 40%|████      | 46/115 [00:22<00:42,  1.61it/s] 41%|████      | 47/115 [00:23<00:39,  1.71it/s] 42%|████▏     | 48/115 [00:24<00:51,  1.29it/s] 43%|████▎     | 49/115 [00:25<00:48,  1.36it/s] 43%|████▎     | 50/115 [00:25<00:44,  1.46it/s] 44%|████▍     | 51/115 [00:26<00:40,  1.58it/s] 45%|████▌     | 52/115 [00:26<00:40,  1.56it/s] 46%|████▌     | 53/115 [00:27<00:39,  1.57it/s] 47%|████▋     | 54/115 [00:28<00:37,  1.63it/s] 48%|████▊     | 55/115 [00:28<00:31,  1.90it/s] 49%|████▊     | 56/115 [00:28<00:29,  2.01it/s] 50%|████▉     | 57/115 [00:29<00:25,  2.29it/s] 50%|█████     | 58/115 [00:29<00:23,  2.42it/s] 51%|█████▏    | 59/115 [00:29<00:21,  2.63it/s] 52%|█████▏    | 60/115 [00:30<00:23,  2.34it/s] 53%|█████▎    | 61/115 [00:30<00:23,  2.30it/s] 54%|█████▍    | 62/115 [00:31<00:24,  2.15it/s] 55%|█████▍    | 63/115 [00:32<00:26,  1.95it/s] 56%|█████▌    | 64/115 [00:32<00:25,  2.00it/s] 57%|█████▋    | 65/115 [00:32<00:24,  2.06it/s] 57%|█████▋    | 66/115 [00:33<00:24,  1.99it/s] 58%|█████▊    | 67/115 [00:33<00:22,  2.16it/s] 59%|█████▉    | 68/115 [00:34<00:20,  2.26it/s] 60%|██████    | 69/115 [00:34<00:21,  2.18it/s] 61%|██████    | 70/115 [00:35<00:21,  2.11it/s] 62%|██████▏   | 71/115 [00:35<00:20,  2.13it/s] 63%|██████▎   | 72/115 [00:36<00:20,  2.09it/s] 63%|██████▎   | 73/115 [00:36<00:18,  2.25it/s] 64%|██████▍   | 74/115 [00:36<00:17,  2.34it/s] 65%|██████▌   | 75/115 [00:37<00:17,  2.30it/s] 66%|██████▌   | 76/115 [00:37<00:18,  2.13it/s] 67%|██████▋   | 77/115 [00:38<00:18,  2.03it/s] 68%|██████▊   | 78/115 [00:38<00:16,  2.18it/s] 69%|██████▊   | 79/115 [00:39<00:17,  2.08it/s] 70%|██████▉   | 80/115 [00:39<00:15,  2.24it/s] 70%|███████   | 81/115 [00:40<00:14,  2.29it/s] 71%|███████▏  | 82/115 [00:40<00:14,  2.31it/s] 72%|███████▏  | 83/115 [00:41<00:13,  2.38it/s] 73%|███████▎  | 84/115 [00:41<00:13,  2.23it/s] 74%|███████▍  | 85/115 [00:42<00:13,  2.19it/s] 75%|███████▍  | 86/115 [00:42<00:14,  2.07it/s] 76%|███████▌  | 87/115 [00:43<00:15,  1.85it/s] 77%|███████▋  | 88/115 [00:43<00:14,  1.89it/s] 77%|███████▋  | 89/115 [00:44<00:11,  2.17it/s] 78%|███████▊  | 90/115 [00:44<00:11,  2.19it/s] 79%|███████▉  | 91/115 [00:45<00:12,  1.89it/s] 80%|████████  | 92/115 [00:45<00:12,  1.78it/s] 81%|████████  | 93/115 [00:46<00:12,  1.79it/s] 82%|████████▏ | 94/115 [00:46<00:11,  1.89it/s] 83%|████████▎ | 95/115 [00:47<00:10,  1.95it/s] 83%|████████▎ | 96/115 [00:47<00:10,  1.82it/s] 84%|████████▍ | 97/115 [00:48<00:09,  1.88it/s] 85%|████████▌ | 98/115 [00:48<00:08,  2.06it/s] 86%|████████▌ | 99/115 [00:49<00:07,  2.13it/s] 87%|████████▋ | 100/115 [00:49<00:06,  2.29it/s] 88%|████████▊ | 101/115 [00:50<00:06,  2.20it/s] 89%|████████▊ | 102/115 [00:50<00:06,  2.14it/s] 90%|████████▉ | 103/115 [00:50<00:05,  2.35it/s] 90%|█████████ | 104/115 [00:51<00:04,  2.27it/s] 91%|█████████▏| 105/115 [00:51<00:03,  2.58it/s] 92%|█████████▏| 106/115 [00:52<00:03,  2.38it/s] 93%|█████████▎| 107/115 [00:52<00:03,  2.45it/s] 94%|█████████▍| 108/115 [00:52<00:02,  2.64it/s] 95%|█████████▍| 109/115 [00:53<00:02,  2.77it/s] 96%|█████████▌| 110/115 [00:54<00:02,  1.87it/s] 97%|█████████▋| 111/115 [00:54<00:02,  1.65it/s] 97%|█████████▋| 112/115 [00:56<00:02,  1.10it/s] 98%|█████████▊| 113/115 [00:56<00:01,  1.32it/s] 99%|█████████▉| 114/115 [00:57<00:00,  1.49it/s]100%|██████████| 115/115 [00:57<00:00,  2.00it/s]
tsv_main1.py:175: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  exemplar_label = torch.tensor(exemplar_labels).cuda()
tsv_main1.py:182: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  augmented_labels = torch.concat((selected_labels, torch.tensor(exemplar_labels).clone().cuda()))
Epoch 1/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 1/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.04it/s]Epoch 1/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.43it/s]Epoch 1/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                 epoch_loss: 0.3443311850229899
Epoch [1/20], Loss: 0.3443
Best test AUROC: 0.7981, at epoch: 20
Epoch 2/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 2/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.04it/s]Epoch 2/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.43it/s]Epoch 2/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                 epoch_loss: 0.26609785854816437
Epoch [2/20], Loss: 0.2661
Best test AUROC: 0.8045, at epoch: 21
Epoch 3/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 3/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.04it/s]Epoch 3/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.43it/s]Epoch 3/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                 epoch_loss: 0.20560785631338754
Epoch [3/20], Loss: 0.2056
Best test AUROC: 0.8139, at epoch: 22
Epoch 4/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 4/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.04it/s]Epoch 4/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.43it/s]Epoch 4/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                 epoch_loss: 0.16065441568692526
Epoch [4/20], Loss: 0.1607
Epoch 5/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 5/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.04it/s]Epoch 5/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.43it/s]Epoch 5/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                 epoch_loss: 0.12460708369811375
Epoch [5/20], Loss: 0.1246
Epoch 6/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 6/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.05it/s]Epoch 6/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.44it/s]Epoch 6/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                 epoch_loss: 0.0956527516245842
Epoch [6/20], Loss: 0.0957
Epoch 7/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 7/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.04it/s]Epoch 7/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.43it/s]Epoch 7/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                 epoch_loss: 0.07701827461520831
Epoch [7/20], Loss: 0.0770
Epoch 8/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 8/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.04it/s]Epoch 8/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.44it/s]Epoch 8/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.24it/s]                                                                 epoch_loss: 0.06134890764951706
Epoch [8/20], Loss: 0.0613
Epoch 9/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 9/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.04it/s]Epoch 9/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.44it/s]Epoch 9/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                 epoch_loss: 0.048830353344480194
Epoch [9/20], Loss: 0.0488
Epoch 10/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 10/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.04it/s]Epoch 10/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.43it/s]Epoch 10/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                  epoch_loss: 0.038925676296154656
Epoch [10/20], Loss: 0.0389
Epoch 11/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 11/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.04it/s]Epoch 11/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.43it/s]Epoch 11/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                  epoch_loss: 0.03134601749479771
Epoch [11/20], Loss: 0.0313
Epoch 12/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 12/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.04it/s]Epoch 12/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.43it/s]Epoch 12/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                  epoch_loss: 0.02534647099673748
Epoch [12/20], Loss: 0.0253
Epoch 13/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 13/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.04it/s]Epoch 13/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.43it/s]Epoch 13/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                  epoch_loss: 0.020511352146665256
Epoch [13/20], Loss: 0.0205
Epoch 14/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 14/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.04it/s]Epoch 14/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.43it/s]Epoch 14/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                  epoch_loss: 0.016670255921781063
Epoch [14/20], Loss: 0.0167
Epoch 15/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 15/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.05it/s]Epoch 15/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.44it/s]Epoch 15/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                  epoch_loss: 0.01364047716682156
Epoch [15/20], Loss: 0.0136
Epoch 16/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 16/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.04it/s]Epoch 16/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.44it/s]Epoch 16/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.24it/s]                                                                  epoch_loss: 0.01125120526800553
Epoch [16/20], Loss: 0.0113
Epoch 17/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 17/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.04it/s]Epoch 17/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.43it/s]Epoch 17/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                  epoch_loss: 0.009304483731587728
Epoch [17/20], Loss: 0.0093
Epoch 18/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 18/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.04it/s]Epoch 18/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.43it/s]Epoch 18/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.24it/s]                                                                  epoch_loss: 0.007717076223343611
Epoch [18/20], Loss: 0.0077
Epoch 19/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 19/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.04it/s]Epoch 19/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.44it/s]Epoch 19/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                  epoch_loss: 0.006426379084587097
Epoch [19/20], Loss: 0.0064
Epoch 20/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 20/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.04it/s]Epoch 20/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.44it/s]Epoch 20/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.24it/s]                                                                  epoch_loss: 0.005370696308091283
Epoch [20/20], Loss: 0.0054
best_test_auroc: 0.8138526666498266
