Map:   0%|          | 0/17944 [00:00<?, ? examples/s]Map:   1%|          | 120/17944 [00:00<00:15, 1172.67 examples/s]Map:   1%|▏         | 248/17944 [00:00<00:14, 1228.98 examples/s]Map:   2%|▏         | 430/17944 [00:00<00:14, 1209.65 examples/s]Map:   3%|▎         | 559/17944 [00:00<00:14, 1234.77 examples/s]Map:   4%|▍         | 748/17944 [00:00<00:13, 1241.41 examples/s]Map:   5%|▍         | 876/17944 [00:00<00:13, 1248.80 examples/s]Map:   6%|▌         | 1005/17944 [00:00<00:13, 1256.53 examples/s]Map:   6%|▋         | 1135/17944 [00:00<00:13, 1265.28 examples/s]Map:   7%|▋         | 1265/17944 [00:01<00:13, 1270.98 examples/s]Map:   8%|▊         | 1395/17944 [00:01<00:12, 1273.99 examples/s]Map:   8%|▊         | 1524/17944 [00:01<00:12, 1275.28 examples/s]Map:   9%|▉         | 1654/17944 [00:01<00:12, 1278.99 examples/s]Map:  10%|▉         | 1784/17944 [00:01<00:12, 1282.76 examples/s]Map:  11%|█         | 1914/17944 [00:01<00:12, 1284.25 examples/s]Map:  11%|█▏        | 2043/17944 [00:01<00:12, 1283.13 examples/s]Map:  12%|█▏        | 2173/17944 [00:01<00:12, 1284.74 examples/s]Map:  13%|█▎        | 2303/17944 [00:01<00:12, 1287.47 examples/s]Map:  14%|█▎        | 2433/17944 [00:01<00:12, 1288.30 examples/s]Map:  14%|█▍        | 2563/17944 [00:02<00:11, 1285.73 examples/s]Map:  15%|█▌        | 2692/17944 [00:02<00:11, 1284.38 examples/s]Map:  16%|█▌        | 2884/17944 [00:02<00:11, 1276.57 examples/s]Map:  17%|█▋        | 3014/17944 [00:02<00:11, 1278.85 examples/s]Map:  18%|█▊        | 3143/17944 [00:02<00:11, 1278.62 examples/s]Map:  18%|█▊        | 3272/17944 [00:02<00:11, 1278.91 examples/s]Map:  19%|█▉        | 3402/17944 [00:02<00:11, 1280.58 examples/s]Map:  20%|█▉        | 3531/17944 [00:02<00:11, 1280.90 examples/s]Map:  21%|██        | 3708/17944 [00:02<00:11, 1237.85 examples/s]Map:  21%|██▏       | 3838/17944 [00:03<00:11, 1250.40 examples/s]Map:  22%|██▏       | 3967/17944 [00:03<00:11, 1259.22 examples/s]Map:  23%|██▎       | 4095/17944 [00:03<00:10, 1261.72 examples/s]Map:  24%|██▎       | 4224/17944 [00:03<00:10, 1267.98 examples/s]Map:  24%|██▍       | 4354/17944 [00:03<00:10, 1273.12 examples/s]Map:  25%|██▍       | 4483/17944 [00:03<00:10, 1273.02 examples/s]Map:  26%|██▌       | 4612/17944 [00:03<00:10, 1276.11 examples/s]Map:  26%|██▋       | 4741/17944 [00:03<00:10, 1278.45 examples/s]Map:  27%|██▋       | 4929/17944 [00:03<00:10, 1265.12 examples/s]Map:  29%|██▊       | 5115/17944 [00:04<00:10, 1252.59 examples/s]Map:  29%|██▉       | 5244/17944 [00:04<00:10, 1260.60 examples/s]Map:  30%|██▉       | 5374/17944 [00:04<00:09, 1269.04 examples/s]Map:  31%|███       | 5505/17944 [00:04<00:09, 1276.64 examples/s]Map:  31%|███▏      | 5635/17944 [00:04<00:09, 1281.20 examples/s]Map:  32%|███▏      | 5827/17944 [00:04<00:09, 1276.93 examples/s]Map:  33%|███▎      | 5955/17944 [00:04<00:09, 1277.47 examples/s]Map:  34%|███▍      | 6084/17944 [00:04<00:09, 1278.05 examples/s]Map:  35%|███▍      | 6214/17944 [00:04<00:09, 1280.89 examples/s]Map:  35%|███▌      | 6344/17944 [00:04<00:09, 1282.35 examples/s]Map:  36%|███▌      | 6473/17944 [00:05<00:08, 1282.08 examples/s]Map:  37%|███▋      | 6603/17944 [00:05<00:08, 1282.94 examples/s]Map:  38%|███▊      | 6794/17944 [00:05<00:08, 1273.86 examples/s]Map:  39%|███▊      | 6923/17944 [00:05<00:08, 1276.54 examples/s]Map:  39%|███▉      | 7051/17944 [00:05<00:08, 1275.66 examples/s]Map:  40%|████      | 7181/17944 [00:05<00:08, 1278.65 examples/s]Map:  41%|████      | 7310/17944 [00:05<00:08, 1278.42 examples/s]Map:  41%|████▏     | 7439/17944 [00:05<00:08, 1280.32 examples/s]Map:  42%|████▏     | 7569/17944 [00:05<00:08, 1282.72 examples/s]Map:  43%|████▎     | 7698/17944 [00:06<00:07, 1283.88 examples/s]Map:  44%|████▎     | 7828/17944 [00:06<00:07, 1285.12 examples/s]Map:  44%|████▍     | 7957/17944 [00:06<00:07, 1282.44 examples/s]Map:  45%|████▌     | 8086/17944 [00:06<00:07, 1283.28 examples/s]Map:  46%|████▌     | 8215/17944 [00:06<00:07, 1281.57 examples/s]Map:  47%|████▋     | 8345/17944 [00:06<00:07, 1284.31 examples/s]Map:  47%|████▋     | 8476/17944 [00:06<00:07, 1287.34 examples/s]Map:  48%|████▊     | 8606/17944 [00:06<00:07, 1290.12 examples/s]Map:  49%|████▊     | 8736/17944 [00:06<00:07, 1292.23 examples/s]Map:  49%|████▉     | 8866/17944 [00:06<00:07, 1291.70 examples/s]Map:  50%|█████     | 8997/17944 [00:07<00:06, 1293.53 examples/s]Map:  51%|█████     | 9191/17944 [00:07<00:06, 1289.38 examples/s]Map:  52%|█████▏    | 9321/17944 [00:07<00:06, 1290.87 examples/s]Map:  53%|█████▎    | 9515/17944 [00:07<00:06, 1287.62 examples/s]Map:  54%|█████▍    | 9645/17944 [00:07<00:06, 1288.49 examples/s]Map:  54%|█████▍    | 9775/17944 [00:07<00:06, 1290.12 examples/s]Map:  55%|█████▌    | 9905/17944 [00:07<00:06, 1289.85 examples/s]Map:  63%|██████▎   | 11217/17944 [00:07<00:01, 4640.81 examples/s]Map:  74%|███████▎  | 13213/17944 [00:07<00:00, 9052.88 examples/s]Map:  84%|████████▍ | 15099/17944 [00:08<00:00, 11910.22 examples/s]Map:  95%|█████████▌| 17070/17944 [00:08<00:00, 14201.21 examples/s]Map: 100%|██████████| 17944/17944 [00:08<00:00, 2133.28 examples/s] 
Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]Loading checkpoint shards:  25%|██▌       | 1/4 [00:01<00:03,  1.28s/it]Loading checkpoint shards:  50%|█████     | 2/4 [00:02<00:02,  1.29s/it]Loading checkpoint shards:  75%|███████▌  | 3/4 [00:03<00:01,  1.24s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:04<00:00,  1.17s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:04<00:00,  1.20s/it]
  0%|          | 0/9960 [00:00<?, ?it/s]  2%|▏         | 156/9960 [00:00<00:06, 1554.97it/s]  3%|▎         | 323/9960 [00:00<00:05, 1618.32it/s]  5%|▍         | 494/9960 [00:00<00:05, 1656.35it/s]  7%|▋         | 661/9960 [00:00<00:05, 1658.87it/s]  8%|▊         | 827/9960 [00:00<00:06, 1509.47it/s] 10%|▉         | 984/9960 [00:00<00:05, 1526.56it/s] 12%|█▏        | 1155/9960 [00:00<00:05, 1582.27it/s] 13%|█▎        | 1328/9960 [00:00<00:05, 1627.70it/s] 15%|█▌        | 1499/9960 [00:00<00:05, 1650.17it/s] 17%|█▋        | 1669/9960 [00:01<00:04, 1663.84it/s] 18%|█▊        | 1841/9960 [00:01<00:04, 1679.89it/s] 20%|██        | 2016/9960 [00:01<00:04, 1698.67it/s] 22%|██▏       | 2189/9960 [00:01<00:04, 1707.89it/s] 24%|██▎       | 2360/9960 [00:01<00:04, 1640.95it/s] 25%|██▌       | 2525/9960 [00:01<00:04, 1556.65it/s] 27%|██▋       | 2695/9960 [00:01<00:04, 1594.90it/s] 29%|██▉       | 2864/9960 [00:01<00:04, 1621.31it/s] 30%|███       | 3032/9960 [00:01<00:04, 1637.21it/s] 32%|███▏      | 3200/9960 [00:01<00:04, 1648.00it/s] 34%|███▍      | 3372/9960 [00:02<00:03, 1667.65it/s] 36%|███▌      | 3541/9960 [00:02<00:03, 1674.03it/s] 37%|███▋      | 3709/9960 [00:02<00:03, 1613.17it/s] 39%|███▉      | 3874/9960 [00:02<00:03, 1621.55it/s] 41%|████      | 4037/9960 [00:02<00:03, 1499.58it/s] 42%|████▏     | 4200/9960 [00:02<00:03, 1535.26it/s] 44%|████▍     | 4366/9960 [00:02<00:03, 1568.77it/s] 46%|████▌     | 4532/9960 [00:02<00:03, 1593.69it/s] 47%|████▋     | 4694/9960 [00:02<00:03, 1601.16it/s] 49%|████▉     | 4868/9960 [00:03<00:03, 1639.53it/s] 51%|█████     | 5044/9960 [00:03<00:02, 1671.53it/s] 52%|█████▏    | 5212/9960 [00:03<00:02, 1643.13it/s] 54%|█████▍    | 5384/9960 [00:03<00:02, 1663.91it/s] 56%|█████▌    | 5558/9960 [00:03<00:02, 1685.10it/s] 58%|█████▊    | 5730/9960 [00:03<00:02, 1695.42it/s] 59%|█████▉    | 5902/9960 [00:03<00:02, 1702.15it/s] 61%|██████    | 6075/9960 [00:03<00:02, 1709.78it/s] 63%|██████▎   | 6248/9960 [00:03<00:02, 1714.97it/s] 64%|██████▍   | 6420/9960 [00:03<00:02, 1715.36it/s] 66%|██████▌   | 6592/9960 [00:04<00:01, 1709.86it/s] 68%|██████▊   | 6764/9960 [00:04<00:01, 1649.56it/s] 70%|██████▉   | 6933/9960 [00:04<00:01, 1658.94it/s] 71%|███████▏  | 7104/9960 [00:04<00:01, 1672.29it/s] 73%|███████▎  | 7274/9960 [00:04<00:01, 1678.04it/s] 75%|███████▍  | 7443/9960 [00:04<00:01, 1665.57it/s] 76%|███████▋  | 7610/9960 [00:04<00:01, 1626.27it/s] 78%|███████▊  | 7775/9960 [00:04<00:01, 1632.21it/s] 80%|███████▉  | 7939/9960 [00:04<00:01, 1611.21it/s] 81%|████████▏ | 8105/9960 [00:04<00:01, 1624.88it/s] 83%|████████▎ | 8268/9960 [00:05<00:01, 1622.02it/s] 85%|████████▍ | 8434/9960 [00:05<00:00, 1632.12it/s] 86%|████████▋ | 8598/9960 [00:05<00:00, 1628.72it/s] 88%|████████▊ | 8761/9960 [00:05<00:00, 1628.39it/s] 90%|████████▉ | 8929/9960 [00:05<00:00, 1642.01it/s] 91%|█████████▏| 9096/9960 [00:05<00:00, 1649.54it/s] 93%|█████████▎| 9261/9960 [00:05<00:00, 1645.45it/s] 95%|█████████▍| 9426/9960 [00:05<00:00, 1618.11it/s] 96%|█████████▋| 9588/9960 [00:05<00:00, 1604.74it/s] 98%|█████████▊| 9749/9960 [00:05<00:00, 1581.97it/s] 99%|█████████▉| 9908/9960 [00:06<00:00, 1539.55it/s]100%|██████████| 9960/9960 [00:06<00:00, 1629.95it/s]
Epoch 1/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]We detected that you are passing `past_key_values` as a tuple and this is deprecated and will be removed in v4.43. Please use an appropriate `Cache` class (https://huggingface.co/docs/transformers/v4.41.3/en/internal/generation_utils#transformers.Cache)
Epoch 1/20 Batches: 100%|██████████| 1/1 [00:01<00:00,  1.52s/it]                                                                 epoch_loss: 0.713432788848877
Epoch [1/20], Loss: 0.7134
Best test AUROC: 0.5499, at epoch: 0
Epoch [1/20],Test AUROC: 0.5499
Epoch 2/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 2/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.07it/s]                                                                 epoch_loss: 0.6844832897186279
Epoch [2/20], Loss: 0.6845
Best test AUROC: 0.6380, at epoch: 1
Epoch [2/20],Test AUROC: 0.6380
Epoch 3/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 3/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                 epoch_loss: 0.6652249097824097
Epoch [3/20], Loss: 0.6652
Best test AUROC: 0.6887, at epoch: 2
Epoch [3/20],Test AUROC: 0.6887
Epoch 4/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 4/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                 epoch_loss: 0.6480625867843628
Epoch [4/20], Loss: 0.6481
Best test AUROC: 0.7267, at epoch: 3
Epoch [4/20],Test AUROC: 0.7267
Epoch 5/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 5/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                 epoch_loss: 0.6293541193008423
Epoch [5/20], Loss: 0.6294
Best test AUROC: 0.7547, at epoch: 4
Epoch [5/20],Test AUROC: 0.7547
Epoch 6/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 6/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                 epoch_loss: 0.6091631650924683
Epoch [6/20], Loss: 0.6092
Best test AUROC: 0.7721, at epoch: 5
Epoch [6/20],Test AUROC: 0.7721
Epoch 7/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 7/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                 epoch_loss: 0.5879179239273071
Epoch [7/20], Loss: 0.5879
Best test AUROC: 0.7827, at epoch: 6
Epoch [7/20],Test AUROC: 0.7827
Epoch 8/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 8/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                 epoch_loss: 0.5670173168182373
Epoch [8/20], Loss: 0.5670
Best test AUROC: 0.7876, at epoch: 7
Epoch [8/20],Test AUROC: 0.7876
Epoch 9/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 9/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                 epoch_loss: 0.5406169295310974
Epoch [9/20], Loss: 0.5406
Best test AUROC: 0.7891, at epoch: 8
Epoch [9/20],Test AUROC: 0.7891
Epoch 10/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 10/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                  epoch_loss: 0.5122696757316589
Epoch [10/20], Loss: 0.5123
Best test AUROC: 0.7948, at epoch: 9
Epoch [10/20],Test AUROC: 0.7948
Epoch 11/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 11/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.4820070266723633
Epoch [11/20], Loss: 0.4820
Best test AUROC: 0.7976, at epoch: 10
Epoch [11/20],Test AUROC: 0.7976
Epoch 12/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 12/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                  epoch_loss: 0.4485517740249634
Epoch [12/20], Loss: 0.4486
Best test AUROC: 0.7992, at epoch: 11
Epoch [12/20],Test AUROC: 0.7992
Epoch 13/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 13/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.41293513774871826
Epoch [13/20], Loss: 0.4129
Epoch [13/20],Test AUROC: 0.7958
Epoch 14/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 14/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.3783020079135895
Epoch [14/20], Loss: 0.3783
Epoch [14/20],Test AUROC: 0.7971
Epoch 15/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 15/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.34939998388290405
Epoch [15/20], Loss: 0.3494
Epoch [15/20],Test AUROC: 0.7984
Epoch 16/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 16/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.32633501291275024
Epoch [16/20], Loss: 0.3263
Epoch [16/20],Test AUROC: 0.7939
Epoch 17/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 17/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.30574989318847656
Epoch [17/20], Loss: 0.3057
Epoch [17/20],Test AUROC: 0.7966
Epoch 18/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 18/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.2829357981681824
Epoch [18/20], Loss: 0.2829
Epoch [18/20],Test AUROC: 0.7930
Epoch 19/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 19/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                  epoch_loss: 0.25859373807907104
Epoch [19/20], Loss: 0.2586
Best test AUROC: 0.8011, at epoch: 18
Epoch [19/20],Test AUROC: 0.8011
Epoch 20/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 20/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.24114862084388733
Epoch [20/20], Loss: 0.2411
Epoch [20/20],Test AUROC: 0.7992
  0%|          | 0/115 [00:00<?, ?it/s]  1%|          | 1/115 [00:00<00:55,  2.07it/s]  2%|▏         | 2/115 [00:01<00:58,  1.94it/s]  3%|▎         | 3/115 [00:01<00:48,  2.30it/s]  3%|▎         | 4/115 [00:01<00:52,  2.11it/s]  4%|▍         | 5/115 [00:02<00:53,  2.06it/s]  5%|▌         | 6/115 [00:02<00:49,  2.18it/s]  6%|▌         | 7/115 [00:03<00:46,  2.34it/s]  7%|▋         | 8/115 [00:03<00:45,  2.35it/s]  8%|▊         | 9/115 [00:04<00:47,  2.22it/s]  9%|▊         | 10/115 [00:04<00:49,  2.10it/s] 10%|▉         | 11/115 [00:04<00:44,  2.32it/s] 10%|█         | 12/115 [00:05<00:48,  2.11it/s] 11%|█▏        | 13/115 [00:06<00:49,  2.08it/s] 12%|█▏        | 14/115 [00:06<00:49,  2.04it/s] 13%|█▎        | 15/115 [00:06<00:44,  2.25it/s] 14%|█▍        | 16/115 [00:07<00:48,  2.04it/s] 15%|█▍        | 17/115 [00:08<00:50,  1.95it/s] 16%|█▌        | 18/115 [00:08<00:51,  1.87it/s] 17%|█▋        | 19/115 [00:08<00:45,  2.11it/s] 17%|█▋        | 20/115 [00:09<00:43,  2.17it/s] 18%|█▊        | 21/115 [00:09<00:45,  2.07it/s] 19%|█▉        | 22/115 [00:10<00:45,  2.04it/s] 20%|██        | 23/115 [00:10<00:40,  2.26it/s] 21%|██        | 24/115 [00:11<00:39,  2.32it/s] 22%|██▏       | 25/115 [00:11<00:36,  2.48it/s] 23%|██▎       | 26/115 [00:11<00:33,  2.63it/s] 23%|██▎       | 27/115 [00:12<00:37,  2.34it/s] 24%|██▍       | 28/115 [00:12<00:40,  2.15it/s] 25%|██▌       | 29/115 [00:13<00:44,  1.92it/s] 26%|██▌       | 30/115 [00:14<00:44,  1.90it/s] 27%|██▋       | 31/115 [00:14<00:40,  2.07it/s] 28%|██▊       | 32/115 [00:14<00:40,  2.05it/s] 29%|██▊       | 33/115 [00:15<00:42,  1.91it/s] 30%|██▉       | 34/115 [00:16<00:41,  1.97it/s] 30%|███       | 35/115 [00:16<00:39,  2.03it/s] 31%|███▏      | 36/115 [00:17<00:40,  1.97it/s] 32%|███▏      | 37/115 [00:17<00:40,  1.90it/s] 33%|███▎      | 38/115 [00:18<00:39,  1.95it/s] 34%|███▍      | 39/115 [00:18<00:36,  2.09it/s] 35%|███▍      | 40/115 [00:18<00:34,  2.16it/s] 36%|███▌      | 41/115 [00:19<00:37,  1.95it/s] 37%|███▋      | 42/115 [00:20<00:36,  1.97it/s] 37%|███▋      | 43/115 [00:20<00:42,  1.71it/s] 38%|███▊      | 44/115 [00:21<00:46,  1.52it/s] 39%|███▉      | 45/115 [00:22<00:43,  1.59it/s] 40%|████      | 46/115 [00:22<00:42,  1.61it/s] 41%|████      | 47/115 [00:23<00:39,  1.71it/s] 42%|████▏     | 48/115 [00:24<00:54,  1.24it/s] 43%|████▎     | 49/115 [00:25<00:50,  1.32it/s] 43%|████▎     | 50/115 [00:25<00:45,  1.43it/s] 44%|████▍     | 51/115 [00:26<00:41,  1.55it/s] 45%|████▌     | 52/115 [00:27<00:40,  1.54it/s] 46%|████▌     | 53/115 [00:27<00:39,  1.56it/s] 47%|████▋     | 54/115 [00:28<00:37,  1.62it/s] 48%|████▊     | 55/115 [00:28<00:31,  1.89it/s] 49%|████▊     | 56/115 [00:28<00:29,  2.01it/s] 50%|████▉     | 57/115 [00:29<00:25,  2.29it/s] 50%|█████     | 58/115 [00:29<00:23,  2.42it/s] 51%|█████▏    | 59/115 [00:29<00:21,  2.63it/s] 52%|█████▏    | 60/115 [00:30<00:23,  2.35it/s] 53%|█████▎    | 61/115 [00:30<00:23,  2.30it/s] 54%|█████▍    | 62/115 [00:31<00:24,  2.15it/s] 55%|█████▍    | 63/115 [00:32<00:26,  1.95it/s] 56%|█████▌    | 64/115 [00:32<00:25,  2.00it/s] 57%|█████▋    | 65/115 [00:32<00:24,  2.07it/s] 57%|█████▋    | 66/115 [00:33<00:24,  1.99it/s] 58%|█████▊    | 67/115 [00:33<00:22,  2.16it/s] 59%|█████▉    | 68/115 [00:34<00:20,  2.26it/s] 60%|██████    | 69/115 [00:34<00:21,  2.18it/s] 61%|██████    | 70/115 [00:35<00:21,  2.11it/s] 62%|██████▏   | 71/115 [00:35<00:20,  2.13it/s] 63%|██████▎   | 72/115 [00:36<00:20,  2.09it/s] 63%|██████▎   | 73/115 [00:36<00:18,  2.25it/s] 64%|██████▍   | 74/115 [00:37<00:17,  2.34it/s] 65%|██████▌   | 75/115 [00:37<00:17,  2.30it/s] 66%|██████▌   | 76/115 [00:38<00:18,  2.13it/s] 67%|██████▋   | 77/115 [00:38<00:18,  2.04it/s] 68%|██████▊   | 78/115 [00:38<00:16,  2.18it/s] 69%|██████▊   | 79/115 [00:39<00:17,  2.08it/s] 70%|██████▉   | 80/115 [00:39<00:15,  2.23it/s] 70%|███████   | 81/115 [00:40<00:14,  2.30it/s] 71%|███████▏  | 82/115 [00:40<00:14,  2.30it/s] 72%|███████▏  | 83/115 [00:41<00:13,  2.38it/s] 73%|███████▎  | 84/115 [00:41<00:13,  2.23it/s] 74%|███████▍  | 85/115 [00:42<00:13,  2.19it/s] 75%|███████▍  | 86/115 [00:42<00:13,  2.07it/s] 76%|███████▌  | 87/115 [00:43<00:15,  1.85it/s] 77%|███████▋  | 88/115 [00:43<00:14,  1.90it/s] 77%|███████▋  | 89/115 [00:44<00:11,  2.18it/s] 78%|███████▊  | 90/115 [00:44<00:11,  2.19it/s] 79%|███████▉  | 91/115 [00:45<00:12,  1.89it/s] 80%|████████  | 92/115 [00:45<00:12,  1.79it/s] 81%|████████  | 93/115 [00:46<00:12,  1.79it/s] 82%|████████▏ | 94/115 [00:46<00:11,  1.89it/s] 83%|████████▎ | 95/115 [00:47<00:10,  1.95it/s] 83%|████████▎ | 96/115 [00:47<00:10,  1.82it/s] 84%|████████▍ | 97/115 [00:48<00:09,  1.89it/s] 85%|████████▌ | 98/115 [00:48<00:08,  2.06it/s] 86%|████████▌ | 99/115 [00:49<00:07,  2.14it/s] 87%|████████▋ | 100/115 [00:49<00:06,  2.30it/s] 88%|████████▊ | 101/115 [00:50<00:06,  2.21it/s] 89%|████████▊ | 102/115 [00:50<00:06,  2.15it/s] 90%|████████▉ | 103/115 [00:50<00:05,  2.35it/s] 90%|█████████ | 104/115 [00:51<00:04,  2.27it/s] 91%|█████████▏| 105/115 [00:51<00:03,  2.58it/s] 92%|█████████▏| 106/115 [00:52<00:03,  2.38it/s] 93%|█████████▎| 107/115 [00:52<00:03,  2.45it/s] 94%|█████████▍| 108/115 [00:52<00:02,  2.64it/s] 95%|█████████▍| 109/115 [00:53<00:02,  2.77it/s] 96%|█████████▌| 110/115 [00:54<00:02,  1.87it/s] 97%|█████████▋| 111/115 [00:54<00:02,  1.66it/s] 97%|█████████▋| 112/115 [00:56<00:02,  1.06it/s] 98%|█████████▊| 113/115 [00:57<00:01,  1.27it/s] 99%|█████████▉| 114/115 [00:57<00:00,  1.45it/s]100%|██████████| 115/115 [00:57<00:00,  2.00it/s]
tsv_main1.py:175: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  exemplar_label = torch.tensor(exemplar_labels).cuda()
tsv_main1.py:182: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  augmented_labels = torch.concat((selected_labels, torch.tensor(exemplar_labels).clone().cuda()))
Epoch 1/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 1/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.56it/s]Epoch 1/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  2.01it/s]Epoch 1/20 Batches: 100%|██████████| 3/3 [00:01<00:00,  1.42it/s]                                                                 epoch_loss: 0.3316270112991333
Epoch [1/20], Loss: 0.3316
Best test AUROC: 0.8039, at epoch: 20
Epoch 2/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 2/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.55it/s]Epoch 2/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  2.00it/s]Epoch 2/20 Batches: 100%|██████████| 3/3 [00:01<00:00,  1.42it/s]                                                                 epoch_loss: 0.22672680020332336
Epoch [2/20], Loss: 0.2267
Epoch 3/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 3/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.55it/s]Epoch 3/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  2.00it/s]Epoch 3/20 Batches: 100%|██████████| 3/3 [00:01<00:00,  1.42it/s]                                                                 epoch_loss: 0.19469845294952393
Epoch [3/20], Loss: 0.1947
Epoch 4/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 4/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.55it/s]Epoch 4/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  2.00it/s]Epoch 4/20 Batches: 100%|██████████| 3/3 [00:01<00:00,  1.42it/s]                                                                 epoch_loss: 0.1654122124115626
Epoch [4/20], Loss: 0.1654
Epoch 5/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 5/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.55it/s]Epoch 5/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  2.02it/s]Epoch 5/20 Batches: 100%|██████████| 3/3 [00:01<00:00,  1.43it/s]                                                                 epoch_loss: 0.14260136584440866
Epoch [5/20], Loss: 0.1426
Best test AUROC: 0.8040, at epoch: 24
Epoch 6/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 6/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.55it/s]Epoch 6/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  2.00it/s]Epoch 6/20 Batches: 100%|██████████| 3/3 [00:01<00:00,  1.42it/s]                                                                 epoch_loss: 0.10972375919421513
Epoch [6/20], Loss: 0.1097
Best test AUROC: 0.8044, at epoch: 25
Epoch 7/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 7/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.54it/s]Epoch 7/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  2.00it/s]Epoch 7/20 Batches: 100%|██████████| 3/3 [00:01<00:00,  1.42it/s]                                                                 epoch_loss: 0.0834868202606837
Epoch [7/20], Loss: 0.0835
Epoch 8/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 8/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.54it/s]Epoch 8/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.99it/s]Epoch 8/20 Batches: 100%|██████████| 3/3 [00:01<00:00,  1.42it/s]                                                                 epoch_loss: 0.06500131140152614
Epoch [8/20], Loss: 0.0650
Epoch 9/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 9/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.54it/s]Epoch 9/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.99it/s]Epoch 9/20 Batches: 100%|██████████| 3/3 [00:01<00:00,  1.42it/s]                                                                 epoch_loss: 0.05063324421644211
Epoch [9/20], Loss: 0.0506
Epoch 10/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 10/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.55it/s]Epoch 10/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  2.00it/s]Epoch 10/20 Batches: 100%|██████████| 3/3 [00:01<00:00,  1.42it/s]                                                                  epoch_loss: 0.03996127595504125
Epoch [10/20], Loss: 0.0400
Epoch 11/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 11/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.55it/s]Epoch 11/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  2.00it/s]Epoch 11/20 Batches: 100%|██████████| 3/3 [00:01<00:00,  1.42it/s]                                                                  epoch_loss: 0.03137262538075447
Epoch [11/20], Loss: 0.0314
Epoch 12/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 12/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.55it/s]Epoch 12/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  2.00it/s]Epoch 12/20 Batches: 100%|██████████| 3/3 [00:01<00:00,  1.42it/s]                                                                  epoch_loss: 0.025089227904876072
Epoch [12/20], Loss: 0.0251
Epoch 13/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 13/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.55it/s]Epoch 13/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  2.00it/s]Epoch 13/20 Batches: 100%|██████████| 3/3 [00:01<00:00,  1.42it/s]                                                                  epoch_loss: 0.020017206047972042
Epoch [13/20], Loss: 0.0200
Best test AUROC: 0.8059, at epoch: 32
Epoch 14/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 14/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.55it/s]Epoch 14/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  2.00it/s]Epoch 14/20 Batches: 100%|██████████| 3/3 [00:01<00:00,  1.43it/s]                                                                  epoch_loss: 0.015961107487479847
Epoch [14/20], Loss: 0.0160
Best test AUROC: 0.8067, at epoch: 33
Epoch 15/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 15/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.55it/s]Epoch 15/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  2.00it/s]Epoch 15/20 Batches: 100%|██████████| 3/3 [00:01<00:00,  1.42it/s]                                                                  epoch_loss: 0.01286575881143411
Epoch [15/20], Loss: 0.0129
Best test AUROC: 0.8068, at epoch: 34
Epoch 16/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 16/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.56it/s]Epoch 16/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  2.01it/s]Epoch 16/20 Batches: 100%|██████████| 3/3 [00:01<00:00,  1.42it/s]                                                                  epoch_loss: 0.010426505779226622
Epoch [16/20], Loss: 0.0104
Epoch 17/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 17/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.55it/s]Epoch 17/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  2.00it/s]Epoch 17/20 Batches: 100%|██████████| 3/3 [00:01<00:00,  1.42it/s]                                                                  epoch_loss: 0.008505306206643581
Epoch [17/20], Loss: 0.0085
Epoch 18/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 18/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.55it/s]Epoch 18/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  2.00it/s]Epoch 18/20 Batches: 100%|██████████| 3/3 [00:01<00:00,  1.42it/s]                                                                  epoch_loss: 0.006968865403905511
Epoch [18/20], Loss: 0.0070
Epoch 19/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 19/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.55it/s]Epoch 19/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  2.01it/s]Epoch 19/20 Batches: 100%|██████████| 3/3 [00:01<00:00,  1.42it/s]                                                                  epoch_loss: 0.005731308755154411
Epoch [19/20], Loss: 0.0057
Epoch 20/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 20/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.56it/s]Epoch 20/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  2.01it/s]Epoch 20/20 Batches: 100%|██████████| 3/3 [00:01<00:00,  1.42it/s]                                                                  epoch_loss: 0.004748641358067592
Epoch [20/20], Loss: 0.0047
best_test_auroc: 0.80675330210157
