Map:   0%|          | 0/17944 [00:00<?, ? examples/s]Map:   1%|          | 123/17944 [00:00<00:14, 1209.57 examples/s]Map:   1%|▏         | 253/17944 [00:00<00:14, 1258.05 examples/s]Map:   2%|▏         | 383/17944 [00:00<00:13, 1274.38 examples/s]Map:   3%|▎         | 513/17944 [00:00<00:13, 1283.23 examples/s]Map:   4%|▎         | 644/17944 [00:00<00:13, 1289.51 examples/s]Map:   4%|▍         | 775/17944 [00:00<00:13, 1293.57 examples/s]Map:   5%|▌         | 970/17944 [00:00<00:13, 1293.37 examples/s]Map:   6%|▌         | 1102/17944 [00:00<00:12, 1296.79 examples/s]Map:   7%|▋         | 1234/17944 [00:00<00:12, 1300.50 examples/s]Map:   8%|▊         | 1366/17944 [00:01<00:12, 1302.66 examples/s]Map:   8%|▊         | 1498/17944 [00:01<00:12, 1306.18 examples/s]Map:   9%|▉         | 1630/17944 [00:01<00:12, 1309.34 examples/s]Map:  10%|▉         | 1762/17944 [00:01<00:12, 1310.13 examples/s]Map:  11%|█         | 1894/17944 [00:01<00:12, 1311.95 examples/s]Map:  12%|█▏        | 2090/17944 [00:01<00:12, 1306.56 examples/s]Map:  12%|█▏        | 2222/17944 [00:01<00:12, 1307.03 examples/s]Map:  13%|█▎        | 2354/17944 [00:01<00:11, 1306.98 examples/s]Map:  14%|█▍        | 2486/17944 [00:01<00:11, 1306.40 examples/s]Map:  15%|█▍        | 2618/17944 [00:02<00:11, 1307.55 examples/s]Map:  15%|█▌        | 2750/17944 [00:02<00:11, 1308.09 examples/s]Map:  16%|█▌        | 2882/17944 [00:02<00:11, 1308.54 examples/s]Map:  17%|█▋        | 3014/17944 [00:02<00:11, 1309.64 examples/s]Map:  18%|█▊        | 3195/17944 [00:02<00:11, 1265.30 examples/s]Map:  19%|█▊        | 3328/17944 [00:02<00:11, 1279.80 examples/s]Map:  19%|█▉        | 3457/17944 [00:02<00:11, 1280.19 examples/s]Map:  20%|██        | 3589/17944 [00:02<00:11, 1289.19 examples/s]Map:  21%|██        | 3721/17944 [00:02<00:10, 1295.62 examples/s]Map:  21%|██▏       | 3853/17944 [00:02<00:10, 1300.30 examples/s]Map:  22%|██▏       | 3985/17944 [00:03<00:10, 1304.65 examples/s]Map:  23%|██▎       | 4117/17944 [00:03<00:10, 1305.87 examples/s]Map:  24%|██▎       | 4249/17944 [00:03<00:10, 1306.55 examples/s]Map:  25%|██▍       | 4432/17944 [00:03<00:10, 1269.87 examples/s]Map:  25%|██▌       | 4564/17944 [00:03<00:10, 1280.88 examples/s]Map:  26%|██▌       | 4696/17944 [00:03<00:10, 1289.98 examples/s]Map:  27%|██▋       | 4828/17944 [00:03<00:10, 1296.22 examples/s]Map:  28%|██▊       | 4960/17944 [00:03<00:09, 1299.72 examples/s]Map:  29%|██▊       | 5156/17944 [00:03<00:09, 1299.62 examples/s]Map:  29%|██▉       | 5288/17944 [00:04<00:09, 1302.86 examples/s]Map:  30%|███       | 5421/17944 [00:04<00:09, 1307.12 examples/s]Map:  31%|███       | 5604/17944 [00:04<00:09, 1271.03 examples/s]Map:  32%|███▏      | 5735/17944 [00:04<00:09, 1278.80 examples/s]Map:  33%|███▎      | 5868/17944 [00:04<00:09, 1289.27 examples/s]Map:  33%|███▎      | 5999/17944 [00:04<00:09, 1292.21 examples/s]Map:  34%|███▍      | 6131/17944 [00:04<00:09, 1298.35 examples/s]Map:  35%|███▍      | 6263/17944 [00:04<00:08, 1303.55 examples/s]Map:  36%|███▌      | 6395/17944 [00:04<00:08, 1306.74 examples/s]Map:  36%|███▋      | 6527/17944 [00:05<00:08, 1303.74 examples/s]Map:  37%|███▋      | 6715/17944 [00:05<00:08, 1278.91 examples/s]Map:  38%|███▊      | 6846/17944 [00:05<00:08, 1285.47 examples/s]Map:  39%|███▉      | 6979/17944 [00:05<00:08, 1293.90 examples/s]Map:  40%|███▉      | 7111/17944 [00:05<00:08, 1299.29 examples/s]Map:  40%|████      | 7243/17944 [00:05<00:08, 1301.45 examples/s]Map:  41%|████      | 7375/17944 [00:05<00:08, 1305.87 examples/s]Map:  42%|████▏     | 7507/17944 [00:05<00:07, 1308.30 examples/s]Map:  43%|████▎     | 7639/17944 [00:05<00:07, 1309.73 examples/s]Map:  44%|████▎     | 7819/17944 [00:06<00:08, 1264.03 examples/s]Map:  44%|████▍     | 7948/17944 [00:06<00:07, 1267.68 examples/s]Map:  45%|████▌     | 8079/17944 [00:06<00:07, 1278.71 examples/s]Map:  46%|████▌     | 8211/17944 [00:06<00:07, 1288.24 examples/s]Map:  46%|████▋     | 8343/17944 [00:06<00:07, 1295.06 examples/s]Map:  47%|████▋     | 8475/17944 [00:06<00:07, 1299.59 examples/s]Map:  48%|████▊     | 8607/17944 [00:06<00:07, 1304.64 examples/s]Map:  49%|████▊     | 8739/17944 [00:06<00:07, 1307.14 examples/s]Map:  49%|████▉     | 8871/17944 [00:06<00:06, 1308.17 examples/s]Map:  50%|█████     | 9056/17944 [00:06<00:06, 1274.04 examples/s]Map:  51%|█████▏    | 9239/17944 [00:07<00:06, 1251.68 examples/s]Map:  52%|█████▏    | 9368/17944 [00:07<00:06, 1258.96 examples/s]Map:  53%|█████▎    | 9500/17944 [00:07<00:06, 1272.51 examples/s]Map:  54%|█████▎    | 9632/17944 [00:07<00:06, 1282.39 examples/s]Map:  54%|█████▍    | 9764/17944 [00:07<00:06, 1290.65 examples/s]Map:  55%|█████▌    | 9896/17944 [00:07<00:06, 1296.30 examples/s]Map:  62%|██████▏   | 11146/17944 [00:07<00:01, 4540.00 examples/s]Map:  72%|███████▏  | 12938/17944 [00:07<00:00, 8453.93 examples/s]Map:  83%|████████▎ | 14972/17944 [00:07<00:00, 11955.97 examples/s]Map:  95%|█████████▍| 17021/17944 [00:08<00:00, 14482.36 examples/s]Map: 100%|██████████| 17944/17944 [00:08<00:00, 2164.81 examples/s] 
Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]Loading checkpoint shards:  25%|██▌       | 1/4 [00:01<00:03,  1.25s/it]Loading checkpoint shards:  50%|█████     | 2/4 [00:02<00:02,  1.25s/it]Loading checkpoint shards:  75%|███████▌  | 3/4 [00:03<00:01,  1.21s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:04<00:00,  1.15s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:04<00:00,  1.18s/it]
  0%|          | 0/9960 [00:00<?, ?it/s]  2%|▏         | 155/9960 [00:00<00:06, 1544.72it/s]  3%|▎         | 322/9960 [00:00<00:05, 1614.95it/s]  5%|▍         | 492/9960 [00:00<00:05, 1651.83it/s]  7%|▋         | 658/9960 [00:00<00:05, 1632.64it/s]  8%|▊         | 822/9960 [00:00<00:05, 1577.08it/s] 10%|▉         | 990/9960 [00:00<00:05, 1609.41it/s] 12%|█▏        | 1152/9960 [00:00<00:05, 1609.04it/s] 13%|█▎        | 1323/9960 [00:00<00:05, 1638.23it/s] 15%|█▍        | 1491/9960 [00:00<00:05, 1650.68it/s] 17%|█▋        | 1657/9960 [00:01<00:05, 1646.66it/s] 18%|█▊        | 1825/9960 [00:01<00:04, 1656.31it/s] 20%|██        | 1997/9960 [00:01<00:04, 1674.97it/s] 22%|██▏       | 2169/9960 [00:01<00:04, 1687.91it/s] 23%|██▎       | 2338/9960 [00:01<00:04, 1632.48it/s] 25%|██▌       | 2505/9960 [00:01<00:04, 1642.27it/s] 27%|██▋       | 2674/9960 [00:01<00:04, 1655.96it/s] 29%|██▊       | 2843/9960 [00:01<00:04, 1663.62it/s] 30%|███       | 3010/9960 [00:01<00:04, 1662.00it/s] 32%|███▏      | 3177/9960 [00:01<00:04, 1657.70it/s] 34%|███▎      | 3346/9960 [00:02<00:03, 1667.21it/s] 35%|███▌      | 3514/9960 [00:02<00:03, 1670.46it/s] 37%|███▋      | 3682/9960 [00:02<00:03, 1658.31it/s] 39%|███▊      | 3848/9960 [00:02<00:03, 1645.75it/s] 40%|████      | 4013/9960 [00:02<00:03, 1627.98it/s] 42%|████▏     | 4176/9960 [00:02<00:03, 1623.31it/s] 44%|████▎     | 4339/9960 [00:02<00:03, 1624.29it/s] 45%|████▌     | 4502/9960 [00:02<00:03, 1610.63it/s] 47%|████▋     | 4664/9960 [00:02<00:03, 1609.96it/s] 49%|████▊     | 4835/9960 [00:02<00:03, 1637.32it/s] 50%|█████     | 5010/9960 [00:03<00:02, 1668.71it/s] 52%|█████▏    | 5178/9960 [00:03<00:02, 1671.15it/s] 54%|█████▎    | 5346/9960 [00:03<00:02, 1665.19it/s] 55%|█████▌    | 5517/9960 [00:03<00:02, 1677.96it/s] 57%|█████▋    | 5688/9960 [00:03<00:02, 1685.39it/s] 59%|█████▉    | 5858/9960 [00:03<00:02, 1688.08it/s] 61%|██████    | 6028/9960 [00:03<00:02, 1689.01it/s] 62%|██████▏   | 6198/9960 [00:03<00:02, 1691.23it/s] 64%|██████▍   | 6370/9960 [00:03<00:02, 1698.71it/s] 66%|██████▌   | 6540/9960 [00:03<00:02, 1674.05it/s] 67%|██████▋   | 6710/9960 [00:04<00:01, 1681.62it/s] 69%|██████▉   | 6881/9960 [00:04<00:01, 1687.28it/s] 71%|███████   | 7050/9960 [00:04<00:01, 1681.79it/s] 72%|███████▏  | 7219/9960 [00:04<00:01, 1679.23it/s] 74%|███████▍  | 7387/9960 [00:04<00:01, 1625.59it/s] 76%|███████▌  | 7550/9960 [00:04<00:01, 1601.26it/s] 77%|███████▋  | 7717/9960 [00:04<00:01, 1620.05it/s] 79%|███████▉  | 7885/9960 [00:04<00:01, 1637.42it/s] 81%|████████  | 8049/9960 [00:04<00:01, 1588.06it/s] 83%|████████▎ | 8218/9960 [00:04<00:01, 1616.38it/s] 84%|████████▍ | 8386/9960 [00:05<00:00, 1632.55it/s] 86%|████████▌ | 8551/9960 [00:05<00:00, 1637.05it/s] 88%|████████▊ | 8720/9960 [00:05<00:00, 1652.11it/s] 89%|████████▉ | 8892/9960 [00:05<00:00, 1671.99it/s] 91%|█████████ | 9067/9960 [00:05<00:00, 1692.73it/s] 93%|█████████▎| 9240/9960 [00:05<00:00, 1701.96it/s] 95%|█████████▍| 9415/9960 [00:05<00:00, 1715.91it/s] 96%|█████████▋| 9587/9960 [00:05<00:00, 1685.60it/s] 98%|█████████▊| 9756/9960 [00:05<00:00, 1663.44it/s]100%|█████████▉| 9923/9960 [00:06<00:00, 1654.19it/s]100%|██████████| 9960/9960 [00:06<00:00, 1653.03it/s]
Epoch 1/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]We detected that you are passing `past_key_values` as a tuple and this is deprecated and will be removed in v4.43. Please use an appropriate `Cache` class (https://huggingface.co/docs/transformers/v4.41.3/en/internal/generation_utils#transformers.Cache)
Epoch 1/20 Batches: 100%|██████████| 1/1 [00:01<00:00,  1.61s/it]                                                                 epoch_loss: 0.713432788848877
Epoch [1/20], Loss: 0.7134
Best test AUROC: 0.5733, at epoch: 0
Epoch [1/20],Test AUROC: 0.5733
Epoch 2/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 2/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                 epoch_loss: 0.6827540397644043
Epoch [2/20], Loss: 0.6828
Best test AUROC: 0.6638, at epoch: 1
Epoch [2/20],Test AUROC: 0.6638
Epoch 3/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 3/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                 epoch_loss: 0.6583129167556763
Epoch [3/20], Loss: 0.6583
Best test AUROC: 0.7064, at epoch: 2
Epoch [3/20],Test AUROC: 0.7064
Epoch 4/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 4/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                 epoch_loss: 0.6364634037017822
Epoch [4/20], Loss: 0.6365
Best test AUROC: 0.7352, at epoch: 3
Epoch [4/20],Test AUROC: 0.7352
Epoch 5/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 5/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                 epoch_loss: 0.6141150593757629
Epoch [5/20], Loss: 0.6141
Best test AUROC: 0.7539, at epoch: 4
Epoch [5/20],Test AUROC: 0.7539
Epoch 6/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 6/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                 epoch_loss: 0.5919060707092285
Epoch [6/20], Loss: 0.5919
Best test AUROC: 0.7639, at epoch: 5
Epoch [6/20],Test AUROC: 0.7639
Epoch 7/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 7/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                 epoch_loss: 0.567620038986206
Epoch [7/20], Loss: 0.5676
Best test AUROC: 0.7716, at epoch: 6
Epoch [7/20],Test AUROC: 0.7716
Epoch 8/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 8/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                 epoch_loss: 0.5439869165420532
Epoch [8/20], Loss: 0.5440
Best test AUROC: 0.7760, at epoch: 7
Epoch [8/20],Test AUROC: 0.7760
Epoch 9/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 9/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                 epoch_loss: 0.5164732933044434
Epoch [9/20], Loss: 0.5165
Best test AUROC: 0.7783, at epoch: 8
Epoch [9/20],Test AUROC: 0.7783
Epoch 10/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 10/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.48912501335144043
Epoch [10/20], Loss: 0.4891
Best test AUROC: 0.7835, at epoch: 9
Epoch [10/20],Test AUROC: 0.7835
Epoch 11/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 11/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.4559677243232727
Epoch [11/20], Loss: 0.4560
Best test AUROC: 0.7885, at epoch: 10
Epoch [11/20],Test AUROC: 0.7885
Epoch 12/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 12/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                  epoch_loss: 0.42030057311058044
Epoch [12/20], Loss: 0.4203
Epoch [12/20],Test AUROC: 0.7883
Epoch 13/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 13/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                  epoch_loss: 0.38334086537361145
Epoch [13/20], Loss: 0.3833
Epoch [13/20],Test AUROC: 0.7822
Epoch 14/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 14/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.34982073307037354
Epoch [14/20], Loss: 0.3498
Epoch [14/20],Test AUROC: 0.7774
Epoch 15/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 15/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.3420495092868805
Epoch [15/20], Loss: 0.3420
Epoch [15/20],Test AUROC: 0.7820
Epoch 16/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 16/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                  epoch_loss: 0.31220105290412903
Epoch [16/20], Loss: 0.3122
Epoch [16/20],Test AUROC: 0.7856
Epoch 17/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 17/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                  epoch_loss: 0.288989782333374
Epoch [17/20], Loss: 0.2890
Epoch [17/20],Test AUROC: 0.7834
Epoch 18/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 18/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.26349061727523804
Epoch [18/20], Loss: 0.2635
Epoch [18/20],Test AUROC: 0.7803
Epoch 19/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 19/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.25492843985557556
Epoch [19/20], Loss: 0.2549
Epoch [19/20],Test AUROC: 0.7864
Epoch 20/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 20/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.22515542805194855
Epoch [20/20], Loss: 0.2252
Best test AUROC: 0.7891, at epoch: 19
Epoch [20/20],Test AUROC: 0.7891
  0%|          | 0/115 [00:00<?, ?it/s]  1%|          | 1/115 [00:00<00:54,  2.07it/s]  2%|▏         | 2/115 [00:01<00:58,  1.95it/s]  3%|▎         | 3/115 [00:01<00:48,  2.30it/s]  3%|▎         | 4/115 [00:01<00:52,  2.11it/s]  4%|▍         | 5/115 [00:02<00:53,  2.06it/s]  5%|▌         | 6/115 [00:02<00:49,  2.18it/s]  6%|▌         | 7/115 [00:03<00:46,  2.34it/s]  7%|▋         | 8/115 [00:03<00:45,  2.35it/s]  8%|▊         | 9/115 [00:04<00:47,  2.22it/s]  9%|▊         | 10/115 [00:04<00:49,  2.10it/s] 10%|▉         | 11/115 [00:04<00:44,  2.32it/s] 10%|█         | 12/115 [00:05<00:48,  2.11it/s] 11%|█▏        | 13/115 [00:06<00:48,  2.08it/s] 12%|█▏        | 14/115 [00:06<00:49,  2.04it/s] 13%|█▎        | 15/115 [00:06<00:44,  2.24it/s] 14%|█▍        | 16/115 [00:07<00:48,  2.04it/s] 15%|█▍        | 17/115 [00:08<00:50,  1.95it/s] 16%|█▌        | 18/115 [00:08<00:51,  1.87it/s] 17%|█▋        | 19/115 [00:08<00:45,  2.11it/s] 17%|█▋        | 20/115 [00:09<00:43,  2.17it/s] 18%|█▊        | 21/115 [00:09<00:45,  2.07it/s] 19%|█▉        | 22/115 [00:10<00:45,  2.04it/s] 20%|██        | 23/115 [00:10<00:40,  2.26it/s] 21%|██        | 24/115 [00:11<00:39,  2.32it/s] 22%|██▏       | 25/115 [00:11<00:36,  2.49it/s] 23%|██▎       | 26/115 [00:11<00:33,  2.62it/s] 23%|██▎       | 27/115 [00:12<00:37,  2.34it/s] 24%|██▍       | 28/115 [00:12<00:40,  2.15it/s] 25%|██▌       | 29/115 [00:13<00:44,  1.92it/s] 26%|██▌       | 30/115 [00:14<00:44,  1.91it/s] 27%|██▋       | 31/115 [00:14<00:40,  2.07it/s] 28%|██▊       | 32/115 [00:14<00:40,  2.05it/s] 29%|██▊       | 33/115 [00:15<00:42,  1.92it/s] 30%|██▉       | 34/115 [00:16<00:40,  1.98it/s] 30%|███       | 35/115 [00:16<00:39,  2.04it/s] 31%|███▏      | 36/115 [00:17<00:40,  1.97it/s] 32%|███▏      | 37/115 [00:17<00:40,  1.91it/s] 33%|███▎      | 38/115 [00:18<00:39,  1.95it/s] 34%|███▍      | 39/115 [00:18<00:36,  2.09it/s] 35%|███▍      | 40/115 [00:18<00:34,  2.16it/s] 36%|███▌      | 41/115 [00:19<00:37,  1.95it/s] 37%|███▋      | 42/115 [00:20<00:36,  1.97it/s] 37%|███▋      | 43/115 [00:20<00:42,  1.71it/s] 38%|███▊      | 44/115 [00:21<00:46,  1.52it/s] 39%|███▉      | 45/115 [00:22<00:43,  1.59it/s] 40%|████      | 46/115 [00:22<00:42,  1.61it/s] 41%|████      | 47/115 [00:23<00:39,  1.72it/s] 42%|████▏     | 48/115 [00:24<00:53,  1.26it/s] 43%|████▎     | 49/115 [00:25<00:49,  1.33it/s] 43%|████▎     | 50/115 [00:25<00:45,  1.44it/s] 44%|████▍     | 51/115 [00:26<00:40,  1.56it/s] 45%|████▌     | 52/115 [00:26<00:40,  1.55it/s] 46%|████▌     | 53/115 [00:27<00:39,  1.56it/s] 47%|████▋     | 54/115 [00:28<00:37,  1.62it/s] 48%|████▊     | 55/115 [00:28<00:31,  1.89it/s] 49%|████▊     | 56/115 [00:28<00:29,  2.01it/s] 50%|████▉     | 57/115 [00:29<00:25,  2.29it/s] 50%|█████     | 58/115 [00:29<00:23,  2.42it/s] 51%|█████▏    | 59/115 [00:29<00:21,  2.63it/s] 52%|█████▏    | 60/115 [00:30<00:23,  2.34it/s] 53%|█████▎    | 61/115 [00:30<00:23,  2.30it/s] 54%|█████▍    | 62/115 [00:31<00:24,  2.15it/s] 55%|█████▍    | 63/115 [00:32<00:26,  1.95it/s] 56%|█████▌    | 64/115 [00:32<00:25,  2.00it/s] 57%|█████▋    | 65/115 [00:32<00:24,  2.06it/s] 57%|█████▋    | 66/115 [00:33<00:24,  1.99it/s] 58%|█████▊    | 67/115 [00:33<00:22,  2.16it/s] 59%|█████▉    | 68/115 [00:34<00:20,  2.26it/s] 60%|██████    | 69/115 [00:34<00:21,  2.17it/s] 61%|██████    | 70/115 [00:35<00:21,  2.10it/s] 62%|██████▏   | 71/115 [00:35<00:20,  2.13it/s] 63%|██████▎   | 72/115 [00:36<00:20,  2.08it/s] 63%|██████▎   | 73/115 [00:36<00:18,  2.24it/s] 64%|██████▍   | 74/115 [00:36<00:17,  2.33it/s] 65%|██████▌   | 75/115 [00:37<00:17,  2.30it/s] 66%|██████▌   | 76/115 [00:37<00:18,  2.13it/s] 67%|██████▋   | 77/115 [00:38<00:18,  2.03it/s] 68%|██████▊   | 78/115 [00:38<00:16,  2.18it/s] 69%|██████▊   | 79/115 [00:39<00:17,  2.08it/s] 70%|██████▉   | 80/115 [00:39<00:15,  2.24it/s] 70%|███████   | 81/115 [00:40<00:14,  2.29it/s] 71%|███████▏  | 82/115 [00:40<00:14,  2.31it/s] 72%|███████▏  | 83/115 [00:41<00:13,  2.38it/s] 73%|███████▎  | 84/115 [00:41<00:13,  2.24it/s] 74%|███████▍  | 85/115 [00:42<00:13,  2.19it/s] 75%|███████▍  | 86/115 [00:42<00:13,  2.07it/s] 76%|███████▌  | 87/115 [00:43<00:15,  1.85it/s] 77%|███████▋  | 88/115 [00:43<00:14,  1.90it/s] 77%|███████▋  | 89/115 [00:44<00:11,  2.17it/s] 78%|███████▊  | 90/115 [00:44<00:11,  2.19it/s] 79%|███████▉  | 91/115 [00:45<00:12,  1.89it/s] 80%|████████  | 92/115 [00:45<00:12,  1.78it/s] 81%|████████  | 93/115 [00:46<00:12,  1.79it/s] 82%|████████▏ | 94/115 [00:46<00:11,  1.89it/s] 83%|████████▎ | 95/115 [00:47<00:10,  1.95it/s] 83%|████████▎ | 96/115 [00:47<00:10,  1.83it/s] 84%|████████▍ | 97/115 [00:48<00:09,  1.89it/s] 85%|████████▌ | 98/115 [00:48<00:08,  2.06it/s] 86%|████████▌ | 99/115 [00:49<00:07,  2.14it/s] 87%|████████▋ | 100/115 [00:49<00:06,  2.29it/s] 88%|████████▊ | 101/115 [00:50<00:06,  2.20it/s] 89%|████████▊ | 102/115 [00:50<00:06,  2.15it/s] 90%|████████▉ | 103/115 [00:50<00:05,  2.35it/s] 90%|█████████ | 104/115 [00:51<00:04,  2.27it/s] 91%|█████████▏| 105/115 [00:51<00:03,  2.58it/s] 92%|█████████▏| 106/115 [00:52<00:03,  2.38it/s] 93%|█████████▎| 107/115 [00:52<00:03,  2.45it/s] 94%|█████████▍| 108/115 [00:52<00:02,  2.64it/s] 95%|█████████▍| 109/115 [00:53<00:02,  2.77it/s] 96%|█████████▌| 110/115 [00:54<00:02,  1.87it/s] 97%|█████████▋| 111/115 [00:54<00:02,  1.65it/s] 97%|█████████▋| 112/115 [00:56<00:02,  1.21it/s] 98%|█████████▊| 113/115 [00:56<00:01,  1.42it/s] 99%|█████████▉| 114/115 [00:57<00:00,  1.59it/s]100%|██████████| 115/115 [00:57<00:00,  2.01it/s]
tsv_main1.py:175: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  exemplar_label = torch.tensor(exemplar_labels).cuda()
tsv_main1.py:182: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  augmented_labels = torch.concat((selected_labels, torch.tensor(exemplar_labels).clone().cuda()))
Epoch 1/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 1/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.03it/s]Epoch 1/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.44it/s]Epoch 1/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                 epoch_loss: 0.29988812406857807
Epoch [1/20], Loss: 0.2999
Best test AUROC: 0.7982, at epoch: 20
Epoch 2/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 2/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.02it/s]Epoch 2/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.43it/s]Epoch 2/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                 epoch_loss: 0.21533187727133432
Epoch [2/20], Loss: 0.2153
Best test AUROC: 0.8089, at epoch: 21
Epoch 3/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 3/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.02it/s]Epoch 3/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.42it/s]Epoch 3/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                 epoch_loss: 0.16795580834150314
Epoch [3/20], Loss: 0.1680
Epoch 4/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 4/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.02it/s]Epoch 4/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.43it/s]Epoch 4/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                 epoch_loss: 0.12866626679897308
Epoch [4/20], Loss: 0.1287
Epoch 5/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 5/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.02it/s]Epoch 5/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.43it/s]Epoch 5/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                 epoch_loss: 0.10592197875181834
Epoch [5/20], Loss: 0.1059
Best test AUROC: 0.8109, at epoch: 24
Epoch 6/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 6/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.02it/s]Epoch 6/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.43it/s]Epoch 6/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                 epoch_loss: 0.07713408768177032
Epoch [6/20], Loss: 0.0771
Best test AUROC: 0.8127, at epoch: 25
Epoch 7/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 7/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.02it/s]Epoch 7/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.43it/s]Epoch 7/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                 epoch_loss: 0.06342672804991405
Epoch [7/20], Loss: 0.0634
Best test AUROC: 0.8163, at epoch: 26
Epoch 8/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 8/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.02it/s]Epoch 8/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.43it/s]Epoch 8/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                 epoch_loss: 0.05034459258119265
Epoch [8/20], Loss: 0.0503
Best test AUROC: 0.8173, at epoch: 27
Epoch 9/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 9/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.02it/s]Epoch 9/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.43it/s]Epoch 9/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                 epoch_loss: 0.03926839927832285
Epoch [9/20], Loss: 0.0393
Epoch 10/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 10/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.02it/s]Epoch 10/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.43it/s]Epoch 10/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                  epoch_loss: 0.031171211351950962
Epoch [10/20], Loss: 0.0312
Epoch 11/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 11/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.02it/s]Epoch 11/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.44it/s]Epoch 11/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.24it/s]                                                                  epoch_loss: 0.024634895846247673
Epoch [11/20], Loss: 0.0246
Epoch 12/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 12/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.03it/s]Epoch 12/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.44it/s]Epoch 12/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                  epoch_loss: 0.019770820004244644
Epoch [12/20], Loss: 0.0198
Epoch 13/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 13/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.02it/s]Epoch 13/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.43it/s]Epoch 13/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                  epoch_loss: 0.01598517255236705
Epoch [13/20], Loss: 0.0160
Epoch 14/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 14/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.02it/s]Epoch 14/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.43it/s]Epoch 14/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                  epoch_loss: 0.01299401093274355
Epoch [14/20], Loss: 0.0130
Epoch 15/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 15/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.02it/s]Epoch 15/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.44it/s]Epoch 15/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                  epoch_loss: 0.010626431244115034
Epoch [15/20], Loss: 0.0106
Epoch 16/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 16/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.02it/s]Epoch 16/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.43it/s]Epoch 16/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                  epoch_loss: 0.00870274635963142
Epoch [16/20], Loss: 0.0087
Epoch 17/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 17/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.02it/s]Epoch 17/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.43it/s]Epoch 17/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                  epoch_loss: 0.007160543308903773
Epoch [17/20], Loss: 0.0072
Epoch 18/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 18/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.02it/s]Epoch 18/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.44it/s]Epoch 18/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.24it/s]                                                                  epoch_loss: 0.005926939658820629
Epoch [18/20], Loss: 0.0059
Epoch 19/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 19/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.03it/s]Epoch 19/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.44it/s]Epoch 19/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.24it/s]                                                                  epoch_loss: 0.004926050857951243
Epoch [19/20], Loss: 0.0049
Epoch 20/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 20/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.02it/s]Epoch 20/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.43it/s]Epoch 20/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                  epoch_loss: 0.004119412895912926
Epoch [20/20], Loss: 0.0041
best_test_auroc: 0.8172630948980563
