Map:   0%|          | 0/17944 [00:00<?, ? examples/s]Map:   1%|          | 119/17944 [00:00<00:15, 1166.54 examples/s]Map:   1%|▏         | 247/17944 [00:00<00:14, 1225.64 examples/s]Map:   2%|▏         | 375/17944 [00:00<00:14, 1247.19 examples/s]Map:   3%|▎         | 504/17944 [00:00<00:13, 1259.75 examples/s]Map:   4%|▎         | 631/17944 [00:00<00:13, 1257.84 examples/s]Map:   4%|▍         | 761/17944 [00:00<00:13, 1266.23 examples/s]Map:   5%|▍         | 890/17944 [00:00<00:13, 1270.96 examples/s]Map:   6%|▌         | 1018/17944 [00:00<00:13, 1270.87 examples/s]Map:   6%|▋         | 1148/17944 [00:00<00:13, 1274.93 examples/s]Map:   7%|▋         | 1277/17944 [00:01<00:13, 1277.36 examples/s]Map:   8%|▊         | 1406/17944 [00:01<00:12, 1278.04 examples/s]Map:   9%|▊         | 1535/17944 [00:01<00:12, 1278.96 examples/s]Map:   9%|▉         | 1665/17944 [00:01<00:12, 1280.29 examples/s]Map:  10%|█         | 1795/17944 [00:01<00:12, 1282.32 examples/s]Map:  11%|█         | 1925/17944 [00:01<00:12, 1282.90 examples/s]Map:  11%|█▏        | 2055/17944 [00:01<00:12, 1283.92 examples/s]Map:  12%|█▏        | 2184/17944 [00:01<00:12, 1282.67 examples/s]Map:  13%|█▎        | 2314/17944 [00:01<00:12, 1284.71 examples/s]Map:  14%|█▎        | 2444/17944 [00:01<00:12, 1286.46 examples/s]Map:  14%|█▍        | 2574/17944 [00:02<00:11, 1288.07 examples/s]Map:  15%|█▌        | 2704/17944 [00:02<00:11, 1287.52 examples/s]Map:  16%|█▌        | 2895/17944 [00:02<00:11, 1276.74 examples/s]Map:  17%|█▋        | 3024/17944 [00:02<00:11, 1278.31 examples/s]Map:  18%|█▊        | 3154/17944 [00:02<00:11, 1279.00 examples/s]Map:  19%|█▊        | 3347/17944 [00:02<00:11, 1278.49 examples/s]Map:  19%|█▉        | 3477/17944 [00:02<00:11, 1280.49 examples/s]Map:  20%|██        | 3607/17944 [00:02<00:11, 1281.27 examples/s]Map:  21%|██        | 3736/17944 [00:02<00:11, 1281.51 examples/s]Map:  22%|██▏       | 3925/17944 [00:03<00:11, 1269.11 examples/s]Map:  23%|██▎       | 4054/17944 [00:03<00:10, 1272.08 examples/s]Map:  23%|██▎       | 4184/17944 [00:03<00:10, 1275.89 examples/s]Map:  24%|██▍       | 4314/17944 [00:03<00:10, 1279.47 examples/s]Map:  25%|██▍       | 4443/17944 [00:03<00:10, 1277.35 examples/s]Map:  25%|██▌       | 4572/17944 [00:03<00:10, 1278.57 examples/s]Map:  26%|██▌       | 4702/17944 [00:03<00:10, 1281.09 examples/s]Map:  27%|██▋       | 4832/17944 [00:03<00:10, 1282.96 examples/s]Map:  28%|██▊       | 4961/17944 [00:03<00:10, 1281.97 examples/s]Map:  29%|██▊       | 5153/17944 [00:04<00:10, 1276.70 examples/s]Map:  29%|██▉       | 5283/17944 [00:04<00:09, 1279.50 examples/s]Map:  30%|███       | 5413/17944 [00:04<00:09, 1282.37 examples/s]Map:  31%|███       | 5543/17944 [00:04<00:09, 1284.40 examples/s]Map:  32%|███▏      | 5673/17944 [00:04<00:09, 1286.07 examples/s]Map:  33%|███▎      | 5865/17944 [00:04<00:09, 1278.54 examples/s]Map:  33%|███▎      | 5994/17944 [00:04<00:09, 1279.97 examples/s]Map:  34%|███▍      | 6123/17944 [00:04<00:09, 1281.39 examples/s]Map:  35%|███▌      | 6316/17944 [00:04<00:09, 1280.19 examples/s]Map:  36%|███▌      | 6445/17944 [00:05<00:08, 1281.13 examples/s]Map:  37%|███▋      | 6575/17944 [00:05<00:08, 1282.45 examples/s]Map:  37%|███▋      | 6705/17944 [00:05<00:08, 1283.58 examples/s]Map:  38%|███▊      | 6835/17944 [00:05<00:08, 1284.46 examples/s]Map:  39%|███▉      | 6965/17944 [00:05<00:08, 1285.17 examples/s]Map:  40%|███▉      | 7094/17944 [00:05<00:08, 1285.21 examples/s]Map:  41%|████      | 7280/17944 [00:05<00:08, 1264.63 examples/s]Map:  41%|████▏     | 7410/17944 [00:05<00:08, 1270.07 examples/s]Map:  42%|████▏     | 7540/17944 [00:05<00:08, 1274.38 examples/s]Map:  43%|████▎     | 7670/17944 [00:06<00:08, 1278.16 examples/s]Map:  43%|████▎     | 7800/17944 [00:06<00:07, 1281.01 examples/s]Map:  44%|████▍     | 7930/17944 [00:06<00:07, 1283.11 examples/s]Map:  45%|████▍     | 8060/17944 [00:06<00:07, 1284.88 examples/s]Map:  46%|████▌     | 8189/17944 [00:06<00:07, 1283.03 examples/s]Map:  47%|████▋     | 8372/17944 [00:06<00:07, 1247.97 examples/s]Map:  47%|████▋     | 8502/17944 [00:06<00:07, 1260.05 examples/s]Map:  48%|████▊     | 8633/17944 [00:06<00:07, 1270.20 examples/s]Map:  49%|████▉     | 8763/17944 [00:06<00:07, 1275.29 examples/s]Map:  50%|████▉     | 8893/17944 [00:06<00:07, 1279.77 examples/s]Map:  50%|█████     | 9023/17944 [00:07<00:06, 1283.60 examples/s]Map:  51%|█████     | 9153/17944 [00:07<00:06, 1286.57 examples/s]Map:  52%|█████▏    | 9344/17944 [00:07<00:06, 1279.98 examples/s]Map:  53%|█████▎    | 9520/17944 [00:07<00:06, 1240.71 examples/s]Map:  54%|█████▍    | 9647/17944 [00:07<00:06, 1245.30 examples/s]Map:  55%|█████▍    | 9831/17944 [00:07<00:06, 1236.54 examples/s]Map:  56%|█████▋    | 10094/17944 [00:07<00:04, 1581.61 examples/s]Map:  67%|██████▋   | 11976/17944 [00:07<00:00, 6109.07 examples/s]Map:  78%|███████▊  | 13951/17944 [00:08<00:00, 9830.49 examples/s]Map:  88%|████████▊ | 15868/17944 [00:08<00:00, 12447.94 examples/s]Map:  99%|█████████▉| 17803/17944 [00:08<00:00, 14419.16 examples/s]Map: 100%|██████████| 17944/17944 [00:08<00:00, 2129.62 examples/s] 
Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]Loading checkpoint shards:  25%|██▌       | 1/4 [00:01<00:03,  1.26s/it]Loading checkpoint shards:  50%|█████     | 2/4 [00:02<00:02,  1.20s/it]Loading checkpoint shards:  75%|███████▌  | 3/4 [00:03<00:01,  1.18s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:04<00:00,  1.16s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:04<00:00,  1.18s/it]
  0%|          | 0/9960 [00:00<?, ?it/s]  2%|▏         | 153/9960 [00:00<00:06, 1529.20it/s]  3%|▎         | 314/9960 [00:00<00:06, 1573.74it/s]  5%|▍         | 480/9960 [00:00<00:05, 1609.21it/s]  6%|▋         | 641/9960 [00:00<00:05, 1608.01it/s]  8%|▊         | 802/9960 [00:00<00:05, 1529.58it/s] 10%|▉         | 964/9960 [00:00<00:05, 1557.40it/s] 11%|█▏        | 1126/9960 [00:00<00:05, 1576.77it/s] 13%|█▎        | 1291/9960 [00:00<00:05, 1596.61it/s] 15%|█▍        | 1455/9960 [00:00<00:05, 1608.97it/s] 16%|█▌        | 1617/9960 [00:01<00:05, 1579.42it/s] 18%|█▊        | 1780/9960 [00:01<00:05, 1592.62it/s] 20%|█▉        | 1945/9960 [00:01<00:04, 1609.27it/s] 21%|██        | 2114/9960 [00:01<00:04, 1631.89it/s] 23%|██▎       | 2280/9960 [00:01<00:04, 1640.00it/s] 25%|██▍       | 2445/9960 [00:01<00:04, 1638.98it/s] 26%|██▌       | 2609/9960 [00:01<00:04, 1638.42it/s] 28%|██▊       | 2774/9960 [00:01<00:04, 1639.48it/s] 29%|██▉       | 2938/9960 [00:01<00:04, 1638.36it/s] 31%|███       | 3102/9960 [00:01<00:04, 1619.99it/s] 33%|███▎      | 3267/9960 [00:02<00:04, 1626.60it/s] 35%|███▍      | 3437/9960 [00:02<00:03, 1646.45it/s] 36%|███▌      | 3602/9960 [00:02<00:03, 1614.33it/s] 38%|███▊      | 3764/9960 [00:02<00:03, 1608.67it/s] 39%|███▉      | 3925/9960 [00:02<00:03, 1605.92it/s] 41%|████      | 4087/9960 [00:02<00:03, 1609.31it/s] 43%|████▎     | 4248/9960 [00:02<00:03, 1607.23it/s] 44%|████▍     | 4412/9960 [00:02<00:03, 1614.80it/s] 46%|████▌     | 4577/9960 [00:02<00:03, 1624.45it/s] 48%|████▊     | 4743/9960 [00:02<00:03, 1633.72it/s] 49%|████▉     | 4917/9960 [00:03<00:03, 1662.73it/s] 51%|█████     | 5090/9960 [00:03<00:02, 1679.56it/s] 53%|█████▎    | 5258/9960 [00:03<00:02, 1668.05it/s] 54%|█████▍    | 5425/9960 [00:03<00:02, 1661.29it/s] 56%|█████▌    | 5598/9960 [00:03<00:02, 1679.64it/s] 58%|█████▊    | 5769/9960 [00:03<00:02, 1687.44it/s] 60%|█████▉    | 5940/9960 [00:03<00:02, 1692.78it/s] 61%|██████▏   | 6110/9960 [00:03<00:02, 1694.25it/s] 63%|██████▎   | 6283/9960 [00:03<00:02, 1702.38it/s] 65%|██████▍   | 6454/9960 [00:03<00:02, 1704.08it/s] 67%|██████▋   | 6625/9960 [00:04<00:01, 1685.28it/s] 68%|██████▊   | 6794/9960 [00:04<00:01, 1646.31it/s] 70%|██████▉   | 6966/9960 [00:04<00:01, 1667.03it/s] 72%|███████▏  | 7137/9960 [00:04<00:01, 1679.68it/s] 73%|███████▎  | 7308/9960 [00:04<00:01, 1685.89it/s] 75%|███████▌  | 7477/9960 [00:04<00:01, 1675.08it/s] 77%|███████▋  | 7645/9960 [00:04<00:01, 1656.59it/s] 78%|███████▊  | 7811/9960 [00:04<00:01, 1636.28it/s] 80%|████████  | 7978/9960 [00:04<00:01, 1646.06it/s] 82%|████████▏ | 8143/9960 [00:04<00:01, 1627.84it/s] 83%|████████▎ | 8306/9960 [00:05<00:01, 1624.65it/s] 85%|████████▌ | 8476/9960 [00:05<00:00, 1646.02it/s] 87%|████████▋ | 8645/9960 [00:05<00:00, 1658.52it/s] 89%|████████▊ | 8815/9960 [00:05<00:00, 1670.61it/s] 90%|█████████ | 8991/9960 [00:05<00:00, 1695.85it/s] 92%|█████████▏| 9165/9960 [00:05<00:00, 1707.65it/s] 94%|█████████▍| 9339/9960 [00:05<00:00, 1716.90it/s] 96%|█████████▌| 9515/9960 [00:05<00:00, 1728.06it/s] 97%|█████████▋| 9688/9960 [00:05<00:00, 1682.52it/s] 99%|█████████▉| 9857/9960 [00:05<00:00, 1633.83it/s]100%|██████████| 9960/9960 [00:06<00:00, 1643.36it/s]
Epoch 1/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]We detected that you are passing `past_key_values` as a tuple and this is deprecated and will be removed in v4.43. Please use an appropriate `Cache` class (https://huggingface.co/docs/transformers/v4.41.3/en/internal/generation_utils#transformers.Cache)
Epoch 1/20 Batches: 100%|██████████| 1/1 [00:01<00:00,  1.63s/it]                                                                 epoch_loss: 0.713432788848877
Epoch [1/20], Loss: 0.7134
Best test AUROC: 0.5566, at epoch: 0
Epoch [1/20],Test AUROC: 0.5566
Epoch 2/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 2/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                 epoch_loss: 0.6838732957839966
Epoch [2/20], Loss: 0.6839
Best test AUROC: 0.6414, at epoch: 1
Epoch [2/20],Test AUROC: 0.6414
Epoch 3/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 3/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                 epoch_loss: 0.664542019367218
Epoch [3/20], Loss: 0.6645
Best test AUROC: 0.6846, at epoch: 2
Epoch [3/20],Test AUROC: 0.6846
Epoch 4/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 4/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                 epoch_loss: 0.6467075943946838
Epoch [4/20], Loss: 0.6467
Best test AUROC: 0.7100, at epoch: 3
Epoch [4/20],Test AUROC: 0.7100
Epoch 5/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 5/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                 epoch_loss: 0.6293720602989197
Epoch [5/20], Loss: 0.6294
Best test AUROC: 0.7286, at epoch: 4
Epoch [5/20],Test AUROC: 0.7286
Epoch 6/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 6/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                 epoch_loss: 0.6105539202690125
Epoch [6/20], Loss: 0.6106
Best test AUROC: 0.7429, at epoch: 5
Epoch [6/20],Test AUROC: 0.7429
Epoch 7/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 7/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                 epoch_loss: 0.5920320749282837
Epoch [7/20], Loss: 0.5920
Best test AUROC: 0.7540, at epoch: 6
Epoch [7/20],Test AUROC: 0.7540
Epoch 8/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 8/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                 epoch_loss: 0.5719212293624878
Epoch [8/20], Loss: 0.5719
Best test AUROC: 0.7625, at epoch: 7
Epoch [8/20],Test AUROC: 0.7625
Epoch 9/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 9/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                 epoch_loss: 0.5514869689941406
Epoch [9/20], Loss: 0.5515
Best test AUROC: 0.7689, at epoch: 8
Epoch [9/20],Test AUROC: 0.7689
Epoch 10/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 10/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                  epoch_loss: 0.5309618711471558
Epoch [10/20], Loss: 0.5310
Best test AUROC: 0.7728, at epoch: 9
Epoch [10/20],Test AUROC: 0.7728
Epoch 11/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 11/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.5091534852981567
Epoch [11/20], Loss: 0.5092
Best test AUROC: 0.7751, at epoch: 10
Epoch [11/20],Test AUROC: 0.7751
Epoch 12/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 12/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.4862634837627411
Epoch [12/20], Loss: 0.4863
Best test AUROC: 0.7758, at epoch: 11
Epoch [12/20],Test AUROC: 0.7758
Epoch 13/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 13/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.4607459008693695
Epoch [13/20], Loss: 0.4607
Best test AUROC: 0.7762, at epoch: 12
Epoch [13/20],Test AUROC: 0.7762
Epoch 14/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 14/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.43379056453704834
Epoch [14/20], Loss: 0.4338
Best test AUROC: 0.7782, at epoch: 13
Epoch [14/20],Test AUROC: 0.7782
Epoch 15/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 15/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                  epoch_loss: 0.405306339263916
Epoch [15/20], Loss: 0.4053
Epoch [15/20],Test AUROC: 0.7767
Epoch 16/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 16/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.37402522563934326
Epoch [16/20], Loss: 0.3740
Epoch [16/20],Test AUROC: 0.7762
Epoch 17/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 17/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                  epoch_loss: 0.3473150432109833
Epoch [17/20], Loss: 0.3473
Epoch [17/20],Test AUROC: 0.7660
Epoch 18/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 18/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.33202195167541504
Epoch [18/20], Loss: 0.3320
Epoch [18/20],Test AUROC: 0.7723
Epoch 19/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 19/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.2957254946231842
Epoch [19/20], Loss: 0.2957
Epoch [19/20],Test AUROC: 0.7755
Epoch 20/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 20/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.28569549322128296
Epoch [20/20], Loss: 0.2857
Epoch [20/20],Test AUROC: 0.7693
  0%|          | 0/115 [00:00<?, ?it/s]  1%|          | 1/115 [00:00<00:54,  2.08it/s]  2%|▏         | 2/115 [00:01<00:57,  1.95it/s]  3%|▎         | 3/115 [00:01<00:48,  2.30it/s]  3%|▎         | 4/115 [00:01<00:52,  2.11it/s]  4%|▍         | 5/115 [00:02<00:53,  2.06it/s]  5%|▌         | 6/115 [00:02<00:49,  2.18it/s]  6%|▌         | 7/115 [00:03<00:46,  2.34it/s]  7%|▋         | 8/115 [00:03<00:45,  2.35it/s]  8%|▊         | 9/115 [00:04<00:47,  2.22it/s]  9%|▊         | 10/115 [00:04<00:49,  2.10it/s] 10%|▉         | 11/115 [00:04<00:44,  2.32it/s] 10%|█         | 12/115 [00:05<00:48,  2.11it/s] 11%|█▏        | 13/115 [00:06<00:48,  2.08it/s] 12%|█▏        | 14/115 [00:06<00:49,  2.04it/s] 13%|█▎        | 15/115 [00:06<00:44,  2.25it/s] 14%|█▍        | 16/115 [00:07<00:48,  2.04it/s] 15%|█▍        | 17/115 [00:08<00:50,  1.95it/s] 16%|█▌        | 18/115 [00:08<00:51,  1.87it/s] 17%|█▋        | 19/115 [00:08<00:45,  2.10it/s] 17%|█▋        | 20/115 [00:09<00:43,  2.17it/s] 18%|█▊        | 21/115 [00:09<00:45,  2.07it/s] 19%|█▉        | 22/115 [00:10<00:45,  2.04it/s] 20%|██        | 23/115 [00:10<00:40,  2.26it/s] 21%|██        | 24/115 [00:11<00:39,  2.32it/s] 22%|██▏       | 25/115 [00:11<00:36,  2.49it/s] 23%|██▎       | 26/115 [00:11<00:33,  2.62it/s] 23%|██▎       | 27/115 [00:12<00:37,  2.34it/s] 24%|██▍       | 28/115 [00:12<00:40,  2.15it/s] 25%|██▌       | 29/115 [00:13<00:44,  1.92it/s] 26%|██▌       | 30/115 [00:14<00:44,  1.91it/s] 27%|██▋       | 31/115 [00:14<00:40,  2.07it/s] 28%|██▊       | 32/115 [00:14<00:40,  2.05it/s] 29%|██▊       | 33/115 [00:15<00:42,  1.92it/s] 30%|██▉       | 34/115 [00:16<00:40,  1.98it/s] 30%|███       | 35/115 [00:16<00:39,  2.04it/s] 31%|███▏      | 36/115 [00:17<00:40,  1.97it/s] 32%|███▏      | 37/115 [00:17<00:40,  1.91it/s] 33%|███▎      | 38/115 [00:18<00:39,  1.95it/s] 34%|███▍      | 39/115 [00:18<00:36,  2.09it/s] 35%|███▍      | 40/115 [00:18<00:34,  2.16it/s] 36%|███▌      | 41/115 [00:19<00:37,  1.96it/s] 37%|███▋      | 42/115 [00:20<00:36,  1.98it/s] 37%|███▋      | 43/115 [00:20<00:42,  1.71it/s] 38%|███▊      | 44/115 [00:21<00:46,  1.52it/s] 39%|███▉      | 45/115 [00:22<00:43,  1.59it/s] 40%|████      | 46/115 [00:22<00:42,  1.61it/s] 41%|████      | 47/115 [00:23<00:39,  1.71it/s] 42%|████▏     | 48/115 [00:24<00:53,  1.26it/s] 43%|████▎     | 49/115 [00:25<00:49,  1.33it/s] 43%|████▎     | 50/115 [00:25<00:45,  1.44it/s] 44%|████▍     | 51/115 [00:26<00:40,  1.56it/s] 45%|████▌     | 52/115 [00:26<00:40,  1.55it/s] 46%|████▌     | 53/115 [00:27<00:39,  1.57it/s] 47%|████▋     | 54/115 [00:28<00:37,  1.62it/s] 48%|████▊     | 55/115 [00:28<00:31,  1.90it/s] 49%|████▊     | 56/115 [00:28<00:29,  2.01it/s] 50%|████▉     | 57/115 [00:29<00:25,  2.30it/s] 50%|█████     | 58/115 [00:29<00:23,  2.43it/s] 51%|█████▏    | 59/115 [00:29<00:21,  2.63it/s] 52%|█████▏    | 60/115 [00:30<00:23,  2.35it/s] 53%|█████▎    | 61/115 [00:30<00:23,  2.30it/s] 54%|█████▍    | 62/115 [00:31<00:24,  2.15it/s] 55%|█████▍    | 63/115 [00:32<00:26,  1.95it/s] 56%|█████▌    | 64/115 [00:32<00:25,  2.00it/s] 57%|█████▋    | 65/115 [00:32<00:24,  2.07it/s] 57%|█████▋    | 66/115 [00:33<00:24,  1.99it/s] 58%|█████▊    | 67/115 [00:33<00:22,  2.17it/s] 59%|█████▉    | 68/115 [00:34<00:20,  2.26it/s] 60%|██████    | 69/115 [00:34<00:21,  2.18it/s] 61%|██████    | 70/115 [00:35<00:21,  2.11it/s] 62%|██████▏   | 71/115 [00:35<00:20,  2.14it/s] 63%|██████▎   | 72/115 [00:36<00:20,  2.09it/s] 63%|██████▎   | 73/115 [00:36<00:18,  2.25it/s] 64%|██████▍   | 74/115 [00:36<00:17,  2.34it/s] 65%|██████▌   | 75/115 [00:37<00:17,  2.30it/s] 66%|██████▌   | 76/115 [00:37<00:18,  2.13it/s] 67%|██████▋   | 77/115 [00:38<00:18,  2.03it/s] 68%|██████▊   | 78/115 [00:38<00:16,  2.18it/s] 69%|██████▊   | 79/115 [00:39<00:17,  2.08it/s] 70%|██████▉   | 80/115 [00:39<00:15,  2.24it/s] 70%|███████   | 81/115 [00:40<00:14,  2.30it/s] 71%|███████▏  | 82/115 [00:40<00:14,  2.31it/s] 72%|███████▏  | 83/115 [00:40<00:13,  2.38it/s] 73%|███████▎  | 84/115 [00:41<00:13,  2.23it/s] 74%|███████▍  | 85/115 [00:41<00:13,  2.19it/s] 75%|███████▍  | 86/115 [00:42<00:13,  2.07it/s] 76%|███████▌  | 87/115 [00:43<00:15,  1.85it/s] 77%|███████▋  | 88/115 [00:43<00:14,  1.90it/s] 77%|███████▋  | 89/115 [00:44<00:11,  2.17it/s] 78%|███████▊  | 90/115 [00:44<00:11,  2.19it/s] 79%|███████▉  | 91/115 [00:45<00:12,  1.89it/s] 80%|████████  | 92/115 [00:45<00:12,  1.79it/s] 81%|████████  | 93/115 [00:46<00:12,  1.79it/s] 82%|████████▏ | 94/115 [00:46<00:11,  1.90it/s] 83%|████████▎ | 95/115 [00:47<00:10,  1.95it/s] 83%|████████▎ | 96/115 [00:47<00:10,  1.82it/s] 84%|████████▍ | 97/115 [00:48<00:09,  1.89it/s] 85%|████████▌ | 98/115 [00:48<00:08,  2.06it/s] 86%|████████▌ | 99/115 [00:49<00:07,  2.14it/s] 87%|████████▋ | 100/115 [00:49<00:06,  2.30it/s] 88%|████████▊ | 101/115 [00:50<00:06,  2.21it/s] 89%|████████▊ | 102/115 [00:50<00:06,  2.15it/s] 90%|████████▉ | 103/115 [00:50<00:05,  2.35it/s] 90%|█████████ | 104/115 [00:51<00:04,  2.27it/s] 91%|█████████▏| 105/115 [00:51<00:03,  2.58it/s] 92%|█████████▏| 106/115 [00:52<00:03,  2.38it/s] 93%|█████████▎| 107/115 [00:52<00:03,  2.45it/s] 94%|█████████▍| 108/115 [00:52<00:02,  2.65it/s] 95%|█████████▍| 109/115 [00:53<00:02,  2.77it/s] 96%|█████████▌| 110/115 [00:54<00:02,  1.87it/s] 97%|█████████▋| 111/115 [00:54<00:02,  1.65it/s] 97%|█████████▋| 112/115 [00:56<00:02,  1.21it/s] 98%|█████████▊| 113/115 [00:56<00:01,  1.42it/s] 99%|█████████▉| 114/115 [00:57<00:00,  1.59it/s]100%|██████████| 115/115 [00:57<00:00,  2.01it/s]
tsv_main1.py:175: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  exemplar_label = torch.tensor(exemplar_labels).cuda()
tsv_main1.py:182: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  augmented_labels = torch.concat((selected_labels, torch.tensor(exemplar_labels).clone().cuda()))
Epoch 1/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 1/20 Batches:  33%|███▎      | 1/3 [00:01<00:02,  1.02s/it]Epoch 1/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.45it/s]Epoch 1/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.24it/s]                                                                 epoch_loss: 0.41285042961438495
Epoch [1/20], Loss: 0.4129
Best test AUROC: 0.7789, at epoch: 20
Epoch 2/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 2/20 Batches:  33%|███▎      | 1/3 [00:01<00:02,  1.02s/it]Epoch 2/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.44it/s]Epoch 2/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.24it/s]                                                                 epoch_loss: 0.2627565264701843
Epoch [2/20], Loss: 0.2628
Best test AUROC: 0.7890, at epoch: 21
Epoch 3/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 3/20 Batches:  33%|███▎      | 1/3 [00:01<00:02,  1.02s/it]Epoch 3/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.44it/s]Epoch 3/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.24it/s]                                                                 epoch_loss: 0.20941050350666046
Epoch [3/20], Loss: 0.2094
Epoch 4/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 4/20 Batches:  33%|███▎      | 1/3 [00:01<00:02,  1.01s/it]Epoch 4/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.44it/s]Epoch 4/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.24it/s]                                                                 epoch_loss: 0.17174464464187622
Epoch [4/20], Loss: 0.1717
Epoch 5/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 5/20 Batches:  33%|███▎      | 1/3 [00:01<00:02,  1.01s/it]Epoch 5/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.44it/s]Epoch 5/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.24it/s]                                                                 epoch_loss: 0.13642074167728424
Epoch [5/20], Loss: 0.1364
Epoch 6/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 6/20 Batches:  33%|███▎      | 1/3 [00:01<00:02,  1.02s/it]Epoch 6/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.44it/s]Epoch 6/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.24it/s]                                                                 epoch_loss: 0.10666770115494728
Epoch [6/20], Loss: 0.1067
Best test AUROC: 0.7901, at epoch: 25
Epoch 7/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 7/20 Batches:  33%|███▎      | 1/3 [00:01<00:02,  1.01s/it]Epoch 7/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.45it/s]Epoch 7/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.24it/s]                                                                 epoch_loss: 0.08630275229612987
Epoch [7/20], Loss: 0.0863
Epoch 8/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 8/20 Batches:  33%|███▎      | 1/3 [00:01<00:02,  1.01s/it]Epoch 8/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.45it/s]Epoch 8/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.24it/s]                                                                 epoch_loss: 0.06889708340167999
Epoch [8/20], Loss: 0.0689
Epoch 9/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 9/20 Batches:  33%|███▎      | 1/3 [00:01<00:02,  1.01s/it]Epoch 9/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.44it/s]Epoch 9/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.24it/s]                                                                 epoch_loss: 0.056096053371826805
Epoch [9/20], Loss: 0.0561
Epoch 10/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 10/20 Batches:  33%|███▎      | 1/3 [00:01<00:02,  1.01s/it]Epoch 10/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.45it/s]Epoch 10/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.24it/s]                                                                  epoch_loss: 0.044188140581051506
Epoch [10/20], Loss: 0.0442
Epoch 11/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 11/20 Batches:  33%|███▎      | 1/3 [00:01<00:02,  1.01s/it]Epoch 11/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.45it/s]Epoch 11/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.24it/s]                                                                  epoch_loss: 0.03523595817387104
Epoch [11/20], Loss: 0.0352
Epoch 12/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 12/20 Batches:  33%|███▎      | 1/3 [00:01<00:02,  1.02s/it]Epoch 12/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.45it/s]Epoch 12/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.24it/s]                                                                  epoch_loss: 0.028225424389044445
Epoch [12/20], Loss: 0.0282
Epoch 13/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 13/20 Batches:  33%|███▎      | 1/3 [00:01<00:02,  1.02s/it]Epoch 13/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.45it/s]Epoch 13/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.24it/s]                                                                  epoch_loss: 0.02286018431186676
Epoch [13/20], Loss: 0.0229
Epoch 14/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 14/20 Batches:  33%|███▎      | 1/3 [00:01<00:02,  1.01s/it]Epoch 14/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.44it/s]Epoch 14/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.24it/s]                                                                  epoch_loss: 0.018398282428582508
Epoch [14/20], Loss: 0.0184
Epoch 15/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 15/20 Batches:  33%|███▎      | 1/3 [00:01<00:02,  1.00s/it]Epoch 15/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.46it/s]Epoch 15/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.24it/s]                                                                  epoch_loss: 0.0149319376796484
Epoch [15/20], Loss: 0.0149
Epoch 16/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 16/20 Batches:  33%|███▎      | 1/3 [00:01<00:02,  1.02s/it]Epoch 16/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.44it/s]Epoch 16/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.24it/s]                                                                  epoch_loss: 0.012124153164525827
Epoch [16/20], Loss: 0.0121
Epoch 17/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 17/20 Batches:  33%|███▎      | 1/3 [00:01<00:02,  1.02s/it]Epoch 17/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.44it/s]Epoch 17/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.23it/s]                                                                  epoch_loss: 0.00994304164002339
Epoch [17/20], Loss: 0.0099
Best test AUROC: 0.7905, at epoch: 36
Epoch 18/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 18/20 Batches:  33%|███▎      | 1/3 [00:01<00:02,  1.02s/it]Epoch 18/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.44it/s]Epoch 18/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.24it/s]                                                                  epoch_loss: 0.008148176906009516
Epoch [18/20], Loss: 0.0081
Epoch 19/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 19/20 Batches:  33%|███▎      | 1/3 [00:01<00:02,  1.01s/it]Epoch 19/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.45it/s]Epoch 19/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.24it/s]                                                                  epoch_loss: 0.006696370507900913
Epoch [19/20], Loss: 0.0067
Epoch 20/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 20/20 Batches:  33%|███▎      | 1/3 [00:01<00:02,  1.01s/it]Epoch 20/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.45it/s]Epoch 20/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.24it/s]                                                                  epoch_loss: 0.005544483584041397
Epoch [20/20], Loss: 0.0055
best_test_auroc: 0.7905315034706637
