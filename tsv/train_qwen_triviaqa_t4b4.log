Map:   0%|          | 0/17944 [00:00<?, ? examples/s]Map:   1%|          | 117/17944 [00:00<00:15, 1145.29 examples/s]Map:   1%|▏         | 240/17944 [00:00<00:14, 1191.75 examples/s]Map:   2%|▏         | 368/17944 [00:00<00:14, 1227.38 examples/s]Map:   3%|▎         | 497/17944 [00:00<00:13, 1248.09 examples/s]Map:   3%|▎         | 625/17944 [00:00<00:13, 1256.92 examples/s]Map:   4%|▍         | 803/17944 [00:00<00:14, 1222.35 examples/s]Map:   5%|▌         | 933/17944 [00:00<00:13, 1242.18 examples/s]Map:   6%|▌         | 1062/17944 [00:00<00:13, 1254.27 examples/s]Map:   7%|▋         | 1192/17944 [00:00<00:13, 1264.23 examples/s]Map:   7%|▋         | 1321/17944 [00:01<00:13, 1269.25 examples/s]Map:   8%|▊         | 1451/17944 [00:01<00:12, 1275.40 examples/s]Map:   9%|▉         | 1581/17944 [00:01<00:12, 1280.94 examples/s]Map:  10%|▉         | 1711/17944 [00:01<00:12, 1283.54 examples/s]Map:  10%|█         | 1841/17944 [00:01<00:12, 1286.26 examples/s]Map:  11%|█▏        | 2030/17944 [00:01<00:12, 1271.90 examples/s]Map:  12%|█▏        | 2160/17944 [00:01<00:12, 1276.97 examples/s]Map:  13%|█▎        | 2289/17944 [00:01<00:12, 1278.25 examples/s]Map:  13%|█▎        | 2419/17944 [00:01<00:12, 1282.09 examples/s]Map:  14%|█▍        | 2549/17944 [00:02<00:11, 1284.67 examples/s]Map:  15%|█▍        | 2679/17944 [00:02<00:11, 1286.89 examples/s]Map:  16%|█▌        | 2809/17944 [00:02<00:11, 1288.74 examples/s]Map:  16%|█▋        | 2939/17944 [00:02<00:11, 1288.23 examples/s]Map:  17%|█▋        | 3069/17944 [00:02<00:11, 1288.72 examples/s]Map:  18%|█▊        | 3198/17944 [00:02<00:11, 1286.28 examples/s]Map:  19%|█▊        | 3328/17944 [00:02<00:11, 1288.05 examples/s]Map:  19%|█▉        | 3458/17944 [00:02<00:11, 1288.36 examples/s]Map:  20%|██        | 3651/17944 [00:02<00:11, 1285.07 examples/s]Map:  21%|██        | 3781/17944 [00:02<00:11, 1286.78 examples/s]Map:  22%|██▏       | 3911/17944 [00:03<00:10, 1287.43 examples/s]Map:  23%|██▎       | 4104/17944 [00:03<00:10, 1282.94 examples/s]Map:  24%|██▍       | 4297/17944 [00:03<00:10, 1282.04 examples/s]Map:  25%|██▍       | 4427/17944 [00:03<00:10, 1282.56 examples/s]Map:  25%|██▌       | 4557/17944 [00:03<00:10, 1283.78 examples/s]Map:  26%|██▋       | 4722/17944 [00:03<00:10, 1212.30 examples/s]Map:  27%|██▋       | 4852/17944 [00:03<00:10, 1232.73 examples/s]Map:  28%|██▊       | 4978/17944 [00:03<00:10, 1237.49 examples/s]Map:  28%|██▊       | 5107/17944 [00:04<00:10, 1251.60 examples/s]Map:  30%|██▉       | 5298/17944 [00:04<00:10, 1253.19 examples/s]Map:  30%|███       | 5429/17944 [00:04<00:09, 1264.81 examples/s]Map:  31%|███       | 5560/17944 [00:04<00:09, 1273.87 examples/s]Map:  32%|███▏      | 5691/17944 [00:04<00:09, 1280.42 examples/s]Map:  33%|███▎      | 5883/17944 [00:04<00:09, 1277.70 examples/s]Map:  34%|███▎      | 6013/17944 [00:04<00:09, 1281.77 examples/s]Map:  34%|███▍      | 6142/17944 [00:04<00:09, 1281.68 examples/s]Map:  35%|███▍      | 6273/17944 [00:04<00:09, 1285.80 examples/s]Map:  36%|███▌      | 6464/17944 [00:05<00:08, 1276.14 examples/s]Map:  37%|███▋      | 6592/17944 [00:05<00:08, 1273.43 examples/s]Map:  37%|███▋      | 6722/17944 [00:05<00:08, 1278.34 examples/s]Map:  38%|███▊      | 6853/17944 [00:05<00:08, 1283.10 examples/s]Map:  39%|███▉      | 6984/17944 [00:05<00:08, 1287.95 examples/s]Map:  40%|███▉      | 7115/17944 [00:05<00:08, 1289.70 examples/s]Map:  40%|████      | 7246/17944 [00:05<00:08, 1291.34 examples/s]Map:  41%|████      | 7377/17944 [00:05<00:08, 1293.81 examples/s]Map:  42%|████▏     | 7558/17944 [00:05<00:08, 1255.27 examples/s]Map:  43%|████▎     | 7686/17944 [00:06<00:08, 1258.92 examples/s]Map:  44%|████▎     | 7816/17944 [00:06<00:07, 1267.91 examples/s]Map:  44%|████▍     | 7946/17944 [00:06<00:07, 1275.54 examples/s]Map:  45%|████▌     | 8077/17944 [00:06<00:07, 1282.81 examples/s]Map:  46%|████▌     | 8207/17944 [00:06<00:07, 1286.79 examples/s]Map:  46%|████▋     | 8338/17944 [00:06<00:07, 1289.89 examples/s]Map:  47%|████▋     | 8468/17944 [00:06<00:07, 1292.34 examples/s]Map:  48%|████▊     | 8598/17944 [00:06<00:07, 1290.42 examples/s]Map:  49%|████▉     | 8790/17944 [00:06<00:07, 1283.05 examples/s]Map:  50%|████▉     | 8921/17944 [00:07<00:07, 1288.76 examples/s]Map:  51%|█████     | 9115/17944 [00:07<00:06, 1285.50 examples/s]Map:  52%|█████▏    | 9246/17944 [00:07<00:06, 1288.21 examples/s]Map:  52%|█████▏    | 9377/17944 [00:07<00:06, 1290.58 examples/s]Map:  53%|█████▎    | 9508/17944 [00:07<00:06, 1293.41 examples/s]Map:  54%|█████▍    | 9688/17944 [00:07<00:06, 1255.02 examples/s]Map:  55%|█████▍    | 9819/17944 [00:07<00:06, 1265.37 examples/s]Map:  55%|█████▌    | 9950/17944 [00:07<00:06, 1274.46 examples/s]Map:  66%|██████▌   | 11873/17944 [00:07<00:00, 6274.62 examples/s]Map:  77%|███████▋  | 13830/17944 [00:08<00:00, 10057.17 examples/s]Map:  88%|████████▊ | 15747/17944 [00:08<00:00, 12688.52 examples/s]Map:  99%|█████████▊| 17689/17944 [00:08<00:00, 14654.35 examples/s]Map: 100%|██████████| 17944/17944 [00:08<00:00, 2131.74 examples/s] 
Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]Loading checkpoint shards:  25%|██▌       | 1/4 [00:01<00:04,  1.35s/it]Loading checkpoint shards:  50%|█████     | 2/4 [00:02<00:02,  1.27s/it]Loading checkpoint shards:  75%|███████▌  | 3/4 [00:03<00:01,  1.28s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:04<00:00,  1.22s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:04<00:00,  1.25s/it]
  0%|          | 0/9960 [00:00<?, ?it/s]  2%|▏         | 154/9960 [00:00<00:06, 1532.75it/s]  3%|▎         | 319/9960 [00:00<00:06, 1597.07it/s]  5%|▍         | 488/9960 [00:00<00:05, 1635.12it/s]  7%|▋         | 654/9960 [00:00<00:05, 1641.82it/s]  8%|▊         | 820/9960 [00:00<00:05, 1647.54it/s] 10%|▉         | 988/9960 [00:00<00:05, 1656.14it/s] 12%|█▏        | 1157/9960 [00:00<00:05, 1663.79it/s] 13%|█▎        | 1324/9960 [00:00<00:05, 1654.33it/s] 15%|█▍        | 1490/9960 [00:00<00:05, 1655.89it/s] 17%|█▋        | 1657/9960 [00:01<00:05, 1657.88it/s] 18%|█▊        | 1826/9960 [00:01<00:04, 1667.40it/s] 20%|██        | 1998/9960 [00:01<00:04, 1680.78it/s] 22%|██▏       | 2169/9960 [00:01<00:04, 1689.33it/s] 23%|██▎       | 2338/9960 [00:01<00:04, 1685.70it/s] 25%|██▌       | 2507/9960 [00:01<00:04, 1679.03it/s] 27%|██▋       | 2675/9960 [00:01<00:04, 1678.74it/s] 29%|██▊       | 2843/9960 [00:01<00:04, 1678.47it/s] 30%|███       | 3011/9960 [00:01<00:04, 1666.00it/s] 32%|███▏      | 3178/9960 [00:01<00:04, 1658.90it/s] 34%|███▎      | 3346/9960 [00:02<00:03, 1663.73it/s] 35%|███▌      | 3513/9960 [00:02<00:03, 1654.24it/s] 37%|███▋      | 3679/9960 [00:02<00:03, 1610.56it/s] 39%|███▊      | 3841/9960 [00:02<00:03, 1613.07it/s] 40%|████      | 4003/9960 [00:02<00:03, 1563.40it/s] 42%|████▏     | 4163/9960 [00:02<00:03, 1572.69it/s] 43%|████▎     | 4325/9960 [00:02<00:03, 1584.48it/s] 45%|████▌     | 4487/9960 [00:02<00:03, 1594.78it/s] 47%|████▋     | 4649/9960 [00:02<00:03, 1601.49it/s] 48%|████▊     | 4820/9960 [00:02<00:03, 1632.09it/s] 50%|█████     | 4984/9960 [00:03<00:03, 1617.22it/s] 52%|█████▏    | 5156/9960 [00:03<00:02, 1646.80it/s] 53%|█████▎    | 5323/9960 [00:03<00:02, 1651.83it/s] 55%|█████▌    | 5490/9960 [00:03<00:02, 1655.60it/s] 57%|█████▋    | 5657/9960 [00:03<00:02, 1659.80it/s] 58%|█████▊    | 5824/9960 [00:03<00:02, 1653.96it/s] 60%|██████    | 5990/9960 [00:03<00:02, 1647.04it/s] 62%|██████▏   | 6155/9960 [00:03<00:02, 1641.28it/s] 63%|██████▎   | 6320/9960 [00:03<00:02, 1640.67it/s] 65%|██████▌   | 6485/9960 [00:03<00:02, 1564.40it/s] 67%|██████▋   | 6646/9960 [00:04<00:02, 1575.68it/s] 68%|██████▊   | 6811/9960 [00:04<00:01, 1596.75it/s] 70%|███████   | 6976/9960 [00:04<00:01, 1611.91it/s] 72%|███████▏  | 7138/9960 [00:04<00:01, 1614.17it/s] 73%|███████▎  | 7300/9960 [00:04<00:01, 1613.36it/s] 75%|███████▍  | 7462/9960 [00:04<00:01, 1606.80it/s] 77%|███████▋  | 7623/9960 [00:04<00:01, 1578.88it/s] 78%|███████▊  | 7782/9960 [00:04<00:01, 1549.51it/s] 80%|███████▉  | 7942/9960 [00:04<00:01, 1563.98it/s] 81%|████████▏ | 8103/9960 [00:04<00:01, 1575.78it/s] 83%|████████▎ | 8264/9960 [00:05<00:01, 1584.12it/s] 85%|████████▍ | 8423/9960 [00:05<00:00, 1584.69it/s] 86%|████████▌ | 8584/9960 [00:05<00:00, 1589.71it/s] 88%|████████▊ | 8744/9960 [00:05<00:00, 1588.55it/s] 89%|████████▉ | 8903/9960 [00:05<00:00, 1585.68it/s] 91%|█████████ | 9062/9960 [00:05<00:00, 1584.14it/s] 93%|█████████▎| 9225/9960 [00:05<00:00, 1596.02it/s] 94%|█████████▍| 9391/9960 [00:05<00:00, 1612.79it/s] 96%|█████████▌| 9562/9960 [00:05<00:00, 1641.06it/s] 98%|█████████▊| 9727/9960 [00:05<00:00, 1627.97it/s] 99%|█████████▉| 9892/9960 [00:06<00:00, 1632.14it/s]100%|██████████| 9960/9960 [00:06<00:00, 1624.45it/s]
Epoch 1/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]We detected that you are passing `past_key_values` as a tuple and this is deprecated and will be removed in v4.43. Please use an appropriate `Cache` class (https://huggingface.co/docs/transformers/v4.41.3/en/internal/generation_utils#transformers.Cache)
Epoch 1/20 Batches: 100%|██████████| 1/1 [00:01<00:00,  1.50s/it]                                                                 epoch_loss: 0.713432788848877
Epoch [1/20], Loss: 0.7134
Best test AUROC: 0.5651, at epoch: 0
Epoch [1/20],Test AUROC: 0.5651
Epoch 2/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 2/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                 epoch_loss: 0.6837285757064819
Epoch [2/20], Loss: 0.6837
Best test AUROC: 0.6549, at epoch: 1
Epoch [2/20],Test AUROC: 0.6549
Epoch 3/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 3/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                 epoch_loss: 0.6605188846588135
Epoch [3/20], Loss: 0.6605
Best test AUROC: 0.6978, at epoch: 2
Epoch [3/20],Test AUROC: 0.6978
Epoch 4/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 4/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                 epoch_loss: 0.6402559280395508
Epoch [4/20], Loss: 0.6403
Best test AUROC: 0.7248, at epoch: 3
Epoch [4/20],Test AUROC: 0.7248
Epoch 5/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 5/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                 epoch_loss: 0.6201121211051941
Epoch [5/20], Loss: 0.6201
Best test AUROC: 0.7444, at epoch: 4
Epoch [5/20],Test AUROC: 0.7444
Epoch 6/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 6/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                 epoch_loss: 0.5993313789367676
Epoch [6/20], Loss: 0.5993
Best test AUROC: 0.7562, at epoch: 5
Epoch [6/20],Test AUROC: 0.7562
Epoch 7/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 7/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                 epoch_loss: 0.5782656669616699
Epoch [7/20], Loss: 0.5783
Best test AUROC: 0.7636, at epoch: 6
Epoch [7/20],Test AUROC: 0.7636
Epoch 8/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 8/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                 epoch_loss: 0.5546872019767761
Epoch [8/20], Loss: 0.5547
Best test AUROC: 0.7691, at epoch: 7
Epoch [8/20],Test AUROC: 0.7691
Epoch 9/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 9/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                 epoch_loss: 0.5332655906677246
Epoch [9/20], Loss: 0.5333
Best test AUROC: 0.7720, at epoch: 8
Epoch [9/20],Test AUROC: 0.7720
Epoch 10/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 10/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                  epoch_loss: 0.5104397535324097
Epoch [10/20], Loss: 0.5104
Best test AUROC: 0.7747, at epoch: 9
Epoch [10/20],Test AUROC: 0.7747
Epoch 11/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 11/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                  epoch_loss: 0.4852631390094757
Epoch [11/20], Loss: 0.4853
Best test AUROC: 0.7801, at epoch: 10
Epoch [11/20],Test AUROC: 0.7801
Epoch 12/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 12/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.4557879865169525
Epoch [12/20], Loss: 0.4558
Best test AUROC: 0.7831, at epoch: 11
Epoch [12/20],Test AUROC: 0.7831
Epoch 13/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 13/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                  epoch_loss: 0.42359620332717896
Epoch [13/20], Loss: 0.4236
Epoch [13/20],Test AUROC: 0.7827
Epoch 14/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 14/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s]                                                                  epoch_loss: 0.39083707332611084
Epoch [14/20], Loss: 0.3908
Epoch [14/20],Test AUROC: 0.7787
Epoch 15/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 15/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.3716406226158142
Epoch [15/20], Loss: 0.3716
Epoch [15/20],Test AUROC: 0.7805
Epoch 16/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 16/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.3371371626853943
Epoch [16/20], Loss: 0.3371
Epoch [16/20],Test AUROC: 0.7793
Epoch 17/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 17/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.3219846189022064
Epoch [17/20], Loss: 0.3220
Epoch [17/20],Test AUROC: 0.7742
Epoch 18/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 18/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.29371675848960876
Epoch [18/20], Loss: 0.2937
Epoch [18/20],Test AUROC: 0.7742
Epoch 19/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 19/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.2807445526123047
Epoch [19/20], Loss: 0.2807
Epoch [19/20],Test AUROC: 0.7787
Epoch 20/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 20/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.2540801763534546
Epoch [20/20], Loss: 0.2541
Epoch [20/20],Test AUROC: 0.7800
  0%|          | 0/115 [00:00<?, ?it/s]  1%|          | 1/115 [00:00<00:55,  2.07it/s]  2%|▏         | 2/115 [00:01<00:58,  1.94it/s]  3%|▎         | 3/115 [00:01<00:48,  2.30it/s]  3%|▎         | 4/115 [00:01<00:52,  2.11it/s]  4%|▍         | 5/115 [00:02<00:53,  2.06it/s]  5%|▌         | 6/115 [00:02<00:50,  2.18it/s]  6%|▌         | 7/115 [00:03<00:46,  2.34it/s]  7%|▋         | 8/115 [00:03<00:45,  2.34it/s]  8%|▊         | 9/115 [00:04<00:47,  2.22it/s]  9%|▊         | 10/115 [00:04<00:50,  2.10it/s] 10%|▉         | 11/115 [00:04<00:44,  2.32it/s] 10%|█         | 12/115 [00:05<00:48,  2.11it/s] 11%|█▏        | 13/115 [00:06<00:49,  2.08it/s] 12%|█▏        | 14/115 [00:06<00:49,  2.04it/s] 13%|█▎        | 15/115 [00:06<00:44,  2.24it/s] 14%|█▍        | 16/115 [00:07<00:48,  2.04it/s] 15%|█▍        | 17/115 [00:08<00:50,  1.95it/s] 16%|█▌        | 18/115 [00:08<00:51,  1.87it/s] 17%|█▋        | 19/115 [00:08<00:45,  2.11it/s] 17%|█▋        | 20/115 [00:09<00:43,  2.17it/s] 18%|█▊        | 21/115 [00:09<00:45,  2.07it/s] 19%|█▉        | 22/115 [00:10<00:45,  2.05it/s] 20%|██        | 23/115 [00:10<00:40,  2.26it/s] 21%|██        | 24/115 [00:11<00:39,  2.32it/s] 22%|██▏       | 25/115 [00:11<00:36,  2.49it/s] 23%|██▎       | 26/115 [00:11<00:33,  2.62it/s] 23%|██▎       | 27/115 [00:12<00:37,  2.34it/s] 24%|██▍       | 28/115 [00:12<00:40,  2.15it/s] 25%|██▌       | 29/115 [00:13<00:44,  1.92it/s] 26%|██▌       | 30/115 [00:14<00:44,  1.90it/s] 27%|██▋       | 31/115 [00:14<00:40,  2.07it/s] 28%|██▊       | 32/115 [00:14<00:40,  2.05it/s] 29%|██▊       | 33/115 [00:15<00:42,  1.92it/s] 30%|██▉       | 34/115 [00:16<00:40,  1.98it/s] 30%|███       | 35/115 [00:16<00:39,  2.04it/s] 31%|███▏      | 36/115 [00:17<00:40,  1.97it/s] 32%|███▏      | 37/115 [00:17<00:40,  1.91it/s] 33%|███▎      | 38/115 [00:18<00:39,  1.95it/s] 34%|███▍      | 39/115 [00:18<00:36,  2.09it/s] 35%|███▍      | 40/115 [00:18<00:34,  2.16it/s] 36%|███▌      | 41/115 [00:19<00:37,  1.96it/s] 37%|███▋      | 42/115 [00:20<00:36,  1.98it/s] 37%|███▋      | 43/115 [00:20<00:42,  1.71it/s] 38%|███▊      | 44/115 [00:21<00:46,  1.52it/s] 39%|███▉      | 45/115 [00:22<00:43,  1.59it/s] 40%|████      | 46/115 [00:22<00:42,  1.61it/s] 41%|████      | 47/115 [00:23<00:39,  1.72it/s] 42%|████▏     | 48/115 [00:24<00:52,  1.28it/s] 43%|████▎     | 49/115 [00:25<00:48,  1.35it/s] 43%|████▎     | 50/115 [00:25<00:44,  1.45it/s] 44%|████▍     | 51/115 [00:26<00:40,  1.57it/s] 45%|████▌     | 52/115 [00:26<00:40,  1.55it/s] 46%|████▌     | 53/115 [00:27<00:39,  1.57it/s] 47%|████▋     | 54/115 [00:28<00:37,  1.63it/s] 48%|████▊     | 55/115 [00:28<00:31,  1.90it/s] 49%|████▊     | 56/115 [00:28<00:29,  2.01it/s] 50%|████▉     | 57/115 [00:29<00:25,  2.29it/s] 50%|█████     | 58/115 [00:29<00:23,  2.43it/s] 51%|█████▏    | 59/115 [00:29<00:21,  2.64it/s] 52%|█████▏    | 60/115 [00:30<00:23,  2.35it/s] 53%|█████▎    | 61/115 [00:30<00:23,  2.30it/s] 54%|█████▍    | 62/115 [00:31<00:24,  2.15it/s] 55%|█████▍    | 63/115 [00:31<00:26,  1.95it/s] 56%|█████▌    | 64/115 [00:32<00:25,  2.00it/s] 57%|█████▋    | 65/115 [00:32<00:24,  2.07it/s] 57%|█████▋    | 66/115 [00:33<00:24,  1.99it/s] 58%|█████▊    | 67/115 [00:33<00:22,  2.17it/s] 59%|█████▉    | 68/115 [00:34<00:20,  2.26it/s] 60%|██████    | 69/115 [00:34<00:21,  2.18it/s] 61%|██████    | 70/115 [00:35<00:21,  2.11it/s] 62%|██████▏   | 71/115 [00:35<00:20,  2.14it/s] 63%|██████▎   | 72/115 [00:36<00:20,  2.09it/s] 63%|██████▎   | 73/115 [00:36<00:18,  2.25it/s] 64%|██████▍   | 74/115 [00:36<00:17,  2.34it/s] 65%|██████▌   | 75/115 [00:37<00:17,  2.30it/s] 66%|██████▌   | 76/115 [00:37<00:18,  2.13it/s] 67%|██████▋   | 77/115 [00:38<00:18,  2.03it/s] 68%|██████▊   | 78/115 [00:38<00:16,  2.18it/s] 69%|██████▊   | 79/115 [00:39<00:17,  2.08it/s] 70%|██████▉   | 80/115 [00:39<00:15,  2.23it/s] 70%|███████   | 81/115 [00:40<00:14,  2.30it/s] 71%|███████▏  | 82/115 [00:40<00:14,  2.31it/s] 72%|███████▏  | 83/115 [00:40<00:13,  2.38it/s] 73%|███████▎  | 84/115 [00:41<00:13,  2.23it/s] 74%|███████▍  | 85/115 [00:41<00:13,  2.19it/s] 75%|███████▍  | 86/115 [00:42<00:13,  2.07it/s] 76%|███████▌  | 87/115 [00:43<00:15,  1.85it/s] 77%|███████▋  | 88/115 [00:43<00:14,  1.90it/s] 77%|███████▋  | 89/115 [00:43<00:11,  2.17it/s] 78%|███████▊  | 90/115 [00:44<00:11,  2.19it/s] 79%|███████▉  | 91/115 [00:45<00:12,  1.89it/s] 80%|████████  | 92/115 [00:45<00:12,  1.78it/s] 81%|████████  | 93/115 [00:46<00:12,  1.79it/s] 82%|████████▏ | 94/115 [00:46<00:11,  1.89it/s] 83%|████████▎ | 95/115 [00:47<00:10,  1.95it/s] 83%|████████▎ | 96/115 [00:47<00:10,  1.82it/s] 84%|████████▍ | 97/115 [00:48<00:09,  1.89it/s] 85%|████████▌ | 98/115 [00:48<00:08,  2.06it/s] 86%|████████▌ | 99/115 [00:49<00:07,  2.14it/s] 87%|████████▋ | 100/115 [00:49<00:06,  2.30it/s] 88%|████████▊ | 101/115 [00:50<00:06,  2.21it/s] 89%|████████▊ | 102/115 [00:50<00:06,  2.15it/s] 90%|████████▉ | 103/115 [00:50<00:05,  2.36it/s] 90%|█████████ | 104/115 [00:51<00:04,  2.27it/s] 91%|█████████▏| 105/115 [00:51<00:03,  2.58it/s] 92%|█████████▏| 106/115 [00:52<00:03,  2.38it/s] 93%|█████████▎| 107/115 [00:52<00:03,  2.45it/s] 94%|█████████▍| 108/115 [00:52<00:02,  2.64it/s] 95%|█████████▍| 109/115 [00:53<00:02,  2.77it/s] 96%|█████████▌| 110/115 [00:54<00:02,  1.87it/s] 97%|█████████▋| 111/115 [00:54<00:02,  1.66it/s] 97%|█████████▋| 112/115 [00:56<00:02,  1.07it/s] 98%|█████████▊| 113/115 [00:56<00:01,  1.28it/s] 99%|█████████▉| 114/115 [00:57<00:00,  1.46it/s]100%|██████████| 115/115 [00:57<00:00,  2.00it/s]
tsv_main1.py:175: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  exemplar_label = torch.tensor(exemplar_labels).cuda()
tsv_main1.py:182: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  augmented_labels = torch.concat((selected_labels, torch.tensor(exemplar_labels).clone().cuda()))
Epoch 1/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 1/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.24it/s]Epoch 1/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.63it/s]Epoch 1/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.31it/s]                                                                 epoch_loss: 0.3170992111166318
Epoch [1/20], Loss: 0.3171
Best test AUROC: 0.7899, at epoch: 20
Epoch 2/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 2/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.24it/s]Epoch 2/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.64it/s]Epoch 2/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.31it/s]                                                                 epoch_loss: 0.20306135714054108
Epoch [2/20], Loss: 0.2031
Best test AUROC: 0.7968, at epoch: 21
Epoch 3/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 3/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.23it/s]Epoch 3/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.63it/s]Epoch 3/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.31it/s]                                                                 epoch_loss: 0.16253571957349777
Epoch [3/20], Loss: 0.1625
Best test AUROC: 0.7983, at epoch: 22
Epoch 4/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 4/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.23it/s]Epoch 4/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.63it/s]Epoch 4/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.31it/s]                                                                 epoch_loss: 0.12676391005516052
Epoch [4/20], Loss: 0.1268
Epoch 5/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 5/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.23it/s]Epoch 5/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.64it/s]Epoch 5/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.31it/s]                                                                 epoch_loss: 0.09816625465949376
Epoch [5/20], Loss: 0.0982
Best test AUROC: 0.8009, at epoch: 24
Epoch 6/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 6/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.24it/s]Epoch 6/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.65it/s]Epoch 6/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.31it/s]                                                                 epoch_loss: 0.07931732013821602
Epoch [6/20], Loss: 0.0793
Best test AUROC: 0.8023, at epoch: 25
Epoch 7/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 7/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.23it/s]Epoch 7/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.64it/s]Epoch 7/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.31it/s]                                                                 epoch_loss: 0.06383027012149493
Epoch [7/20], Loss: 0.0638
Best test AUROC: 0.8031, at epoch: 26
Epoch 8/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 8/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.23it/s]Epoch 8/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.64it/s]Epoch 8/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.31it/s]                                                                 epoch_loss: 0.04933097089330355
Epoch [8/20], Loss: 0.0493
Best test AUROC: 0.8034, at epoch: 27
Epoch 9/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 9/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.24it/s]Epoch 9/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.64it/s]Epoch 9/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.31it/s]                                                                 epoch_loss: 0.039710032753646374
Epoch [9/20], Loss: 0.0397
Best test AUROC: 0.8043, at epoch: 28
Epoch 10/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 10/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.24it/s]Epoch 10/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.64it/s]Epoch 10/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.31it/s]                                                                  epoch_loss: 0.031750023985902466
Epoch [10/20], Loss: 0.0318
Best test AUROC: 0.8045, at epoch: 29
Epoch 11/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 11/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.24it/s]Epoch 11/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.64it/s]Epoch 11/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.31it/s]                                                                  epoch_loss: 0.025504604292412598
Epoch [11/20], Loss: 0.0255
Best test AUROC: 0.8046, at epoch: 30
Epoch 12/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 12/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.23it/s]Epoch 12/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.64it/s]Epoch 12/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.31it/s]                                                                  epoch_loss: 0.020479183023174603
Epoch [12/20], Loss: 0.0205
Best test AUROC: 0.8051, at epoch: 31
Epoch 13/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 13/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.24it/s]Epoch 13/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.64it/s]Epoch 13/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.31it/s]                                                                  epoch_loss: 0.016507594070086878
Epoch [13/20], Loss: 0.0165
Best test AUROC: 0.8056, at epoch: 32
Epoch 14/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 14/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.24it/s]Epoch 14/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.64it/s]Epoch 14/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.31it/s]                                                                  epoch_loss: 0.013375927849362293
Epoch [14/20], Loss: 0.0134
Epoch 15/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 15/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.24it/s]Epoch 15/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.64it/s]Epoch 15/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.31it/s]                                                                  epoch_loss: 0.010930216715981564
Epoch [15/20], Loss: 0.0109
Epoch 16/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 16/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.24it/s]Epoch 16/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.64it/s]Epoch 16/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.31it/s]                                                                  epoch_loss: 0.008995166203627983
Epoch [16/20], Loss: 0.0090
Epoch 17/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 17/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.24it/s]Epoch 17/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.64it/s]Epoch 17/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.31it/s]                                                                  epoch_loss: 0.007410580447564523
Epoch [17/20], Loss: 0.0074
Epoch 18/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 18/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.24it/s]Epoch 18/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.64it/s]Epoch 18/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.31it/s]                                                                  epoch_loss: 0.006140148577590783
Epoch [18/20], Loss: 0.0061
Epoch 19/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 19/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.24it/s]Epoch 19/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.64it/s]Epoch 19/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.31it/s]                                                                  epoch_loss: 0.005120890758310755
Epoch [19/20], Loss: 0.0051
Epoch 20/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 20/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.24it/s]Epoch 20/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.64it/s]Epoch 20/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.31it/s]                                                                  epoch_loss: 0.004289687067891161
Epoch [20/20], Loss: 0.0043
best_test_auroc: 0.80561821986721
