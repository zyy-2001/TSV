Map:   0%|          | 0/17944 [00:00<?, ? examples/s]Map:   1%|          | 120/17944 [00:00<00:15, 1174.73 examples/s]Map:   1%|▏         | 249/17944 [00:00<00:14, 1234.21 examples/s]Map:   2%|▏         | 378/17944 [00:00<00:14, 1253.13 examples/s]Map:   3%|▎         | 507/17944 [00:00<00:13, 1264.79 examples/s]Map:   4%|▎         | 637/17944 [00:00<00:13, 1272.42 examples/s]Map:   4%|▍         | 766/17944 [00:00<00:13, 1275.87 examples/s]Map:   5%|▌         | 958/17944 [00:00<00:13, 1275.53 examples/s]Map:   6%|▌         | 1087/17944 [00:00<00:13, 1277.22 examples/s]Map:   7%|▋         | 1217/17944 [00:00<00:13, 1280.99 examples/s]Map:   8%|▊         | 1346/17944 [00:01<00:12, 1281.28 examples/s]Map:   8%|▊         | 1476/17944 [00:01<00:12, 1283.55 examples/s]Map:   9%|▉         | 1606/17944 [00:01<00:12, 1284.88 examples/s]Map:  10%|█         | 1800/17944 [00:01<00:12, 1283.72 examples/s]Map:  11%|█         | 1929/17944 [00:01<00:12, 1282.65 examples/s]Map:  11%|█▏        | 2059/17944 [00:01<00:12, 1286.41 examples/s]Map:  12%|█▏        | 2189/17944 [00:01<00:12, 1288.18 examples/s]Map:  13%|█▎        | 2320/17944 [00:01<00:12, 1290.60 examples/s]Map:  14%|█▎        | 2451/17944 [00:01<00:11, 1291.80 examples/s]Map:  14%|█▍        | 2581/17944 [00:02<00:11, 1292.67 examples/s]Map:  15%|█▌        | 2776/17944 [00:02<00:11, 1291.07 examples/s]Map:  16%|█▌        | 2906/17944 [00:02<00:11, 1291.81 examples/s]Map:  17%|█▋        | 3037/17944 [00:02<00:11, 1293.12 examples/s]Map:  18%|█▊        | 3228/17944 [00:02<00:11, 1281.98 examples/s]Map:  19%|█▊        | 3358/17944 [00:02<00:11, 1284.01 examples/s]Map:  19%|█▉        | 3488/17944 [00:02<00:11, 1285.16 examples/s]Map:  20%|██        | 3618/17944 [00:02<00:11, 1287.51 examples/s]Map:  21%|██        | 3748/17944 [00:02<00:11, 1288.66 examples/s]Map:  22%|██▏       | 3878/17944 [00:03<00:10, 1289.42 examples/s]Map:  22%|██▏       | 4008/17944 [00:03<00:10, 1289.55 examples/s]Map:  23%|██▎       | 4138/17944 [00:03<00:10, 1289.80 examples/s]Map:  24%|██▍       | 4329/17944 [00:03<00:10, 1280.57 examples/s]Map:  25%|██▍       | 4459/17944 [00:03<00:10, 1283.15 examples/s]Map:  26%|██▌       | 4589/17944 [00:03<00:10, 1284.90 examples/s]Map:  27%|██▋       | 4777/17944 [00:03<00:10, 1269.87 examples/s]Map:  27%|██▋       | 4907/17944 [00:03<00:10, 1274.46 examples/s]Map:  28%|██▊       | 5037/17944 [00:03<00:10, 1278.15 examples/s]Map:  29%|██▉       | 5167/17944 [00:04<00:09, 1281.89 examples/s]Map:  30%|██▉       | 5296/17944 [00:04<00:09, 1281.51 examples/s]Map:  31%|███       | 5488/17944 [00:04<00:09, 1277.08 examples/s]Map:  31%|███▏      | 5619/17944 [00:04<00:09, 1283.18 examples/s]Map:  32%|███▏      | 5750/17944 [00:04<00:09, 1287.31 examples/s]Map:  33%|███▎      | 5882/17944 [00:04<00:09, 1291.70 examples/s]Map:  34%|███▎      | 6012/17944 [00:04<00:09, 1293.59 examples/s]Map:  35%|███▍      | 6205/17944 [00:04<00:09, 1285.82 examples/s]Map:  35%|███▌      | 6335/17944 [00:04<00:09, 1287.26 examples/s]Map:  36%|███▌      | 6466/17944 [00:05<00:08, 1288.75 examples/s]Map:  37%|███▋      | 6596/17944 [00:05<00:08, 1289.71 examples/s]Map:  38%|███▊      | 6790/17944 [00:05<00:08, 1287.91 examples/s]Map:  39%|███▊      | 6920/17944 [00:05<00:08, 1289.09 examples/s]Map:  40%|███▉      | 7112/17944 [00:05<00:08, 1281.33 examples/s]Map:  40%|████      | 7241/17944 [00:05<00:08, 1283.11 examples/s]Map:  41%|████      | 7371/17944 [00:05<00:08, 1284.98 examples/s]Map:  42%|████▏     | 7501/17944 [00:05<00:08, 1286.21 examples/s]Map:  43%|████▎     | 7631/17944 [00:05<00:08, 1288.38 examples/s]Map:  43%|████▎     | 7761/17944 [00:06<00:07, 1290.12 examples/s]Map:  44%|████▍     | 7940/17944 [00:06<00:07, 1251.70 examples/s]Map:  45%|████▍     | 8070/17944 [00:06<00:07, 1261.67 examples/s]Map:  46%|████▌     | 8200/17944 [00:06<00:07, 1269.35 examples/s]Map:  47%|████▋     | 8391/17944 [00:06<00:07, 1267.56 examples/s]Map:  47%|████▋     | 8521/17944 [00:06<00:07, 1273.45 examples/s]Map:  48%|████▊     | 8651/17944 [00:06<00:07, 1277.88 examples/s]Map:  49%|████▉     | 8781/17944 [00:06<00:07, 1281.06 examples/s]Map:  50%|████▉     | 8911/17944 [00:06<00:07, 1284.80 examples/s]Map:  51%|█████     | 9089/17944 [00:07<00:07, 1245.20 examples/s]Map:  51%|█████▏    | 9219/17944 [00:07<00:06, 1256.39 examples/s]Map:  52%|█████▏    | 9349/17944 [00:07<00:06, 1263.96 examples/s]Map:  53%|█████▎    | 9537/17944 [00:07<00:06, 1255.54 examples/s]Map:  54%|█████▍    | 9667/17944 [00:07<00:06, 1264.88 examples/s]Map:  55%|█████▍    | 9797/17944 [00:07<00:06, 1272.76 examples/s]Map:  55%|█████▌    | 9928/17944 [00:07<00:06, 1279.27 examples/s]Map:  64%|██████▍   | 11564/17944 [00:07<00:01, 5556.12 examples/s]Map:  74%|███████▍  | 13312/17944 [00:07<00:00, 8993.53 examples/s]Map:  85%|████████▍ | 15249/17944 [00:08<00:00, 11994.27 examples/s]Map:  96%|█████████▌| 17183/17944 [00:08<00:00, 14149.29 examples/s]Map: 100%|██████████| 17944/17944 [00:08<00:00, 2138.46 examples/s] 
Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]Loading checkpoint shards:  25%|██▌       | 1/4 [00:01<00:03,  1.24s/it]Loading checkpoint shards:  50%|█████     | 2/4 [00:02<00:02,  1.25s/it]Loading checkpoint shards:  75%|███████▌  | 3/4 [00:03<00:01,  1.23s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:04<00:00,  1.19s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:04<00:00,  1.21s/it]
  0%|          | 0/9960 [00:00<?, ?it/s]  2%|▏         | 155/9960 [00:00<00:06, 1549.20it/s]  3%|▎         | 310/9960 [00:00<00:06, 1513.86it/s]  5%|▍         | 476/9960 [00:00<00:06, 1577.21it/s]  6%|▋         | 645/9960 [00:00<00:05, 1621.24it/s]  8%|▊         | 814/9960 [00:00<00:05, 1643.45it/s] 10%|▉         | 985/9960 [00:00<00:05, 1663.12it/s] 12%|█▏        | 1157/9960 [00:00<00:05, 1681.34it/s] 13%|█▎        | 1330/9960 [00:00<00:05, 1695.18it/s] 15%|█▌        | 1501/9960 [00:00<00:04, 1697.40it/s] 17%|█▋        | 1672/9960 [00:01<00:04, 1699.92it/s] 19%|█▊        | 1843/9960 [00:01<00:04, 1658.22it/s] 20%|██        | 2018/9960 [00:01<00:04, 1685.06it/s] 22%|██▏       | 2194/9960 [00:01<00:04, 1704.74it/s] 24%|██▍       | 2366/9960 [00:01<00:04, 1706.85it/s] 25%|██▌       | 2537/9960 [00:01<00:04, 1704.32it/s] 27%|██▋       | 2709/9960 [00:01<00:04, 1706.81it/s] 29%|██▉       | 2880/9960 [00:01<00:04, 1694.59it/s] 31%|███       | 3050/9960 [00:01<00:04, 1693.58it/s] 32%|███▏      | 3220/9960 [00:01<00:03, 1689.81it/s] 34%|███▍      | 3390/9960 [00:02<00:04, 1640.80it/s] 36%|███▌      | 3559/9960 [00:02<00:03, 1652.74it/s] 37%|███▋      | 3725/9960 [00:02<00:03, 1651.55it/s] 39%|███▉      | 3891/9960 [00:02<00:03, 1644.05it/s] 41%|████      | 4056/9960 [00:02<00:03, 1635.66it/s] 42%|████▏     | 4220/9960 [00:02<00:03, 1631.45it/s] 44%|████▍     | 4384/9960 [00:02<00:03, 1629.28it/s] 46%|████▌     | 4550/9960 [00:02<00:03, 1638.07it/s] 47%|████▋     | 4717/9960 [00:02<00:03, 1646.84it/s] 49%|████▉     | 4887/9960 [00:02<00:03, 1662.20it/s] 51%|█████     | 5064/9960 [00:03<00:02, 1692.56it/s] 53%|█████▎    | 5239/9960 [00:03<00:02, 1707.95it/s] 54%|█████▍    | 5412/9960 [00:03<00:02, 1714.05it/s] 56%|█████▌    | 5585/9960 [00:03<00:02, 1718.30it/s] 58%|█████▊    | 5758/9960 [00:03<00:02, 1721.39it/s] 60%|█████▉    | 5931/9960 [00:03<00:02, 1722.13it/s] 61%|██████▏   | 6104/9960 [00:03<00:02, 1724.35it/s] 63%|██████▎   | 6278/9960 [00:03<00:02, 1727.84it/s] 65%|██████▍   | 6451/9960 [00:03<00:02, 1671.95it/s] 66%|██████▋   | 6622/9960 [00:03<00:01, 1681.39it/s] 68%|██████▊   | 6796/9960 [00:04<00:01, 1698.04it/s] 70%|██████▉   | 6970/9960 [00:04<00:01, 1709.22it/s] 72%|███████▏  | 7143/9960 [00:04<00:01, 1715.14it/s] 73%|███████▎  | 7315/9960 [00:04<00:01, 1715.26it/s] 75%|███████▌  | 7487/9960 [00:04<00:01, 1699.91it/s] 77%|███████▋  | 7658/9960 [00:04<00:01, 1683.59it/s] 79%|███████▊  | 7831/9960 [00:04<00:01, 1696.07it/s] 80%|████████  | 8001/9960 [00:04<00:01, 1683.93it/s] 82%|████████▏ | 8173/9960 [00:04<00:01, 1691.98it/s] 84%|████████▍ | 8345/9960 [00:04<00:00, 1698.21it/s] 85%|████████▌ | 8515/9960 [00:05<00:00, 1691.12it/s] 87%|████████▋ | 8685/9960 [00:05<00:00, 1690.59it/s] 89%|████████▉ | 8857/9960 [00:05<00:00, 1698.11it/s] 91%|█████████ | 9034/9960 [00:05<00:00, 1718.35it/s] 92%|█████████▏| 9208/9960 [00:05<00:00, 1721.74it/s] 94%|█████████▍| 9384/9960 [00:05<00:00, 1731.34it/s] 96%|█████████▌| 9558/9960 [00:05<00:00, 1730.11it/s] 98%|█████████▊| 9732/9960 [00:05<00:00, 1694.69it/s] 99%|█████████▉| 9902/9960 [00:05<00:00, 1675.79it/s]100%|██████████| 9960/9960 [00:05<00:00, 1683.60it/s]
Epoch 1/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]We detected that you are passing `past_key_values` as a tuple and this is deprecated and will be removed in v4.43. Please use an appropriate `Cache` class (https://huggingface.co/docs/transformers/v4.41.3/en/internal/generation_utils#transformers.Cache)
Epoch 1/20 Batches: 100%|██████████| 1/1 [00:01<00:00,  1.71s/it]                                                                 epoch_loss: 0.692337691783905
Epoch [1/20], Loss: 0.6923
Best test AUROC: 0.5047, at epoch: 0
Epoch [1/20],Test AUROC: 0.5047
Epoch 2/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 2/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.09it/s]                                                                 epoch_loss: 0.6874926090240479
Epoch [2/20], Loss: 0.6875
Best test AUROC: 0.6667, at epoch: 1
Epoch [2/20],Test AUROC: 0.6667
Epoch 3/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 3/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.09it/s]                                                                 epoch_loss: 0.6750540733337402
Epoch [3/20], Loss: 0.6751
Epoch [3/20],Test AUROC: 0.6477
Epoch 4/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 4/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.08it/s]                                                                 epoch_loss: 0.6538517475128174
Epoch [4/20], Loss: 0.6539
Best test AUROC: 0.6672, at epoch: 3
Epoch [4/20],Test AUROC: 0.6672
Epoch 5/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 5/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.09it/s]                                                                 epoch_loss: 0.6334594488143921
Epoch [5/20], Loss: 0.6335
Best test AUROC: 0.6732, at epoch: 4
Epoch [5/20],Test AUROC: 0.6732
Epoch 6/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 6/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.09it/s]                                                                 epoch_loss: 0.5884916186332703
Epoch [6/20], Loss: 0.5885
Best test AUROC: 0.6922, at epoch: 5
Epoch [6/20],Test AUROC: 0.6922
Epoch 7/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 7/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.09it/s]                                                                 epoch_loss: 0.544405996799469
Epoch [7/20], Loss: 0.5444
Best test AUROC: 0.7146, at epoch: 6
Epoch [7/20],Test AUROC: 0.7146
Epoch 8/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 8/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.08it/s]                                                                 epoch_loss: 0.48931652307510376
Epoch [8/20], Loss: 0.4893
Best test AUROC: 0.7315, at epoch: 7
Epoch [8/20],Test AUROC: 0.7315
Epoch 9/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 9/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.08it/s]                                                                 epoch_loss: 0.42906975746154785
Epoch [9/20], Loss: 0.4291
Best test AUROC: 0.7442, at epoch: 8
Epoch [9/20],Test AUROC: 0.7442
Epoch 10/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 10/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.08it/s]                                                                  epoch_loss: 0.3733232021331787
Epoch [10/20], Loss: 0.3733
Best test AUROC: 0.7542, at epoch: 9
Epoch [10/20],Test AUROC: 0.7542
Epoch 11/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 11/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.07it/s]                                                                  epoch_loss: 0.32982465624809265
Epoch [11/20], Loss: 0.3298
Best test AUROC: 0.7615, at epoch: 10
Epoch [11/20],Test AUROC: 0.7615
Epoch 12/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 12/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.06it/s]                                                                  epoch_loss: 0.29426807165145874
Epoch [12/20], Loss: 0.2943
Best test AUROC: 0.7673, at epoch: 11
Epoch [12/20],Test AUROC: 0.7673
Epoch 13/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 13/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.07it/s]                                                                  epoch_loss: 0.26057547330856323
Epoch [13/20], Loss: 0.2606
Best test AUROC: 0.7714, at epoch: 12
Epoch [13/20],Test AUROC: 0.7714
Epoch 14/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 14/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.08it/s]                                                                  epoch_loss: 0.22754207253456116
Epoch [14/20], Loss: 0.2275
Best test AUROC: 0.7739, at epoch: 13
Epoch [14/20],Test AUROC: 0.7739
Epoch 15/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 15/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.08it/s]                                                                  epoch_loss: 0.1936638355255127
Epoch [15/20], Loss: 0.1937
Best test AUROC: 0.7757, at epoch: 14
Epoch [15/20],Test AUROC: 0.7757
Epoch 16/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 16/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.08it/s]                                                                  epoch_loss: 0.16369295120239258
Epoch [16/20], Loss: 0.1637
Best test AUROC: 0.7773, at epoch: 15
Epoch [16/20],Test AUROC: 0.7773
Epoch 17/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 17/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.08it/s]                                                                  epoch_loss: 0.13786868751049042
Epoch [17/20], Loss: 0.1379
Best test AUROC: 0.7785, at epoch: 16
Epoch [17/20],Test AUROC: 0.7785
Epoch 18/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 18/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.08it/s]                                                                  epoch_loss: 0.11401227861642838
Epoch [18/20], Loss: 0.1140
Best test AUROC: 0.7795, at epoch: 17
Epoch [18/20],Test AUROC: 0.7795
Epoch 19/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 19/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.08it/s]                                                                  epoch_loss: 0.09133666753768921
Epoch [19/20], Loss: 0.0913
Best test AUROC: 0.7801, at epoch: 18
Epoch [19/20],Test AUROC: 0.7801
Epoch 20/20 Batches:   0%|          | 0/1 [00:00<?, ?it/s]Epoch 20/20 Batches: 100%|██████████| 1/1 [00:00<00:00,  1.09it/s]                                                                  epoch_loss: 0.06989020109176636
Epoch [20/20], Loss: 0.0699
Best test AUROC: 0.7805, at epoch: 19
Epoch [20/20],Test AUROC: 0.7805
  0%|          | 0/115 [00:00<?, ?it/s]  1%|          | 1/115 [00:00<00:54,  2.10it/s]  2%|▏         | 2/115 [00:00<00:56,  1.99it/s]  3%|▎         | 3/115 [00:01<00:47,  2.34it/s]  3%|▎         | 4/115 [00:01<00:51,  2.15it/s]  4%|▍         | 5/115 [00:02<00:52,  2.10it/s]  5%|▌         | 6/115 [00:02<00:49,  2.22it/s]  6%|▌         | 7/115 [00:03<00:45,  2.39it/s]  7%|▋         | 8/115 [00:03<00:44,  2.39it/s]  8%|▊         | 9/115 [00:04<00:46,  2.26it/s]  9%|▊         | 10/115 [00:04<00:48,  2.14it/s] 10%|▉         | 11/115 [00:04<00:43,  2.37it/s] 10%|█         | 12/115 [00:05<00:47,  2.15it/s] 11%|█▏        | 13/115 [00:05<00:48,  2.12it/s] 12%|█▏        | 14/115 [00:06<00:48,  2.08it/s] 13%|█▎        | 15/115 [00:06<00:43,  2.30it/s] 14%|█▍        | 16/115 [00:07<00:47,  2.08it/s] 15%|█▍        | 17/115 [00:07<00:49,  1.99it/s] 16%|█▌        | 18/115 [00:08<00:50,  1.91it/s] 17%|█▋        | 19/115 [00:08<00:44,  2.15it/s] 17%|█▋        | 20/115 [00:09<00:42,  2.21it/s] 18%|█▊        | 21/115 [00:09<00:44,  2.11it/s] 19%|█▉        | 22/115 [00:10<00:44,  2.09it/s] 20%|██        | 23/115 [00:10<00:39,  2.31it/s] 21%|██        | 24/115 [00:10<00:38,  2.36it/s] 22%|██▏       | 25/115 [00:11<00:35,  2.54it/s] 23%|██▎       | 26/115 [00:11<00:33,  2.67it/s] 23%|██▎       | 27/115 [00:12<00:36,  2.39it/s] 24%|██▍       | 28/115 [00:12<00:39,  2.19it/s] 25%|██▌       | 29/115 [00:13<00:43,  1.96it/s] 26%|██▌       | 30/115 [00:13<00:43,  1.94it/s] 27%|██▋       | 31/115 [00:14<00:39,  2.11it/s] 28%|██▊       | 32/115 [00:14<00:39,  2.09it/s] 29%|██▊       | 33/115 [00:15<00:42,  1.95it/s] 30%|██▉       | 34/115 [00:15<00:40,  2.02it/s] 30%|███       | 35/115 [00:16<00:38,  2.08it/s] 31%|███▏      | 36/115 [00:16<00:39,  2.01it/s] 32%|███▏      | 37/115 [00:17<00:40,  1.94it/s] 33%|███▎      | 38/115 [00:17<00:38,  1.99it/s] 34%|███▍      | 39/115 [00:18<00:35,  2.13it/s] 35%|███▍      | 40/115 [00:18<00:34,  2.20it/s] 36%|███▌      | 41/115 [00:19<00:37,  1.99it/s] 37%|███▋      | 42/115 [00:19<00:36,  2.01it/s] 37%|███▋      | 43/115 [00:20<00:41,  1.74it/s] 38%|███▊      | 44/115 [00:21<00:53,  1.34it/s] 39%|███▉      | 45/115 [00:22<00:48,  1.45it/s] 40%|████      | 46/115 [00:22<00:45,  1.51it/s] 41%|████      | 47/115 [00:23<00:41,  1.64it/s] 42%|████▏     | 48/115 [00:24<00:45,  1.47it/s] 43%|████▎     | 49/115 [00:24<00:44,  1.50it/s] 43%|████▎     | 50/115 [00:25<00:41,  1.58it/s] 44%|████▍     | 51/115 [00:25<00:38,  1.68it/s] 45%|████▌     | 52/115 [00:26<00:38,  1.64it/s] 46%|████▌     | 53/115 [00:27<00:37,  1.64it/s] 47%|████▋     | 54/115 [00:27<00:36,  1.69it/s] 48%|████▊     | 55/115 [00:27<00:30,  1.97it/s] 49%|████▊     | 56/115 [00:28<00:28,  2.08it/s] 50%|████▉     | 57/115 [00:28<00:24,  2.36it/s] 50%|█████     | 58/115 [00:28<00:22,  2.49it/s] 51%|█████▏    | 59/115 [00:29<00:20,  2.71it/s] 52%|█████▏    | 60/115 [00:29<00:22,  2.40it/s] 53%|█████▎    | 61/115 [00:30<00:23,  2.34it/s] 54%|█████▍    | 62/115 [00:30<00:24,  2.19it/s] 55%|█████▍    | 63/115 [00:31<00:26,  1.99it/s] 56%|█████▌    | 64/115 [00:31<00:24,  2.04it/s] 57%|█████▋    | 65/115 [00:32<00:23,  2.11it/s] 57%|█████▋    | 66/115 [00:32<00:24,  2.03it/s] 58%|█████▊    | 67/115 [00:33<00:21,  2.21it/s] 59%|█████▉    | 68/115 [00:33<00:20,  2.30it/s] 60%|██████    | 69/115 [00:34<00:20,  2.22it/s] 61%|██████    | 70/115 [00:34<00:20,  2.15it/s] 62%|██████▏   | 71/115 [00:34<00:20,  2.18it/s] 63%|██████▎   | 72/115 [00:35<00:20,  2.13it/s] 63%|██████▎   | 73/115 [00:35<00:18,  2.29it/s] 64%|██████▍   | 74/115 [00:36<00:17,  2.38it/s] 65%|██████▌   | 75/115 [00:36<00:17,  2.35it/s] 66%|██████▌   | 76/115 [00:37<00:17,  2.17it/s] 67%|██████▋   | 77/115 [00:37<00:18,  2.07it/s] 68%|██████▊   | 78/115 [00:38<00:16,  2.23it/s] 69%|██████▊   | 79/115 [00:38<00:16,  2.12it/s] 70%|██████▉   | 80/115 [00:38<00:15,  2.28it/s] 70%|███████   | 81/115 [00:39<00:14,  2.34it/s] 71%|███████▏  | 82/115 [00:39<00:14,  2.35it/s] 72%|███████▏  | 83/115 [00:40<00:13,  2.43it/s] 73%|███████▎  | 84/115 [00:40<00:13,  2.28it/s] 74%|███████▍  | 85/115 [00:41<00:13,  2.23it/s] 75%|███████▍  | 86/115 [00:41<00:13,  2.11it/s] 76%|███████▌  | 87/115 [00:42<00:14,  1.88it/s] 77%|███████▋  | 88/115 [00:42<00:13,  1.93it/s] 77%|███████▋  | 89/115 [00:43<00:11,  2.22it/s] 78%|███████▊  | 90/115 [00:43<00:11,  2.24it/s] 79%|███████▉  | 91/115 [00:44<00:12,  1.93it/s] 80%|████████  | 92/115 [00:44<00:12,  1.82it/s] 81%|████████  | 93/115 [00:45<00:12,  1.82it/s] 82%|████████▏ | 94/115 [00:45<00:10,  1.93it/s] 83%|████████▎ | 95/115 [00:46<00:10,  1.98it/s] 83%|████████▎ | 96/115 [00:46<00:10,  1.86it/s] 84%|████████▍ | 97/115 [00:47<00:09,  1.92it/s] 85%|████████▌ | 98/115 [00:47<00:08,  2.10it/s] 86%|████████▌ | 99/115 [00:48<00:07,  2.18it/s] 87%|████████▋ | 100/115 [00:48<00:06,  2.34it/s] 88%|████████▊ | 101/115 [00:49<00:06,  2.25it/s] 89%|████████▊ | 102/115 [00:49<00:05,  2.19it/s] 90%|████████▉ | 103/115 [00:49<00:05,  2.40it/s] 90%|█████████ | 104/115 [00:50<00:04,  2.31it/s] 91%|█████████▏| 105/115 [00:50<00:03,  2.63it/s] 92%|█████████▏| 106/115 [00:51<00:03,  2.43it/s] 93%|█████████▎| 107/115 [00:51<00:03,  2.50it/s] 94%|█████████▍| 108/115 [00:51<00:02,  2.69it/s] 95%|█████████▍| 109/115 [00:52<00:02,  2.82it/s] 96%|█████████▌| 110/115 [00:52<00:02,  1.90it/s] 97%|█████████▋| 111/115 [00:53<00:02,  1.68it/s] 97%|█████████▋| 112/115 [00:55<00:02,  1.23it/s] 98%|█████████▊| 113/115 [00:55<00:01,  1.44it/s] 99%|█████████▉| 114/115 [00:55<00:00,  1.61it/s]100%|██████████| 115/115 [00:55<00:00,  2.05it/s]
tsv_main2.py:175: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  exemplar_label = torch.tensor(exemplar_labels).cuda()
tsv_main2.py:182: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  augmented_labels = torch.concat((selected_labels, torch.tensor(exemplar_labels).clone().cuda()))
Epoch 1/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 1/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.32it/s]Epoch 1/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.76it/s]Epoch 1/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.37it/s]                                                                 epoch_loss: 0.023067643865942955
Epoch [1/20], Loss: 0.0231
Best test AUROC: 0.7813, at epoch: 20
Epoch 2/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 2/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.32it/s]Epoch 2/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.78it/s]Epoch 2/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.38it/s]                                                                 epoch_loss: 0.019574408885091543
Epoch [2/20], Loss: 0.0196
Best test AUROC: 0.7818, at epoch: 21
Epoch 3/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 3/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.32it/s]Epoch 3/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.77it/s]Epoch 3/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.37it/s]                                                                 epoch_loss: 0.01741689443588257
Epoch [3/20], Loss: 0.0174
Best test AUROC: 0.7824, at epoch: 22
Epoch 4/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 4/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.31it/s]Epoch 4/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.77it/s]Epoch 4/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.37it/s]                                                                 epoch_loss: 0.01613688701763749
Epoch [4/20], Loss: 0.0161
Best test AUROC: 0.7828, at epoch: 23
Epoch 5/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 5/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.31it/s]Epoch 5/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.76it/s]Epoch 5/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.37it/s]                                                                 epoch_loss: 0.015430400613695383
Epoch [5/20], Loss: 0.0154
Best test AUROC: 0.7834, at epoch: 24
Epoch 6/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 6/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.32it/s]Epoch 6/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.77it/s]Epoch 6/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.37it/s]                                                                 epoch_loss: 0.015113521444921693
Epoch [6/20], Loss: 0.0151
Best test AUROC: 0.7836, at epoch: 25
Epoch 7/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 7/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.31it/s]Epoch 7/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.77it/s]Epoch 7/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.37it/s]                                                                 epoch_loss: 0.01504826289601624
Epoch [7/20], Loss: 0.0150
Best test AUROC: 0.7840, at epoch: 26
Epoch 8/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 8/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.32it/s]Epoch 8/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.78it/s]Epoch 8/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.38it/s]                                                                 epoch_loss: 0.01515910568802307
Epoch [8/20], Loss: 0.0152
Best test AUROC: 0.7842, at epoch: 27
Epoch 9/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 9/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.32it/s]Epoch 9/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.78it/s]Epoch 9/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.37it/s]                                                                 epoch_loss: 0.015383548995790383
Epoch [9/20], Loss: 0.0154
Best test AUROC: 0.7844, at epoch: 28
Epoch 10/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 10/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.32it/s]Epoch 10/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.77it/s]Epoch 10/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.38it/s]                                                                  epoch_loss: 0.015688283902515348
Epoch [10/20], Loss: 0.0157
Best test AUROC: 0.7848, at epoch: 29
Epoch 11/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 11/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.32it/s]Epoch 11/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.78it/s]Epoch 11/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.38it/s]                                                                  epoch_loss: 0.016044296527979895
Epoch [11/20], Loss: 0.0160
Best test AUROC: 0.7849, at epoch: 30
Epoch 12/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 12/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.33it/s]Epoch 12/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.79it/s]Epoch 12/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.39it/s]                                                                  epoch_loss: 0.01643952171919712
Epoch [12/20], Loss: 0.0164
Best test AUROC: 0.7850, at epoch: 31
Epoch 13/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 13/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.32it/s]Epoch 13/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.78it/s]Epoch 13/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.38it/s]                                                                  epoch_loss: 0.016858796336843323
Epoch [13/20], Loss: 0.0169
Best test AUROC: 0.7853, at epoch: 32
Epoch 14/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 14/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.32it/s]Epoch 14/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.78it/s]Epoch 14/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.38it/s]                                                                  epoch_loss: 0.017290195532647584
Epoch [14/20], Loss: 0.0173
Best test AUROC: 0.7855, at epoch: 33
Epoch 15/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 15/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.32it/s]Epoch 15/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.78it/s]Epoch 15/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.38it/s]                                                                  epoch_loss: 0.017731094504900586
Epoch [15/20], Loss: 0.0177
Best test AUROC: 0.7855, at epoch: 34
Epoch 16/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 16/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.32it/s]Epoch 16/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.79it/s]Epoch 16/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.39it/s]                                                                  epoch_loss: 0.018179960467629524
Epoch [16/20], Loss: 0.0182
Best test AUROC: 0.7856, at epoch: 35
Epoch 17/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 17/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.32it/s]Epoch 17/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.77it/s]Epoch 17/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.38it/s]                                                                  epoch_loss: 0.0186300485523437
Epoch [17/20], Loss: 0.0186
Best test AUROC: 0.7857, at epoch: 36
Epoch 18/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 18/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.32it/s]Epoch 18/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.77it/s]Epoch 18/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.38it/s]                                                                  epoch_loss: 0.019075899235152367
Epoch [18/20], Loss: 0.0191
Best test AUROC: 0.7858, at epoch: 37
Epoch 19/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 19/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.34it/s]Epoch 19/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.79it/s]Epoch 19/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.39it/s]                                                                  epoch_loss: 0.01952041322056175
Epoch [19/20], Loss: 0.0195
Best test AUROC: 0.7859, at epoch: 38
Epoch 20/20 Batches:   0%|          | 0/3 [00:00<?, ?it/s]/data/zyy/LLM/tsv/train_utils.py:26: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(labels, dtype=torch.long, device=device)
Epoch 20/20 Batches:  33%|███▎      | 1/3 [00:00<00:01,  1.33it/s]Epoch 20/20 Batches:  67%|██████▋   | 2/3 [00:01<00:00,  1.79it/s]Epoch 20/20 Batches: 100%|██████████| 3/3 [00:02<00:00,  1.39it/s]                                                                  epoch_loss: 0.019955735705176874
Epoch [20/20], Loss: 0.0200
Best test AUROC: 0.7860, at epoch: 39
best_test_auroc: 0.785956522950035
